#define ASPECT_FILL(_ASPECT) \
	aspect: _ASPECT _ASPECT; aspect_preference: NONE;
#define TILED_PATTERN(_WIDTH, _HEIGHT) \
	fill { size { relative: 0.0 0.0; offset: _WIDTH _HEIGHT; } }
#define TILED_HORIZ(_WIDTH) \
	fill { size { relative: 0.0 1.0; offset: _WIDTH 0; } }
#define FIXED_SIZE(_WIDTH, _HEIGHT) \
	min: _WIDTH _HEIGHT; max: _WIDTH _HEIGHT; fixed: 1 1;
#define STAY_ON(PART)	\
	rel1.to: PART; rel2.to: PART;
#define PART_SHINE(NAME, STAY, IMAGE, BORDER)\
	part { name: NAME"_SH";					\
		description { state: "default" 0.0;	\
			image.normal: IMAGE;			\
			image.border: BORDER;			\
			STAY_ON(STAY)					\
		}									\
	}
#define PART_SHINE_CLIPTO(NAME, STAY, IMAGE, BORDER, CLIPTO)\
	part { name: NAME"_SH";					\
		clip_to: CLIPTO;					\
		description { state: "default" 0.0;	\
			image.normal: IMAGE;			\
			image.border: BORDER;			\
			STAY_ON(STAY)					\
		}									\
	}

#define COLOR_STATE(NAME,COLOR_CLASS)		\
description { state: NAME 0.0;				\
	inherit: "default" 0.0;					\
	color_class: COLOR_CLASS;				\
	}	

#define IMAGE_STATE(NAME,PIXMAP)			\
description { state: NAME 0.0;				\
	inherit: "default" 0.0;					\
	image.normal: PIXMAP;					\
	}

//Over Program
#define OVER(TARGET,SOURCE,STATE_DEF,STATE_OVR)	\
program {	name: "over_"TARGET;				\
			signal: "mouse,in";					\
			source: SOURCE;						\
			action: STATE_SET STATE_OVR 0.0;	\
			transition: LINEAR 0.0;				\
			target: TARGET;						\
		}										\
program {	name: "over_"TARGET"_out";			\
			signal: "mouse,out";				\
			source: SOURCE;						\
			action: STATE_SET STATE_DEF 0.0;	\
			transition: LINEAR 0.0;				\
			target: TARGET;						\
		}

//Click Program
#define CLICK(TARGET,SOURCE,STATE_DEF,STATE_CLK)	\
program {	name: "click_"TARGET;					\
			signal: "mouse,down,1";					\
			source: SOURCE;							\
			action: STATE_SET STATE_CLK 0.0;		\
			transition: LINEAR 0.0;					\
			target: TARGET;							\
		}											\
program {	name: "click_"TARGET"_out";				\
			signal: "mouse,up,1";					\
			source: SOURCE;							\
			action: STATE_SET STATE_DEF 0.0;		\
			transition: LINEAR 0.0;					\
			target: TARGET;							\
		}

//Enable/Disable Program
#define DISABLE(TARGET,STATE_ENABLE,STATE_DISABLE)	\
program {						\
			signal: "e,state,enable"; source: "e";	\
			action: STATE_SET STATE_ENABLE 0.0;		\
			transition: LINEAR 0.0;					\
			target: TARGET;							\
		}											\
program {						\
			signal: "e,state,disable"; source: "e";	\
			action: STATE_SET STATE_DISABLE 0.0;	\
			transition: LINEAR 0.0;					\
			target: TARGET;							\
		}


//Simple Clip Visible/Unvisible Toggle
#define CLIP_TOGGLE(NAME, TO1, TO2, STATE_VISIBLE, STATE_UNVISIBLE)		\
part { name: NAME"_clip"; type: RECT;									\
			description { state: STATE_UNVISIBLE 0.0;					\
				rel1.to: TO1;											\
				rel2.to: TO2;											\
				visible: 0;												\
			}															\
			description { state: STATE_VISIBLE 0.0;						\
				inherit: STATE_UNVISIBLE 0.0;							\
				visible: 1;												\
			}															\
		}
		
//Clip Switch
#define CLIP_SWITCH(NAME, TO1, TO2, STATE_VISIBLE,STATE_UNVISIBLE)		\
part { name: NAME"_clip_"STATE_VISIBLE; type: RECT;						\
			description { state: STATE_VISIBLE 0.0;						\
				rel1.to: TO1;											\
				rel2.to: TO2;											\
				visible: 1;												\
			}															\
			description { state: STATE_UNVISIBLE 0.0;					\
				inherit: STATE_VISIBLE 0.0;								\
				visible: 0;												\
			}															\
		}																\
part { name: NAME"_clip_"STATE_UNVISIBLE; type: RECT;					\
			description { state: STATE_VISIBLE 0.0;						\
				rel1.to: TO1;											\
				rel2.to: TO2;											\
				visible: 0;												\
			}															\
			description { state: STATE_UNVISIBLE 0.0;					\
				inherit: STATE_VISIBLE 0.0;								\
				visible: 1;												\
			}															\
		}

//Clip Switch for Genlist file with the new sintax
#define CLIP_SWITCH_2(NAME, TO1, TO2, STATE_VISIBLE,STATE_UNVISIBLE)		\
rect { NAME"_clip_"STATE_VISIBLE;				\
	desc { "default";							\
		rel1.to: TO1;							\
		rel2.to: TO2;							\
		vis;									\
		link.base: "elm,state,"STATE_VISIBLE;	\
		}										\
	desc { STATE_UNVISIBLE;						\
		inherit: "default" 0.0;					\
		hid;									\
		link.base: "elm,state,"STATE_UNVISIBLE;	\
		}										\
	}											\
rect { NAME"_clip_"STATE_UNVISIBLE;				\
	desc { "default";							\
		rel1.to: TO1;							\
		rel2.to: TO2;							\
		hid;									\
		link.base: "elm,state,"STATE_VISIBLE;	\
		}										\
	desc { STATE_UNVISIBLE;						\
		inherit: "default" 0.0;					\
		vis;									\
		link.base: "elm,state,"STATE_UNVISIBLE;	\
		}										\
	}

//Clip Switch with "clip_to" option
#define CLIP_SWITCH_CLIPTO(NAME, TO1, TO2, STATE_VISIBLE, STATE_UNVISIBLE, CLIP_TO)	\
part { name: NAME"_clip_"STATE_VISIBLE; type: RECT;						\
			clip_to: CLIP_TO;											\
			description { state: STATE_VISIBLE 0.0;						\
				rel1.to: TO1;											\
				rel2.to: TO2;											\
				visible: 1;												\
			}															\
			description { state: STATE_UNVISIBLE 0.0;					\
				inherit: STATE_VISIBLE 0.0;								\
				visible: 0;												\
			}															\
}																		\
part { name: NAME"_clip_"STATE_UNVISIBLE; type: RECT;					\
			clip_to: CLIP_TO;											\
			description { state: STATE_VISIBLE 0.0;						\
				rel1.to: TO1;											\
				rel2.to: TO2;											\
				visible: 0;												\
			}															\
			description { state: STATE_UNVISIBLE 0.0;					\
				inherit: STATE_VISIBLE 0.0;								\
				visible: 1;												\
			}															\
}

//A program to design a bordered rectangle.
#define RECTANGLE(NAME, BORDER, BD_OPTION, INSIDE_OPTION)\
part { name: NAME; type: RECT;							\
	description { state: "default" 0.0;					\
		BD_OPTION										\
	}													\
}														\
part { name: NAME"_inside"; type: RECT;  mouse_events: 0;\
	description { state: "default" 0.0;					\
		rel1.to: NAME;									\
		rel1.offset: BORDER BORDER;						\
		rel2.to: NAME;									\
		rel2.offset: -BORDER-1 -BORDER-1;				\
		INSIDE_OPTION									\
	}													\
}														\

/* * * * * * * * * *
 *  WIDGET DEFINE  *
 * * * * * * * * * */
#define BUTTON_PARTS(NAME,POSITION)								\
	images {													\
		image: "img/button-normal.png" COMP;					\
		image: "img/button-prelight.png" COMP;					\
		image: "img/button-pressed.png" COMP;					\
		image: "img/button-insensitive.png" COMP;				\
	}															\
		part { name: NAME; mouse_events: 0;						\
			description { state: "default" 0.0;					\
				image.normal: "img/button-normal.png";			\
				image.border: 3 3 3 3;							\
				fill.smooth: 0;									\
				POSITION;										\
			}													\
			IMAGE_STATE("selected","img/button-pressed.png")	\
			IMAGE_STATE("prelight","img/button-prelight.png")	\
			IMAGE_STATE("disabled","img/button-insensitive.png")\
		}														\
		part { name: "event_"NAME; type: RECT;					\
			ignore_flags: ON_HOLD;								\
			description { state: "default" 0.0;					\
				color: TRANSPARENT;								\
				STAY_ON(NAME)									\
			}													\
			description { state: "disabled" 0.0;				\
				inherit: "default" 0.0;							\
				visible: 0;										\
			}													\
		}														\
		OVER(NAME,"event_"NAME,"default","prelight")			\
		CLICK(NAME,"event_"NAME,"default","selected")			\
		DISABLE(NAME;target: "event_"NAME,"default","disabled")	\
