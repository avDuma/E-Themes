group { name: "e/gadman/popup";
	parts {
		part { name: "bg"; mouse_events: 0; type: RECT;
			description { state: "default" 0.0;
				color_class: "dialog_base";
			}
		}
		part { name: "e.swallow.content"; type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 6 6;
				rel2.offset: -7 -7;
			}
		}
	}
}

group { name: "e/gadman/full_bg";
	parts {
		part { name: "bg"; type: RECT; mouse_events: 0;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				color: 0 0 0 192;
			}
		}
		part { name: "custom_bg"; type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description { state: "visible" 0.0;
				color: 255 255 255 200;
			}
		}
		part { name: "e.swallow.bg"; type: SWALLOW;
			clip_to: "custom_bg";
			description { state: "default" 0.0;
			}
		}
		part { name: "grabber"; type: RECT; repeat_events: 1;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {	
		program {
			signal: "e,state,visibility,show"; source: "e";
			action: STATE_SET "visible" 0.0;
			transition: DECELERATE 0.4;
			target: "bg";
		}
		program {
			signal: "e,state,visibility,show,now"; source: "e";
			action: STATE_SET "visible" 0.0;
			target: "bg";
		}
		program {
			signal: "e,state,visibility,hide"; source: "e";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.4;
			target: "bg";
			after: "hide_stop";
		}
		program {
			signal: "e,state,visibility,hide,now"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			after: "hide_stop";
		}
		program {
			signal: "e,state,visibility,show,custom"; source: "e";
			action: STATE_SET "visible" 0.0;
			transition: DECELERATE 0.4;
			target: "custom_bg";
		}
		program {
			signal: "e,state,visibility,show,custom,now"; source: "e";
			action: STATE_SET "visible" 0.0;
			target: "custom_bg";
		}
		program {
			signal: "e,state,visibility,hide,custom"; source: "e";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.4;
			target: "custom_bg";
			after: "hide_stop";
		}
		program {
			signal: "e,state,visibility,hide,custom,now"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "custom_bg";
			after: "hide_stop";
		}
		program { name: "hide_stop";
			action: SIGNAL_EMIT "e,action,hide,stop" "";
		}
	}
}

group { name: "e/gadman/frame";
	parts {
		part { name: "e.swallow.content"; type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 4 4;
				rel2.offset: -5 -5;
			}
		}
	}
}

#define HANDLE(POSITION,ORIENTATION,SIZE_H,SIZE_V)			\
part { name: "handle"ORIENTATION""POSITION; mouse_events: 0;\
	description { state: "default" 0.0;						\
		image.normal: "img/handle-"ORIENTATION".png";		\
		FIXED_SIZE(SIZE_H,SIZE_V)							\
		STAY_ON("resize"ORIENTATION""POSITION)				\
	}														\
	description { state: "off" 0.0;							\
		inherit: "default" 0.0;								\
		visible: 0;											\
	}														\
}															\

group { name: "e/gadman/control";
	images.image: "img/handle-h.png" COMP;
	images.image: "img/handle-v.png" COMP;
	parts {
		part { name: "base"; mouse_events: 0; type: RECT;
			description { state: "default" 0.0;
				rel1.offset: 3 3;
				rel2.offset: -4 -4;
				color: 255 255 255 40;
				color_class: "focus";
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 40;
				color_class: "focus";
			}
		}
		part { name: "move"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				color: 0 0 0 0;
			}
			description { state: "off" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		RECTANGLE("resizeh1", ,1,
			// Border Option
			rel1.to: "base";
			rel1.relative: 0.0 0.4;
			rel2.to: "base";
			rel2.relative: 0.5 0.6;
			rel1.offset: -8 0;
			rel2.offset: 9 -1;
			align: 0.0 0.5;
			min: 7 28;
			max: 7 -1;
			color_class: "label_text";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
			
			, //Inside Option
			color_class: "dialog_base";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
		)
		
		RECTANGLE("resizeh2", ,1,
			// Border Option
			rel1.to: "base";
			rel1.relative: 0.5 0.4;
			rel1.offset: 8 0;
			rel2.to: "base";
			rel2.relative: 1.0 0.6;
			rel2.offset: 9 -1;
			align: 1.0 0.5;
			min: 7 28;
			max: 7 -1;
			color_class: "label_text";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
			
			, //Inside Option
			color_class: "dialog_base";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
		)
		
		RECTANGLE("resizev1", ,1,
			// Border Option
			rel1.to: "base";
			rel1.relative: 0.4 0.0;
			rel1.offset: 0 -8;
			rel2.to: "base";
			rel2.relative: 0.6 0.5;
			rel2.offset: -1 9;
			align: 0.5 0.0;
			min: 28 7;
			max: -1 7;
			color_class: "label_text";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
			
			, //Inside Option
			color_class: "dialog_base";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
		)
		
		RECTANGLE("resizev2", ,1,
			// Border Option
			rel1.to: "base";
			rel1.relative: 0.4 0.5;
			rel1.offset: 0 8;
			rel2.to: "base";
			rel2.relative: 0.6 1.0;
			rel2.offset: -1 9;
			align: 0.5 1.0;
			min: 28 7;
			max: -1 7;
			color_class: "label_text";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
			
			, //Inside Option
			color_class: "dialog_base";
			}
		description { state: "off" 0.0;
			inherit: "default" 0.0;
			visible: 0;
		)
		HANDLE("1","h",1,24)
		HANDLE("2","h",1,24)
		HANDLE("1","v",24,1)
		HANDLE("2","v",24,1)
	}
	programs {
		program {
			signal: "e,state,hsize,on"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "resizeh1";
			target: "resizeh1_inside";
			target: "resizeh2";
			target: "resizeh2_inside";
			target: "handleh1";
			target: "handleh2";
		}
		program {
			signal: "e,state,hsize,off"; source: "e";
			action: STATE_SET "off" 0.0;
			target: "resizeh1";
			target: "resizeh1_inside";
			target: "resizeh2";
			target: "resizeh2_inside";
			target: "handleh1";
			target: "handleh2";
		}
		program {
			signal: "e,state,vsize,on"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "resizev1";
			target: "resizev1_inside";
			target: "resizev2";
			target: "resizev2_inside";
			target: "handlev1";
			target: "handlev2";
		}
		program {
			signal: "e,state,vsize,off"; source: "e";
			action: STATE_SET "off" 0.0;
			target: "resizev1";
			target: "resizev1_inside";
			target: "resizev2";
			target: "resizev2_inside";
			target: "handlev1";
			target: "handlev2";
		}
		program {
			signal: "e,state,move,on"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "move";
		}
		program {
			signal: "e,state,move,off"; source: "e";
			action: STATE_SET "off" 0.0;
			target: "move";
		}
		program {
			signal: "e,state,focused"; source: "e";
			action: STATE_SET "active" 0.0;
			target: "base";
		}
		program {
			signal: "e,state,unfocused"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "base";
		}
#define PROGSET(_SRC, _ACT) \
		program { \
			signal: "mouse,down,1"; source: _SRC; \
			action: SIGNAL_EMIT "e,action,"_ACT",start" ""; \
		} \
		program { \
			signal: "mouse,up,1"; source: _SRC; \
			action: SIGNAL_EMIT "e,action,"_ACT",stop" ""; \
		} \
		program { \
			signal: "mouse,move"; source: _SRC; \
			action: SIGNAL_EMIT "e,action,"_ACT",go"  ""; \
		}
		PROGSET("move", "move")
		PROGSET("resizeh1", "resize,left")
		PROGSET("resizeh2", "resize,right")
		PROGSET("resizev1", "resize,up")
		PROGSET("resizev2", "resize,down")
#undef PROGSET
	}
}

#undef HANDLE
