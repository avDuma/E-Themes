group { name: "e/conf/randr/main";
	parts {
		part { name: "bg"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "e.swallow.content";
				rel2.to: "e.swallow.content";
				color_class: "dialog_base";
			}
		}
		part { name: "clipper"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "e.swallow.content";
				rel2.to: "e.swallow.content";
			}
		}
		part { name: "e.swallow.content"; type: SWALLOW;
			clip_to: "clipper";
			description { state: "default" 0.0;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
	}
}

group { name: "e/conf/randr/main/monitor";
	parts {
		part { name: "e.swallow.frame"; type: SWALLOW;
			description { state: "default" 0.0;
			}
		}
		part { name: "e.swallow.stand"; type: SWALLOW;
			description { state: "default" 0.0;
				visible: 0;
			}
		}
	}
}

group { name: "e/conf/randr/main/frame";
	images.image: "img/arrow_down.png" COMP;
	images.image: "img/arrow_up.png" COMP;
	images.image: "img/bd_resize.png" COMP;
	images.image: "img/rotate.png" COMP;
	styles {
		style { name: "randr_name_style";
			base: "font=Sans:style=Bold font_size=12 text_class=randr_monitor align=center color=#ffff wrap=word";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
		style { name: "randr_resolution_style";
			base: "font=Sans font_size=12 text_class=randr_resolution align=center color=#ffff wrap=mixed align=center";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
		style { name: "randr_position_style";
			base: "font=Sans font_size=12 text_class=randr_position align=center color=#ffff wrap=mixed align=center";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
	}
	script {
		public refresh_open;
	}
	parts {
		part { name: "e.swallow.preview"; type: SWALLOW;
			clip_to: "clip";
			description { state: "default" 0.0;
				STAY_ON("base");
			}
		}
		
		RECTANGLE("base", mouse_events: 0, 
			//border_size
			1,
		
			//border_option
			color_class: "label_text";,
			
			//inside_option
			color_class: "dialog_base";
		)
		
		part { name: "primary"; type: RECT; mouse_events: 0;
			description { state: "default" 0.0;
				STAY_ON("base_inside")
				visible: 0;
				color: 255 255 255 40;
				color_class: "focus";
			}
			description { state: "primary" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
				
		part { name: "clip"; type: RECT;
			description { state: "default" 0.0;
				STAY_ON("base")
			}
			description { state: "off" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 64;
			}
		}
		part { name: "e.box.clone"; type: BOX;
			clip_to: "clone_clip";
			description { state: "default" 0.0;
				rel1.to: "base";
				rel1.relative: 0.0 1.0;
				rel1.offset: 15 -27;
				rel2.relative: 1.0 0.0;
				rel2.to_x: "base";
				rel2.to_y: "e.event.indicator";
				box {
					layout: "horizontal";
					padding: 2 0;
					align: 0.0 0.5;
					min: 1 1;
				}
			}
		}
		part { name: "clone_clip"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "e.box.clone";
				rel2.to: "e.box.clone";
			}
		}
		
		part { name: "drop_zone"; type: RECT; mouse_events: 0;
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				visible: 0;
			}
			description { state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 80;
				color_class: "focus";
				visible: 1;
			}
		}
		
		part { name: "check"; mouse_events: 0;
			description { state: "default" 0.0;
				rel1.offset: 4 -5;
				rel1.relative: 0.0 1.0;
				rel2.offset: 4 -5;
				rel2.relative: 0.0 1.0;
				align: 0.0 1.0;
				image.normal: "img/check2.png";
				FIXED_SIZE(16,16)
			}
			IMAGE_STATE("off","img/check1.png")
		}		
		
		part { name: "e.text.name"; type: TEXTBLOCK; mouse_events: 0;
			clip_to: "clip";
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 0.5 0.4;
				rel1.to: "base";
				rel2.relative: 0.5 0.4;
				rel2.to: "base";
				align: 0.5 1.0;
				color_class: "label_text";
				text { style: "randr_name_style";
					min: 1 1;
					ellipsis: -1;
				}
			}
		}
		part { name: "e.text.resolution"; type: TEXTBLOCK; mouse_events: 0;
			clip_to: "clip";
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 0.5 0.4;
				rel1.to: "base";
				rel2.relative: 0.5 0.4;
				rel2.to: "base";
				align: 0.5 0.0;
				color_class: "label_text";
				text { style: "randr_resolution_style";
					min: 1 1;
					ellipsis: -1;
				}
			}
		}
		part { name: "e.text.position"; type: TEXTBLOCK; mouse_events: 0;
			clip_to: "clip";
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 0.5 1.0;
				rel1.to_x: "base";
				rel1.to_y: "e.text.resolution";
				rel2.relative: 0.5 0.5;
				rel2.to: "base";
				align: 0.5 0.0;
				color_class: "label_text";
				text { style: "randr_position_style";
					min: 1 1;
					ellipsis: -1;
				}
			}
		}
		
		part { name: "rsz"; mouse_events: 0;
			description { state: "default" 0.0;
				STAY_ON("e.event.resize");
				image.normal: "img/bd_resize.png";
				color_class: "border_title";
				FIXED_SIZE(16,16)
			}
			COLOR_STATE("prelight","label_text")
		}
				
		part { name: "rot"; mouse_events: 0;
			description { state: "default" 0.0;
				STAY_ON("e.event.rotate");
				image.normal: "img/rotate.png";
				color_class: "border_title";
				FIXED_SIZE(21,21)
			}
			COLOR_STATE("prelight","label_text")
		}
		part { name: "e.swallow.refresh"; type: SWALLOW;
			clip_to: "clip";
			description { state: "default" 0.0;
				rel1.to_y: "base";
				rel1.to_x: "e.event.arrow.show";
				rel1.relative: 1.0 0.0;
				rel2.to: "base";
				rel2.relative: 0.0 0.0;
				align: 0.0 1.0;
			}
			description { state: "expanded" 0.0;
				inherit: "default" 0.0;
				align: 0.0 0.0;
			}
		}
		part { name: "arrow1clip"; type: RECT;
			clip_to: "clip";
			description { state: "default" 0.0;
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
			}
			description { state: "expanded" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "arrow2clip"; type: RECT;
			clip_to: "clip";
			description { state: "default" 0.0;
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
				visible: 0;
			}
			description { state: "expanded" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "arrow1"; mouse_events: 0;
			clip_to: "arrow1clip";
			description { state: "default" 0.0;
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
				image.normal: "img/arrow_down.png";
				color_class: "label_text";
				FIXED_SIZE(11, 11)
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				rel1.offset: 0 2;
			}
		}
		part { name: "arrow2"; mouse_events: 0;
			clip_to: "arrow2clip";
			description { state: "default" 0.0;
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
				image.normal: "img/arrow_up.png";
				color_class: "label_text";
				FIXED_SIZE(11, 11)
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				rel1.offset: 0 2;
			}
		}
		part { name: "e.event.arrow.show"; type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				max: 21 21;
				align: 0.0 0.0;
			}
		}
		part { name: "e.event.rotate"; type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				max: 21 21;
				align: 1.0 0.0;
				rel1.offset: 0 3;
				rel2.offset: -5 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "e.event.indicator"; type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				max: 15 15;
				align: 0.0 1.0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "e.event.resize"; type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
				max: 16 16;
				align: 1.0 1.0;
				rel2.offset: -6 -6;
			}
		}
	}
	programs {
		
		OVER("rsz","e.event.resize","default","prelight")
		OVER("rot","e.event.rotate","default","prelight")
		
		program {
			signal: "mouse,down,1"; source: "e.event.arrow.show";
			action: STATE_SET "clicked" 0.0;
			target: "arrow1";
			target: "arrow2";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.arrow.show";
			action: STATE_SET "default" 0.0;
			target: "arrow1";
			target: "arrow2";
		}
		program {
			signal: "mouse,clicked,1"; source: "e.event.arrow.show";
			script {
				new shown;
				
				shown = get_int(refresh_open);
				if (shown) {
					run_program(PROGRAM:"refresh_hide");
					set_state(PART:"arrow1clip", "default", 0.0);
					set_state(PART:"arrow2clip", "default", 0.0);
				} else {
					run_program(PROGRAM:"refresh_show");
					set_state(PART:"arrow1clip", "expanded", 0.0);
					set_state(PART:"arrow2clip", "expanded", 0.0);
				}
				set_int(refresh_open, 1 - shown);
			}
		}
		program { name: "refresh_show";
			action: STATE_SET "expanded" 0.0;
			transition: BOUNCE 1.0 0.5 4;
			target: "e.swallow.refresh";
		}
		program { name: "refresh_hide";
			action: STATE_SET "default" 0.0;
			transition: ACCELERATE 0.5;
			target: "e.swallow.refresh";
		}
		
		program {
			signal: "e,state,enabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "check";
		}
		program { name: "off";
			signal: "e,state,disabled"; source: "e";
			action: STATE_SET "off" 0.0;
			target: "check";
			target: "clip";
		}
		
		
		program {
			signal: "e,state,drop,on"; source: "e";
			action: STATE_SET "active" 0.0;
			target: "drop_zone";
		}
		program {
			signal: "e,state,drop,off"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "drop_zone";
		}
		program { name: "rotate_off";
			signal: "e,state,rotate_disabled"; source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "e.event.rotate";
		}
		program {
			signal: "e,state,primary,off"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "primary";
		}
		program {
			signal: "e,state,primary,on"; source: "e";
			action: STATE_SET "primary" 0.0;
			target: "primary";
		}
		program {
			signal: "e,state,indicator,enabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.event.indicator";
		}
		program {
			signal: "e,state,indicator,disabled"; source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "e.event.indicator";
		}
		program {
			signal: "mouse,in"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,out" "e";
		}
		program {
			signal: "mouse,down,1"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,start" "e";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,stop" "e";
		}
		program {
			signal: "mouse,in"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,out" "e";
		}
		program {
			signal: "mouse,down,1"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,start" "e";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,stop" "e";
		}
		program {
			signal: "mouse,in"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,out" "e";
		}
		program {
			signal: "mouse,clicked,1"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,toggle" "e";
		}
	}
}
group { name: "e/conf/randr/main/mini";
	parts {
		part { name: "e.swallow.preview"; type: SWALLOW;
			clip_to: "clip";
			description { state: "default" 0.0;
			}
		}
		RECTANGLE("base", mouse_events: 0, 
			//border_size
			1,
		
			//border_option
			color_class: "label_text";,
			
			//inside_option
			color: TOOLTIP_COLOR;
		)
		
		part { name: "clip"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "e.swallow.preview";
				rel2.to: "e.swallow.preview";
			}
		}		
	}
}
