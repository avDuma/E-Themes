group { name: "e/shelf/default/base";
   data {
      /* this tells e the shelf is shaped, not rectangular */
//      item: "shaped" "1";
      /* this tells e the number of pixels of the shelf to leave "exposed"
       * when auto-hiding the shelf */
      item: "hidden_state_size" "2";
      /* This makes the border hide instantly after the given amount of
       * seconds - in this case 3 seconds. This means there will be no
       * visible part of the shelf after this time at all as it will be
       * totally hidden */
//      item: "instant_delay" "3.0";
   }

   parts {
      part { name: "bg"; mouse_events: 0; type: RECT;
         description { state: "default" 0.0;
            color_class: "shelf_base";
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
	 }
 }
      programs  {
				}
}

group { name: "e/shelf/alternate/base";
   parts {
	  part { name: "bg"; mouse_events: 0; type: RECT;
         description { state: "default" 0.0;
            color_class: "shelf_base";
         }
      }
      part { name: "color"; mouse_events: 0; type: RECT;
         description { state: "default" 0.0;
            color_class: "focus";
            color: 255 255 255 40;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
	 }
 }
}

group { name: "e/shelf/default/inset";
   alias: "e/shelf/alternate/inset";
   alias: "e/shelf/invisible/inset";
   
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "clip"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 3 0;
            rel2.offset: -4 -1;
            color: 255 255 255 255;
         }
         description { state: "vert" 0.0;
            rel1.offset: 1 3;
            rel2.offset: -2 -4;
            color: 255 255 255 255;
         }
      }
      part { name: "sep"; type: RECT;
		description { state: "default" 0.0;
			min: 1 5;
			max: 1 -1;
			fixed: 0 1;
			rel1.relative: 0.0 0.2;
			rel2.relative: 1.0 0.8;
			align: 0.0 0.5;
			color: SEPARATOR 255;
		}
		description { state: "vert" 0.0;
			inherit: "default" 0.0;
			align: 0.5 0.0;
			rel1.relative: 0.2 0.0;
			rel2.relative: 0.8 1.0;
			min: 5 1;
			max: -1 1;
			fixed: 1 0;
		}
			
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
			rel1.to_x: "sep";
			rel1.relative: 1.0 0.0;
            rel1.offset: 3 0;
            rel2.offset: -5 -2;
         }
         description { state: "vert" 0.0;
            rel1.to_y: "sep";
			rel1.relative: 0.0 1.0;
            rel1.offset: 0 3;
            rel2.offset: -2 -5;
         }
      }
   }
   programs {
#define ORIENT_SATE(_ORIENT, _STATE) \
         program { \
            signal: "e,state,orientation,"_ORIENT; source: "e"; \
            action: STATE_SET _STATE 0.0; \
            target: "e.swallow.content"; \
            target: "sep"; \
            target: "clip"; \
         }
      ORIENT_SATE("top", "default")
      ORIENT_SATE("top_left", "default")
      ORIENT_SATE("top_right", "default")
      ORIENT_SATE("bottom", "default")
      ORIENT_SATE("bottom_left", "default")
      ORIENT_SATE("bottom_right", "default")
      ORIENT_SATE("left", "vert")
      ORIENT_SATE("left_top", "vert")
      ORIENT_SATE("left_bottom", "vert")
      ORIENT_SATE("right", "vert")
      ORIENT_SATE("right_top", "vert")
      ORIENT_SATE("right_bottom", "vert")
#undef ORIENT_SATE
   }
}

group { name: "e/shelf/invisible/base";
   inherit: "e/shelf/default/base";
   data {
      item: "shaped" "1";
   }
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
   }
}

group { name: "e/shelf/default/plain";
   alias: "e/shelf/alternate/plain";
   alias: "e/shelf/invisible/plain";
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "clip"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.offset: -2 -2;
         }
      }
   }
}
