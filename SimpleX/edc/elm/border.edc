#define EVENT_PART(NAME, POSITION)			\
part { name: "e.event."NAME; type: RECT;	\
	description { state: "default" 0.0;		\
		POSITION							\
	color: TRANSPARENT;						\
	}										\
}

#define WIN_BUTTON(NAME, POSITION)							\
images.image: "img/bd_"NAME".png" COMP;						\
part { name: NAME"_unfocused"; mouse_events: 0;				\
	clip_to: "button_clip_default";							\
	description { state: "default" 0.0;						\
		align: 0.0 0.0;										\
		POSITION											\
		FIXED_SIZE(27,28)									\
		image.normal: "img/bd_"NAME".png";					\
		color_class: "border_title";						\
	}														\
	COLOR_STATE("prelight","fg_prelight")					\
	COLOR_STATE("pressed","border_title_active")			\
}															\
part { name: NAME"_focused";  mouse_events: 0;				\
	clip_to: "button_clip_focused";							\
	description { state: "default" 0.0;						\
		align: 0.0 0.0;										\
		STAY_ON(NAME"_unfocused")							\
		FIXED_SIZE(27,28)									\
		image.normal: "img/bd_"NAME".png";					\
		color_class: "border_title_active";					\
	}														\
	COLOR_STATE("prelight","fg_prelight")					\
	COLOR_STATE("pressed","border_title_active")			\
}															\
OVER(NAME"_unfocused","e.event."NAME,"default","prelight")	\
OVER(NAME"_focused","e.event."NAME,"default","prelight")	\
CLICK(NAME"_unfocused","e.event."NAME,"default","pressed")	\
CLICK(NAME"_focused","e.event."NAME,"default","pressed")

#define ELM_TITLE(REL1, REL2)									\
		part { name: "elm.text.title"; type: TEXT;			\
				 scale: 1;									\
				 effect: PLAIN;								\
				 description { state: "default" 0.0;		\
					rel1.to_x: REL1;						\
					rel1.relative: 1.0 0.0;					\
					rel1.offset: 0 6;						\
					rel2.to: REL2;							\
					rel2.relative: 0.0 0.0;					\
					align: 0.5 0.0;							\
					color: 255 255 255 255;					\
					color_class: "border_title";			\
					text { font: "Sans:style=Bold"; size: 12;	\
						text_class: "title_bar";			\
						align: 0.5 0.0;						\
						min: 0 1;							\
					}										\
					fixed: 0 1;								\
				 }											\
				 COLOR_STATE("focused", "border_title_active")	\
		}													\
		EVENT_PART("titlebar", STAY_ON("elm.text.title"))

/* * *
 *  INHERIT ONLY GROUP!
 * This is a new pretty cool thing: for repeat a code always similar, *
 * instead of a "variable-less" #define it's more clean a group with  *
	images, parts and programs section								  *
																  * * */

group { name: "elm_border_parts"; inherit_only: 1;
	parts {
		part { name: "client_clip"; type: RECT;
				 description { state: "default" 0.0;
					STAY_ON("e.swallow.client")
				 }
		}
		CLIP_SWITCH("button", "bg", "bg", "default", "focused")
		part { name: "bg"; type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				color_class: "border_frame";
				}
			COLOR_STATE("focused","border_frame_active")
		}
		part { name: "e.swallow.client"; type: SWALLOW;
				 clip_to: "client_clip";
				 description { state: "default" 0.0;
					rel1.to: "bg";
					rel1.offset: 6 28;
					rel2.to: "bg";
					rel2.offset: -7 -7;
				 }
		}
	}
	programs {
		program {
			signal: "e,state,focused"; source: "e";
			action: STATE_SET "focused" 0.0;
			target: "bg";
			target: "elm.text.title";
			target: "button_clip_default";
			target: "button_clip_focused";
		}
		program {
			signal: "e,state,unfocused"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target: "elm.text.title";
			target: "button_clip_default";
			target: "button_clip_focused";
		}
	}
}

group { name: "elm_resize_parts"; inherit_only: 1;
	parts {
		EVENT_PART("resize.t",
			rel1.to: "bg";
			rel2.to: "bg";
			rel2.relative: 1.0 0.0;
			rel2.offset: -1 6;
		)
		EVENT_PART("resize.b",
			rel1.to: "bg";
			rel2.to: "bg";
			rel1.relative: 0.0 1.0;
			rel1.offset: 0 -6;
		)
		EVENT_PART("resize.l",
			rel1.to: "bg";
			rel2.to: "bg";
			rel2.relative: 0.0 1.0;
			rel2.offset: 6 -1;
		)
		EVENT_PART("resize.r",
			rel1.to: "bg";
			rel2.to: "bg";
			rel1.relative: 1.0 0.0;
			rel1.offset: -6 0;
		)
		EVENT_PART("resize.tl",
			rel1.to: "bg";
			rel2.to: "bg";
			rel2.relative: 0.0 0.0;
			rel2.offset: 10 10;
		)
		EVENT_PART("resize.tr",
			rel1.to: "bg";
			rel2.to: "bg";
			rel1.relative: 1.0 0.0;
			rel2.relative: 1.0 0.0;
			rel1.offset: -10 0;
			rel2.offset: 0 10;
		)
		EVENT_PART("resize.bl",
			rel1.to: "bg";
			rel1.relative: 0.0 1.0;
			rel1.offset: 0 -10;
			rel2.to: "bg";
			rel2.relative: 0.0 1.0;
			rel2.offset: 10 0;
		)
		EVENT_PART("resize.br",
			rel1.to: "bg";
			rel1.relative: 1.0 1.0;
			rel2.to: "bg";
			rel1.offset: -10 -10;
		)
	}
}

group { name: "elm_button_right_parts"; inherit_only: 1;
	parts {
		WIN_BUTTON("icon",
			rel1.to: "bg";
			rel1.offset: 5 0;
			rel2.to: "bg";
			rel2.relative: 1.0 0.0;
		)
		WIN_BUTTON("close",
			align: 1.0 0.0;
			rel2.to: "bg";
			rel2.offset: -6 -1;
			rel2.relative: 1.0 0.0;
		)
		WIN_BUTTON("maximize",
			align: 1.0 0.0;
			rel2.to: "close_unfocused";
			rel2.offset: -1 -1;
			rel2.relative: 0.0 1.0;
		)
		WIN_BUTTON("minimize",
			align: 1.0 0.0;
			rel2.to: "maximize_unfocused";
			rel2.offset: -1 -1;
			rel2.relative: 0.0 1.0;
		)
		EVENT_PART("icon",STAY_ON("icon_unfocused"))
		EVENT_PART("close",STAY_ON("close_unfocused"))
		EVENT_PART("maximize",STAY_ON("maximize_unfocused"))
		EVENT_PART("minimize",STAY_ON("minimize_unfocused"))
	}
}

group { name: "elm_button_left_parts"; inherit_only: 1;
	parts {
		WIN_BUTTON("close",
			rel1.to: "bg";
			rel1.offset: 5 0;
			rel2.to: "bg";
			rel2.relative: 1.0 0.0;
		)
		WIN_BUTTON("icon",
			align: 1.0 0.0;
			rel2.to: "bg";
			rel2.offset: -6 -1;
			rel2.relative: 1.0 0.0;
		)
		WIN_BUTTON("maximize",
			rel1.to: "close_unfocused";
			rel1.relative: 1.0 0.0;
			rel1.offset: 1 0;
		)
		WIN_BUTTON("minimize",
			rel1.to: "maximize_unfocused";
			rel1.relative: 1.0 0.0;
			rel1.offset: 1 0;
		)
		EVENT_PART("icon",STAY_ON("icon_unfocused"))
		EVENT_PART("close",STAY_ON("close_unfocused"))
		EVENT_PART("maximize",STAY_ON("maximize_unfocused"))
		EVENT_PART("minimize",STAY_ON("minimize_unfocused"))
	}
}








group { name: "elm/ews/background/default";
	alias: "elm/bg/base/default";
}


group { name: "elm/ews/decoration/default";
	alias: "elm/border/base/default";
	
	inherit: "elm_border_parts";
	inherit: "elm_button_right_parts";	
	parts {
		ELM_TITLE("icon_unfocused","minimize_unfocused")
	}
	inherit: "elm_resize_parts";
}

group { name: "elm/ews/decoration/borderless";
   parts {
		part { name: "client_clip"; type: RECT;
			description { state: "default" 0.0;
				rel1.to_y: "elm.swallow.client";
				rel2.to_y: "elm.swallow.client";
			}
		}
		part { name: "elm.swallow.client"; type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}
		part { name: "top"; type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "bd_pixel_color";
				align: 0.0 0.0;
				max: 99999 1;
			}
			COLOR_STATE("focused","focus")
		}
		part { name: "bottom"; type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "bd_pixel_color";
				align: 0.0 1.0;
				max: 99999 1;
			}
			COLOR_STATE("focused","focus")
		}
		part { name: "left"; type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "bd_pixel_color";
				align: 0.0 0.0;
				max: 1 99999;
			}
			COLOR_STATE("focused","focus")
		}
		part { name: "right"; type: RECT;
			description { state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "bd_pixel_color";
				align: 1.0 0.0;
				max: 1 99999;
			}
			COLOR_STATE("focused","focus")
		}
		part { name: "e.event.resize.tl"; type: RECT;
			description { state: "default" 0.0;
				rel2.relative: 0.0 0.0;
				min: 32 4;
				align: 0.0 0.0;
				color: 0 0 0 0;
			}
		}
		part { name: "e.event.resize.t"; type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 1.0 0.0;
				rel1.to_x: "e.event.resize.tl";
				rel2.relative: 0.0 0.0;
				rel2.to_x: "e.event.resize.tr";
				min: 0 4;
				align: 0.5 0.0;
				color: 0 0 0 0;
			}
		}
		part { name: "e.event.resize.tr"; type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 1.0 0.0;
				rel2.relative: 1.0 0.0;
				min: 32 4;
				align: 1.0 0.0;
				color: 0 0 0 0;
			}
		}
		part { name: "e.event.resize.bl"; type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel2.relative: 0.0 1.0;
				min: 32 5;
				align: 0.0 1.0;
				color: 0 0 0 0;
				fixed: 1 1;
			}
		}
		part { name: "e.event.resize.b"; type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 1.0 1.0;
				rel1.to_x: "e.event.resize.tl";
				rel2.relative: 0.0 1.0;
				rel2.to_x: "e.event.resize.tr";
				min: 0 5;
				align: 0.5 1.0;
				color: 0 0 0 0;
				fixed: 0 1;
			}
		}
		part { name: "e.event.resize.br"; type: RECT;
			description { state: "default" 0.0;
				rel1.relative: 1.0 1.0;
				rel2.relative: 1.0 1.0;
				min: 32 5;
				align: 1.0 1.0;
				color: 0 0 0 0;
				fixed: 1 1;
			}
		}
	}
	programs {
		program {
			signal: "elm,state,focused"; source: "e";
			action: STATE_SET "focused" 0.0;
			target: "top";
			target: "bottom";
			target: "left";
			target: "right";
		}
		program {
			signal: "elm,state,unfocused"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "top";
			target: "bottom";
			target: "left";
			target: "right";
		}
	}   
}









