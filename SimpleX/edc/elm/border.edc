group { name: "elm/ews/background/default";
   images.image: "bg_radgrad.png" COMP;
   images.image: "dot_pattern.png" COMP;
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            image.normal: "bg_radgrad.png";
            image.scale_hint: STATIC;
            fill.smooth: 0;
            ASPECT_FILL((1024/653))
         }
      }
      part { name: "pat";
         description { state: "default" 0.0;
            image.normal: "dot_pattern.png";
            TILED_PATTERN(256, 256)
         }
      }
   }
}

group { name: "elm/ews/decoration/default";
   images.image: "win_shadow.png" COMP;
   images.image: "win_glow.png" COMP;
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "vgrad_med_dark.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "shine.png" COMP;
   images.image: "bevel_dark_out.png" COMP;
   images.image: "sym_close_dark_normal.png" COMP;
   images.image: "sym_close_dark_selected.png" COMP;
   images.image: "sym_close_light_normal.png" COMP;
   images.image: "sym_close_light_selected.png" COMP;
   images.image: "sym_down_dark_normal.png" COMP;
   images.image: "sym_down_dark_selected.png" COMP;
   images.image: "sym_down_light_normal.png" COMP;
   images.image: "sym_down_light_selected.png" COMP;
   images.image: "sym_up_dark_normal.png" COMP;
   images.image: "sym_up_dark_selected.png" COMP;
   images.image: "sym_up_light_normal.png" COMP;
   images.image: "sym_up_light_selected.png" COMP;
   images.image: "glow_round_corners_small.png" COMP;
   images.image: "knob_round_small_busy.png" COMP;
   parts {
      part { name: "shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.offset: -7  -3;
            rel1.to: "top";
            rel2.offset: 6 11;
            rel2.to: "bottom";
            fill.smooth: 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "glow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "win_glow.png";
            image.border: 9 9 9 9;
            image.middle: 0;
            rel1.offset: -5  -5;
            rel1.to: "top";
            rel2.offset: 4 4;
            rel2.to: "bottom";
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "top";
         description { state: "default" 0.0;
            color_class: "border_top";
            image.normal: "vgrad_med_lighter.png";
            rel1.to_y: "title2";
            rel1.offset: -1 0;
            rel2.relative: 1.0 0.0;
            fill.smooth: 0;
            TILED_HORIZ(120)
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            rel1.to: "top";
            rel2.to: "top";
            fill.smooth: 0;
         }
      }
      part { name: "elm.text.title"; type: TEXT;
         scale: 1; nomouse;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            color_class: "border_title";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 -3;
            rel1.to_x: "e.event.icon";
            rel2.relative: 0.0 0.0;
            rel2.offset: -2 -3;
            rel2.to_x: "e.event.minimize";
            align: 0.5 0.0;
            color_class: "border_title";
            color3: 255 255 255 255;
            text { font: FNBD; size: 10;
               text_class: "title_bar";
               align: 0.5 0.0;
               min: 0 1;
            }
            fixed: 0 1;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "title2"; type: TEXT;
         scale: 1; nomouse;
         effect: SOFT_SHADOW BOTTOM;
         description { state: "default" 0.0;
            color_class: "border_title_active";
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 2;
            rel1.to_x: "e.event.icon";
            rel2.relative: 0.0 0.0;
            rel2.offset: -1 2;
            rel2.to_x: "e.event.minimize";
            align: 0.5 0.0;
            color_class: "border_title_active";
            color3: 255 255 255 255;
            text { font: FNBD; size: 10;
               text_source: "elm.text.title";
               text_class: "title_bar";
               align: 0.5 0.0;
               min: 0 1;
            }
            fixed: 0 1;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "icon"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "e.event.icon";
            rel2.to: "e.event.icon";
         }
         description { state: "bounce1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.15;
            rel2.relative: 1.0 1.15;
         }
         description { state: "bounce2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 -0.15;
            rel2.relative: 1.0 0.85;
         }
      }
      part { name: "e.swallow.icon"; type: SWALLOW; nomouse;
         description { state: "default" 0.0;
            rel1.to: "icon";
            rel1.relative: 0.15 0.15;
            rel2.to: "icon";
            rel2.relative: 0.85 0.85;
            rel2.offset: 0 0;
         }
      }
      part { name: "knob"; mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "knob_round_small_busy.png";
            aspect: 1.0 1.0; aspect_preference: BOTH;
            max: 20 20;
            rel1.to: "e.event.icon";
            rel2.to: "e.event.icon";
            fixed: 1 1;
         }
      }
      
      part { name: "clip1"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.to: "top";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "clip2"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.to: "top";
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "close1"; nomouse;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_close_dark_normal.png";
            rel1.to: "e.event.close";
            rel2.to: "e.event.close";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_close_dark_selected.png";
         }
      }
      part { name: "max1"; nomouse;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_up_dark_normal.png";
            rel1.to: "e.event.maximize";
            rel2.to: "e.event.maximize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_dark_selected.png";
         }
      }
      part { name: "min1"; nomouse;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_down_dark_normal.png";
            rel1.to: "e.event.minimize";
            rel2.to: "e.event.minimize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_dark_selected.png";
         }
      }
      part { name: "close2"; nomouse;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_close_light_normal.png";
            rel1.to: "e.event.close";
            rel2.to: "e.event.close";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_close_light_selected.png";
         }
      }
      part { name: "max2"; nomouse;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_up_light_normal.png";
            rel1.to: "e.event.maximize";
            rel2.to: "e.event.maximize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_light_selected.png";
         }
      }
      part { name: "min2"; nomouse;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_down_light_normal.png";
            rel1.to: "e.event.minimize";
            rel2.to: "e.event.minimize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_light_selected.png";
         }
      }
      part { name: "e.event.icon"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to_y: "top";
            rel2.relative: 0.0 0.0;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.icon";
         action: SIGNAL_EMIT "elm,action,menu" "elm";
      }
      part { name: "e.event.titlebar"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "top";
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.event.icon";
            rel2.relative: 0.0 0.0;
            rel2.to_x: "e.event.minimize";
            color: 0 0 0 0;
         }
      }
      program {
         signal: "mouse,down,1"; source: "e.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,start" "elm";
      }
      program {
         signal: "mouse,up,1"; source: "e.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,stop" "elm";
      }
      part { name: "e.event.close"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_y: "top";
            rel2.relative: 1.0 0.0;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.close";
         action: SIGNAL_EMIT "elm,action,close" "elm";
      }
      part { name: "e.event.maximize"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "top";
            rel1.relative: -0.25 0.0;
            rel1.offset: -1 0;
            rel1.to_x: "e.event.close";
            rel2.relative: -0.25 0.0;
            rel2.to_x: "e.event.close";
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "e.event.maximize2"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "e.event.maximize";
            rel2.to: "e.event.maximize";
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.maximize";
         action: SIGNAL_EMIT "elm,action,maximize" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.maximize2";
         action: SIGNAL_EMIT "elm,action,restore" "elm";
      }
      part { name: "e.event.minimize"; type: RECT;
         description { state: "default" 0.0;
            rel1.to_y: "top";
            rel1.relative: 0.0 0.0;
            rel1.offset: -1 0;
            rel1.to_x: "e.event.maximize";
            rel2.relative: 0.0 0.0;
            rel2.to_x: "e.event.maximize";
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      program {
         signal: "mouse,clicked,1"; source: "e.event.minimize";
         action: SIGNAL_EMIT "elm,action,iconify" "elm";
      }
      part { name: "e.event.resize.tl"; type: RECT;
         description { state: "default" 0.0;
            rel2.relative: 0.0 0.0;
            min: 32 4;
            align: 0.0 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "e.event.resize.t"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.event.resize.tl";
            rel2.relative: 0.0 0.0;
            rel2.to_x: "e.event.resize.tr";
            min: 0 4;
            align: 0.5 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "e.event.resize.tr"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 0.0;
            min: 32 4;
            align: 1.0 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "bottom"; type: RECT;
         description { state: "default" 0.0;
            color_class: "border_bottom";
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 4;
            min: 0 5;
            color: 64 64 64 255;
            fixed: 0 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "bevel2"; nomouse;
         description { state: "default" 0.0;
            image.normal: "bevel_dark_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            rel1.to: "bottom";
            rel2.to: "bottom";
            fill.smooth: 0;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.bl"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 0.0 1.0;
            min: 32 5;
            align: 0.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.b"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel1.to_x: "e.event.resize.tl";
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.event.resize.tr";
            min: 0 5;
            align: 0.5 1.0;
            color: 0 0 0 0;
            fixed: 0 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "e.event.resize.br"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel2.relative: 1.0 1.0;
            min: 32 5;
            align: 1.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "shine"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shine.png";
            rel1.offset: 0 -2;
            rel1.to: "top";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            rel2.to: "top";
            FIXED_SIZE(69, 5)
         }
      }
      part { name: "focus"; type: RECT; repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.to: "bottom";
            color: 0 0 0 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      program {
         signal: "mouse,down,1"; source: "focus";
         action: SIGNAL_EMIT "elm,action,focus" "elm";
      }
      program {
         signal: "elm,state,focus,on"; source: "elm";
         action: STATE_SET "focused" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "glow";
         target: "focus";
         after: "focus2";
      }
      program { name: "focus2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.4;
         target: "glow";
      }
      program {
         signal: "elm,state,focus,off"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "focus";
         target: "glow";
      }
      program {
         signal: "elm,state,focus,on"; source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "top";
         target: "elm.text.title";
         target: "title2";
         target: "clip1";
         target: "clip2";
      }
      program {
         signal: "elm,state,focus,off"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "top";
         target: "elm.text.title";
         target: "title2";
         target: "clip1";
         target: "clip2";
      }
      
      program {
         signal: "elm,state,maximized,on"; source: "elm";
         action: STATE_SET "max" 0.0;
         target: "e.event.maximize";
         target: "e.event.maximize2";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      program {
         signal: "elm,state,maximized,off"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "e.event.maximize";
         target: "e.event.maximize2";
         target: "bottom";
         target: "bevel2";
         target: "e.event.resize.bl";
         target: "e.event.resize.b";
         target: "e.event.resize.br";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.close";
         action: STATE_SET "selected" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.close";
         action: STATE_SET "default" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.maximize*";
         action: STATE_SET "selected" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.maximize*";
         action: STATE_SET "default" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,down,*"; source: "e.event.minimize";
         action: STATE_SET "selected" 0.0;
         target: "min1";
         target: "min2";
      }
      program {
         signal: "mouse,up,*"; source: "e.event.minimize";
         action: STATE_SET "default" 0.0;
         target: "min1";
         target: "min2";
      }
   }
}

group { name: "elm/ews/decoration/borderless";
   images.image: "win_shadow.png" COMP;
   images.image: "win_glow.png" COMP;
   parts {
      part { name: "shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.offset: -7  -3;
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "glow"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "win_glow.png";
            image.border: 9 9 9 9;
            image.middle: 0;
            rel1.offset: -5  -5;
            rel2.offset: 4 4;
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "focus"; type: RECT; repeat_events: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      program {
         signal: "mouse,down,1"; source: "focus";
         action: SIGNAL_EMIT "elm,action,focus" "elm";
      }
      program {
         signal: "elm,state,focus,on"; source: "elm";
         action: STATE_SET "focused" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "glow";
         target: "focus";
         after: "focus2";
      }
      program { name: "focus2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.4;
         target: "glow";
      }
      program {
         signal: "elm,state,focus,off"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "focus";
         target: "glow";
      }
   }
}






























////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

group { name: "elm/border/base/default";
   images.image: "vgrad_med_lighter.png" COMP;
   images.image: "vgrad_med_dark.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "shine.png" COMP;
   images.image: "bevel_dark_out.png" COMP;
   images.image: "sym_close_dark_normal.png" COMP;
   images.image: "sym_close_dark_selected.png" COMP;
   images.image: "sym_close_light_normal.png" COMP;
   images.image: "sym_close_light_selected.png" COMP;
   images.image: "sym_down_dark_normal.png" COMP;
   images.image: "sym_down_dark_selected.png" COMP;
   images.image: "sym_down_light_normal.png" COMP;
   images.image: "sym_down_light_selected.png" COMP;
   images.image: "sym_up_dark_normal.png" COMP;
   images.image: "sym_up_dark_selected.png" COMP;
   images.image: "sym_up_light_normal.png" COMP;
   images.image: "sym_up_light_selected.png" COMP;
   images.image: "glow_round_corners_small.png" COMP;
   images.image: "knob_round_small_busy.png" COMP;
   images.image: "screen_circular_shadow.png" COMP;
   images.image: "win_shadow.png" COMP;
   data.item: "shadow" "1";
   parts {
      spacer { "elm.spacer.opaque";
         desc {
            rel1.to: "top";
            rel2.to: "bottom";
         }
         desc { "shaded";
            rel1.to: "top";
            rel2.to: "elm.swallow.client";
         }
         desc { "max"; inherit: "shaded"; }
      }
      part { name: "shadow_clip"; type: RECT; mouse_events: 0;
         description { state: "default";
            rel1.to: "shadow";
            rel2.to: "shadow";
         }
         description { state: "hidden";
            visible: 0;
         }
      }
      part { name: "shadow_spacer"; type: SPACER;
         description { state: "default";
            rel1.offset: 7 5;
            rel2.offset: -8 -12;
         }
         description { state: "max";
            rel1.offset: 0 0;
            rel2.offset: -1 -1;
         }
      }
      part { name: "shadow"; mouse_events: 0; clip_to: "shadow_clip";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.to: "shadow_spacer";
            rel1.offset: -7 -3;
            rel2.to: "shadow_spacer";
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
         description { state: "shaded";
            inherit: "default";
            rel2.to: "elm.swallow.client";
         }
      }
      part { name: "client_clip"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to_y: "elm.swallow.client";
            rel2.to_y: "elm.swallow.client";
         }
         /* description { state: "hidden" 0.0; */
         /*    inherit: "default"; */
         /*    visible: 0; */
         /* } */
      }
      part { name: "elm.swallow.client"; type: SWALLOW;
         clip_to: "client_clip";
         description { state: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to: "top";
            rel2.relative: 1.0 0.0;
            rel2.to: "bottom";
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -1;
         }
      }
      part { name: "top"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "vgrad_med_lighter.png";
            rel1.to: "shadow_spacer";
            rel2.to_y: "title2";
            rel2.to_x: "shadow_spacer";
            rel2.offset: -1 0;
            fill.smooth: 0;
            TILED_HORIZ(120)
            color_class: "border_frame";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            image.normal: "vgrad_med_dark.png";
            color_class: "border_frame_active";
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            rel1.to: "top";
            rel2.to: "top";
            fill.smooth: 0;
         }
      }
      part { name: "elm.text.title"; type: TEXT; mouse_events: 0;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 3;
            rel1.to_x: "elm.event.icon";
            rel1.to_y: "shadow_spacer";
            rel2.relative: 0.0 0.0;
            rel2.offset: -2 3;
            rel2.to_x: "elm.event.minimize";
            rel2.to_y: "shadow_spacer";
            align: 0.5 0.0;
            color_class: "border_title";
            color3: 255 255 255 255;
            text { font: FNBD; size: 10;
               text_class: "title_bar";
               align: 0.5 0.0;
               min: 0 1;
            }
            fixed: 0 1;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "title2"; type: TEXT; mouse_events: 0;
         scale: 1;
         effect: SOFT_SHADOW BOTTOM;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: 1 2;
            rel1.to_x: "elm.event.icon";
            rel1.to_y: "shadow_spacer";
            rel2.relative: 0.0 0.0;
            rel2.offset: -1 2;
            rel2.to_x: "elm.event.minimize";
            rel2.to_y: "shadow_spacer";
            align: 0.5 0.0;
            color_class: "border_title_active";
            color3: 255 255 255 255;
            text { font: FNBD; size: 10;
               text_source: "elm.text.title";
               text_class: "title_bar";
               align: 0.5 0.0;
               min: 0 1;
            }
            fixed: 0 1;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "icon"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to: "elm.event.icon";
            rel2.to: "elm.event.icon";
         }
         description { state: "bounce1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
         }
         description { state: "bounce2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: -0.5 -0.5;
            rel2.relative: 1.2 1.2;
         }
      }
      part { name: "elm.swallow.icon"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "icon";
            rel1.relative: 0.15 0.15;
            rel2.to: "icon";
            rel2.relative: 0.85 0.85;
            rel2.offset: 0 0;
         }
      }
      part { name: "busy_clip"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "hung" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "knob"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "knob_round_small_busy.png";
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            max: 20 20;
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 -0;
            rel1.to: "elm.event.icon";
            rel2.relative: 1.0 1.0;
            rel2.offset: 2 -1;
            rel2.to: "elm.event.icon";
            align: 0.0 0.5;
            fixed: 1 1;
         }
      }
      part { name: "knob_spinner"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "knob";
            rel2.to: "knob";
            image.normal: "glow_round_corners_small.png";
            map.on: 1;
            map.smooth: 1;
            map.rotation.center: "knob";
         }
         description { state: "spin" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: 360;
         }
      }
      part { name: "clip1"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.to: "top";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "clip2"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.to: "top";
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "close1";  mouse_events: 0;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_close_dark_normal.png";
            rel1.to: "elm.event.close";
            rel2.to: "elm.event.close";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_close_dark_selected.png";
         }
      }
      part { name: "max1"; mouse_events: 0;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_up_dark_normal.png";
            rel1.to: "elm.event.maximize";
            rel2.to: "elm.event.maximize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_dark_selected.png";
         }
      }
      part { name: "min1"; mouse_events: 0;
         clip_to: "clip1";
         description { state: "default" 0.0;
            image.normal: "sym_down_dark_normal.png";
            rel1.to: "elm.event.minimize";
            rel2.to: "elm.event.minimize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_dark_selected.png";
         }
      }
      part { name: "close2"; mouse_events: 0;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_close_light_normal.png";
            rel1.to: "elm.event.close";
            rel2.to: "elm.event.close";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_close_light_selected.png";
         }
      }
      part { name: "max2"; mouse_events: 0;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_up_light_normal.png";
            rel1.to: "elm.event.maximize";
            rel2.to: "elm.event.maximize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_up_light_selected.png";
         }
      }
      part { name: "min2"; mouse_events: 0;
         clip_to: "clip2";
         description { state: "default" 0.0;
            image.normal: "sym_down_light_normal.png";
            rel1.to: "elm.event.minimize";
            rel2.to: "elm.event.minimize";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "sym_down_light_selected.png";
         }
      }
      part { name: "elm.event.icon"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to: "top";
            rel2.relative: 0.0 1.0;
            rel2.to: "top";
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.event.titlebar"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.event.icon";
            rel1.to_y: "top";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -1;
            rel2.to_x: "elm.event.minimize";
            rel2.to_y: "top";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.event.close"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to: "top";
            rel2.relative: 1.0 1.0;
            rel2.to: "top";
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.event.maximize"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -0.25 0.0;
            rel1.offset: -1 0;
            rel1.to_x: "elm.event.close";
            rel1.to_y: "top";
            rel2.relative: -0.25 1.0;
            rel2.to_x: "elm.event.close";
            rel2.to_y: "top";
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.event.minimize"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.offset: -1 0;
            rel1.to_x: "elm.event.maximize";
            rel1.to_y: "top";
            rel2.relative: 0.0 1.0;
            rel2.to_y: "top";
            rel2.to_x: "elm.event.maximize";
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.event.resize.tl"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "top";
            rel2.relative: 0.0 0.0;
            rel2.to: "top";
            min: 32 4;
            align: 0.0 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.event.resize.t"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_y: "top";
            rel1.to_x: "elm.event.resize.tl";
            rel2.relative: 0.0 0.0;
            rel2.to_x: "elm.event.resize.tr";
            rel2.to_y: "top";
            min: 0 4;
            align: 0.5 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.event.resize.tr"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to: "top";
            rel2.relative: 1.0 0.0;
            rel2.to: "top";
            min: 32 4;
            align: 1.0 0.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
      }
      part { name: "bottom"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "border_bottom";
            color: 64 64 64 255;
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -5;
            rel1.to: "shadow_spacer";
            rel2.to: "shadow_spacer";
            min: 0 5;
            fixed: 0 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "bevel2"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "bevel_dark_out.png";
            image.border: 1 1 1 1;
            image.middle: 0;
            rel1.to: "bottom";
            rel2.to: "bottom";
            fill.smooth: 0;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.event.resize.bl"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to: "bottom";
            rel2.relative: 0.0 1.0;
            rel2.to: "bottom";
            min: 32 5;
            align: 0.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "elm.event.resize.b"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel1.to_x: "elm.event.resize.tl";
            rel1.to_y: "bottom";
            rel1.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "elm.event.resize.tr";
            rel2.to_y: "bottom";
            min: 0 5;
            align: 0.5 1.0;
            color: 0 0 0 0;
            fixed: 0 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "elm.event.resize.br"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 1.0 1.0;
            rel1.to: "bottom";
            rel2.relative: 1.0 1.0;
            rel2.to: "bottom";
            min: 32 5;
            align: 1.0 1.0;
            color: 0 0 0 0;
            fixed: 1 1;
         }
         description { state: "shaded" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
         description { state: "max" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "shine"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "shine.png";
            rel1.offset: 0 -2;
            rel1.to: "top";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 2;
            rel2.to: "top";
            FIXED_SIZE(69, 5)
         }
      }
   }
   programs {
      program {
         signal: "e,state,shadow,on"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "shadow_clip";
      }
      program {
         signal: "e,state,shadow,off"; source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "shadow_clip";
      }
      program {
         signal: "elm,action,focus"; source: "elm";
         action: STATE_SET "focused" 0.0;
         target: "top";
         target: "elm.text.title";
         target: "title2";
         target: "clip1";
         target: "clip2";
      }
      program {
         signal: "elm,action,unfocus"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "top";
         target: "elm.text.title";
         target: "title2";
         target: "clip1";
         target: "clip2";
      }
      program {
         signal: "elm,state,urgent"; source: "elm";
         action: STATE_SET "bounce1" 0.0;
         target: "icon";
         after: "urg1";
      }
      program { name: "urg1";
         action: STATE_SET "bounce2" 0.0;
         transition: DECELERATE 0.4;
         target: "icon";
         after: "urg2";
      }
      program { name: "urg2";
         action: STATE_SET "bounce1" 0.0;
         transition: ACCELERATE 0.3;
         target: "icon";
         after: "urg1";
      }
      program {
         signal: "elm,state,not_urgent"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "icon";
      }
      program { name: "spin";
         signal: "elm,state,hung"; source: "elm";
         action: STATE_SET "spin" 0.0;
         transition: LINEAR 1.0;
         target: "knob_spinner";
         after: "spin2";
      }
      program { name: "spin2";
         action: STATE_SET "default" 0.0;
         target: "knob_spinner";
         after: "spin";
      }
      program {
         signal: "elm,state,hung"; source: "elm";
         action: STATE_SET "hung" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "busy_clip";
      }
      program {
         signal: "elm,state,unhung"; source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "busy_clip";
         after: "spin3";
      }
      program { name: "spin3";
         action: ACTION_STOP;
         target: "spin";
         target: "spin2";
         after: "spin4";
      }
      program { name: "spin4";
         action: STATE_SET "default" 0.0;
         target: "knob_spinner";
      }
      program {
         signal: "elm,state,shaded"; source: "elm";
         action: STATE_SET "shaded" 0.0;
         target: "shadow";
         after: "shading";
      }
      program { name: "shading";
//         signal: "elm,state,shading"; source: "elm";
         action: STATE_SET "shaded" 0.0;
         target: "elm.swallow.client";
         target: "elm.spacer.opaque";
         target: "bottom";
         target: "bevel2";
         target: "elm.event.resize.bl";
         target: "elm.event.resize.b";
         target: "elm.event.resize.br";
      }
      program {
         signal: "elm,state,unshading"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bottom";
         target: "elm.spacer.opaque";
         target: "bevel2";
         target: "elm.event.resize.bl";
         target: "elm.event.resize.b";
         target: "elm.event.resize.br";
         target: "client_clip";
         after: "unshading";
      }
      program { name: "unshading";
//         signal: "elm,state,unshading"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.client";
         target: "shadow";
         target: "client_clip";
      }
//      program {
//         signal: "e,action,maximize"; source: "elm";
//      }
//      program {
//         signal: "e,action,unmaximize"; source: "elm";
//      }
//      program {
//         signal: "e,action,maximize,fullscreen"; source: "elm";
//      }
//      program {
//         signal: "e,action,unmaximize,fullscreen"; source: "elm";
//      }
      program {
         signal: "elm,state,maximize*"; source: "elm";
         action: STATE_SET "max" 0.0;
         target: "elm.swallow.client";
         target: "elm.spacer.opaque";
         target: "bottom";
         target: "bevel2";
         target: "shadow_spacer";
         target: "elm.event.resize.bl";
         target: "elm.event.resize.b";
         target: "elm.event.resize.br";
      }
      program {
         signal: "elm,state,unmaximize*"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.client";
         target: "elm.spacer.opaque";
         target: "bottom";
         target: "bevel2";
         target: "shadow_spacer";
         target: "elm.event.resize.bl";
         target: "elm.event.resize.b";
         target: "elm.event.resize.br";
      }
      program {
         signal: "mouse,down,*"; source: "elm.event.close";
         action: STATE_SET "selected" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,up,*"; source: "elm.event.close";
         action: STATE_SET "default" 0.0;
         target: "close1";
         target: "close2";
      }
      program {
         signal: "mouse,down,*"; source: "elm.event.maximize";
         action: STATE_SET "selected" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,up,*"; source: "elm.event.maximize";
         action: STATE_SET "default" 0.0;
         target: "max1";
         target: "max2";
      }
      program {
         signal: "mouse,down,*"; source: "elm.event.minimize";
         action: STATE_SET "selected" 0.0;
         target: "min1";
         target: "min2";
      }
      program {
         signal: "mouse,up,*"; source: "elm.event.minimize";
         action: STATE_SET "default" 0.0;
         target: "min1";
         target: "min2";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,start" "elm";
      }
      program {
         signal: "mouse,up,1"; source: "elm.event.titlebar";
         action: SIGNAL_EMIT "elm,action,move,stop" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "elm.event.minimize";
         action: SIGNAL_EMIT "elm,action,minimize" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "elm.event.maximize";
         action: SIGNAL_EMIT "elm,action,maximize" "elm";
      }
      program {
         signal: "mouse,clicked,1"; source: "elm.event.close";
         action: SIGNAL_EMIT "elm,action,close" "elm";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.t";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.t";
      }
      program { name: "resize_t_down";
         signal: "mouse,down,1"; source: "elm.event.resize.t";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.t";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.b";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.b";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.resize.b";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.b";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.resize.tl";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.tl";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.resize.tr";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.tr";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.resize.bl";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.bl";
      }
      program {
         signal: "mouse,in"; source: "elm.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,show" "elm.event.resize.br";
      }
      program {
         signal: "mouse,out"; source: "elm.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,hide" "elm.event.resize.br";
      }
      program {
         signal: "mouse,down,1"; source: "elm.event.resize.br";
         action: SIGNAL_EMIT "elm,action,resize,start" "elm.event.resize.br";
      }
   }
}
