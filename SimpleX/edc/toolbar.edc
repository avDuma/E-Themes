group { name: "e/widgets/toolbar";
	images.image: "img/arrow_left.png" COMP;
	images.image: "img/arrow_right.png" COMP;
	parts {
		part { name: "base"; type: RECT;
			description { state: "default" 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				color: TRANSPARENT;
			}
		}
		part { name: "clipper"; type: RECT;
			description { state: "default" 0.0;
				rel1.to: "base";
				rel1.offset: 11 2;
				rel2.to: "base";
				rel2.offset: -12 -3;
			}
		}
		part { name: "e.swallow.content"; type: SWALLOW;
			clip_to: "clipper";
			description { state: "default" 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				rel1.to: "clipper";
				rel2.to: "clipper";
			}
		}
		part { name: "e.dragable.hbar"; mouse_events: 0;
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
			dragable.confine: "base";
			description { state: "default" 0.0;
				 rel1.to: "base";
				 rel2.to: "base";
				 visible: 0;
			 }
		 }
		part { name: "arrow_clipper"; type: RECT;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { name: "arrow1"; mouse_events: 0;
			clip_to: "arrow_clipper";
			description { state: "default" 0.0;
				rel1.to: "arrow1_ev";
				rel2.to: "arrow1_ev";
				image.normal: "img/arrow_left.png";
				FIXED_SIZE(11, 11)
				color_class: "label_text";
			}
			COLOR_STATE("prelight","fg_prelight")
		}
		part { name: "arrow1_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper";
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				align: 0.0 0.5;
				color: 0 0 0 0;
				FIXED_SIZE(11, 11)
			}
		}
		part { name: "arrow2"; mouse_events: 0;
			clip_to: "arrow_clipper";
			description { state: "default" 0.0;
				rel1.to: "arrow2_ev";
				rel2.to: "arrow2_ev";
				image.normal: "img/arrow_right.png";
				color_class: "label_text";
				FIXED_SIZE(11, 11)
			}
			COLOR_STATE("prelight","fg_prelight")
		}
		part { name: "arrow2_ev"; type: RECT;
			scale: 1;
			clip_to: "arrow_clipper";
			description { state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				align: 1.0 0.5;
				color: 0 0 0 0;
				FIXED_SIZE(11, 11)
			}
		}
	}
	programs {
		OVER("arrow1","arrow1_ev","default","prelight")
		OVER("arrow2","arrow2_ev","default","prelight")
		program {
			signal: "e,action,show,hbar"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "arrow_clipper";
			target: "arrow_clipper";
		}
		program {
			signal: "e,action,hide,hbar"; source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "arrow_clipper";
			target: "arrow_clipper";
		}
		
		program {		
			signal: "mouse,down,1*"; source: "arrow1_ev";
			action: SIGNAL_EMIT "e,action,prev" "e";
			after: "arrow1_repeat";
		}
		program { name: "arrow1_repeat";
			action: SIGNAL_EMIT "e,action,prev" "e";
			in: 0.3 0.0;
			after: "arrow1_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow1_ev";
			action: ACTION_STOP;
			target: "arrow1_repeat";
		}

		program {		
			signal: "mouse,down,1*"; source: "arrow2_ev";
			action: SIGNAL_EMIT "e,action,next" "e";
			after: "arrow2_repeat";
		}
		program { name: "arrow2_repeat";
			action: SIGNAL_EMIT "e,action,next" "e";
			in: 0.3 0.0;
			after: "arrow2_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "arrow2_ev";
			action: ACTION_STOP;
			target: "arrow2_repeat";
		}
	}
}

group { name: "e/widgets/toolbar/item";
	images.image: "shadow_inset_bevels.png" COMP;
	images.image: "shadow_angled_in_sides.png" COMP;
	images.image: "horizontal_separated_bar_small_glow.png" COMP;
	parts {
		part { name: "e.swallow.icon"; type: SWALLOW;
			description { state: "default" 0.0;
				align: 0.5 0.5;
				// aspect: 1.0 1.0;
				// aspect_preference: VERTICAL;
				rel1.relative: 0.0 0.0;
				rel1.offset: 2 2;
				rel2.to_y: "e.text.label";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -1;
			}
			description { state: "noicon" 0.0;
				inherit: "default" 0.0;
				visible: 0;
				rel1.offset: 2 0;
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -0;
			}
		}
		part { name: "e.text.label"; type: TEXT; mouse_events: 0;
			effect: PLAIN;
			scale: 1;
			description { state: "default" 0.0;
				rel1.offset: 2 -2;
				rel1.relative: 0.0 1.0;
				rel2.offset: -6 -2;
				align: 0.5 1.0;
				color: 255 255 255 255;
				color_class: "menu_item";
				text { font: "Sans"; size: 12;
					min: 1 1;
					ellipsis: -1;
					align: 0.5 0.5;
					text_class: "menu_item";
				}
				fixed: 0 1;
			}
			description { state: "noicon" 0.0;
				inherit: "default" 0.0;
				text.align: 0.0 0.5;
				rel1.offset: 4 -4;
			}
		}
		part { name: "hbar1"; mouse_events: 0; type: RECT;
			description { state: "default" 0.0;
				rel1.to_x: "bar";
				rel1.to_y: "e.swallow.icon";
				rel1.relative: 0.0 0.2;
				rel2.to_x: "bar";
				rel2.to_y: "e.text.label";
				rel2.relative: 0.0 0.8;
				min: 1 6;
				max: 1 -1;
				color_class: "toolbar_line";
			}
			COLOR_STATE("selected","focus")
		}
		part { name: "bar"; mouse_events: 0; type: RECT;
			description { state: "default" 0.0;
				rel1.offset: -4 2;
				rel1.relative: 0.0 1.0;
				rel1.to: "e.text.label";
				rel2.offset: 4 2;
				rel2.to: "e.text.label";
				min: 15 2;
				max: -1 2;
				color_class: "toolbar_line";
			}
			COLOR_STATE("selected","focus")
		}
		part { name: "event"; type: RECT;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
	}
	programs {
		program {
			signal: "e,icon,disabled"; source: "e";
			action: STATE_SET "noicon" 0.0;
			target: "e.swallow.icon";
			target: "e.text.label";
		}
		program {
			signal: "e,icon,enabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.swallow.icon";
			target: "e.text.label";
		}
		program {
			signal: "e,state,selected"; source: "e";
			action: STATE_SET "selected" 0.0;
			target: "bar";
		}
		program {
			signal: "e,state,unselected"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "bar";
		}
		program {
			signal: "mouse,up,1"; source: "event";
			action: SIGNAL_EMIT "e,action,click" "e";
		}
	}
}
