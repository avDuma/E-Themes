// TODO:
//   Formatting review.
//   Formatting Process: 1. http://tools.arantius.com/tabifier in C mode
//                       2. sed 's/\t/   /g' default.edc > formatted.edc
//                       3. Fix up defines, script{}, comments and other nicknacks.
//                       4. Replace ":    " with ": " and "//      " with "// " and so on.
//
//   Icons:
//      EFM - All popup icons ... eg, paste copy delete properties
//      Icons for Menus modules
//      Icon for Edge Bindings
//      Icon for Modes?
//      Replace all (well, most) instances of icon_dummy.png
//
/*
 * So how do themes work?
 *
 * Themes DECLARE objects (groups of parts) inside a 'collections' section.
 * Each of these groups are an element of a theme - much like an image in a
 * web page with <img src=blah.jpg>, but MUCH more powerful. They can scale
 * without just being stretched or tiled, they can react to all sorts of events
 * from the user (mouse for example) or other logical events (like being shown
 * or hidden, etc.) or synthetic signals from enlightenment itself indicating
 * some new state.
 *
 * Each group is split into a parts section that contains all the elements
 * that make up that group, and how they are laid out. Each part can have
 * multiple states - described in description sections. There must always be
 * at least a default description of value 0.0. After this there may possibly
 * be a programs section. This defines behavior and how the group will react
 * to events/signals.
 *
 * A theme is simply made up of a LOT of these. If a group is not provided in
 * the theme you are using, it will fall back to the default theme to get the
 * element. It is assumed the default theme is 100% complete and provides
 * everything E needs. If this is not the case, there will be problems, so
 * replace the default theme with great care. As long as the theme you make is
 * just a normal "overlay" (and falls back to the default where things are
 * missing) Things will be fairly safe. If you want to make a full default
 * replacement you will need to methodically go through all of this file
 * and make sure you have replaced/provided everything here.
 */

/* Spectrum used in all the gradient icons
 * This needs to be defined outside of the collections
 *
 * FIXME: this is bad. namespacing! FIXME!
 */
#if 0
spectra {
   spectrum {
      name: "black_to_trans";
      color: 0 0 0 255 1;
      color: 0 0 0 0 1;
   }
}
#endif
/* color classes are used to control the colors of text and also apply
 * tints to images. These can be controlled with the colors dialog. Below
 * are the standard color_class names that the module looks for in a
 * theme. Consider color classes as a style that can be applied to many
 * different items without tinkering with the theme.
 *
 * color: Font color     (Defaults to black)
 * color2: Outline color  (Defaults to transparent)
 * color3: Shadow color   (Defaults to transparent)
 *
 */

color_classes {
   color_class {
      name: "border_top";
      color: 255 255 255 255;
   }
   color_class {
      name: "border_top_hilight";
      color: 255 255 255 255;
   }
   color_class {
      name: "border_bottom";
      color: 255 255 255 255;
   }
   color_class {
      name: "border_title";
      color: 0 0 0 50;
   }
   color_class {
      name: "border_title_active";
      color: 0 0 0 255;
   }
   color_class {
      name: "menu_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "menu_title";
      color: 224 224 224 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "menu_title_active";
      color: 224 224 224 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "menu_item";
      color: 0 0 0 255;
      color3: 0 0 0 0;
   }
   color_class {
      name: "menu_item_active";
      color: 255 255 255 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "menu_item_disabled";
      color: 110 110 110 255;
      color3: 0 0 0 0;
   }
   color_class {
      name: "shelf_base";
      color: 27 145 27 255;
   }
   color_class {
      name: "scrollframe_base";
      color: 255 255 255 255;
   }
   // this seems totaly bogus, should be per module or really used as
   // a unique color for all modules!
   //    color_class {
   //       name: "module_label";
   //       color: 0 0 0 0;
   //    }
   color_class {
      name: "winlist_label";
      color: 0 0 0 255;
   }
   color_class {
      name: "winlist_item";
      color: 0 0 0 255;
      color3: 0 0 0 0;
   }
   color_class {
      name: "winlist_item_active";
      color: 224 224 224 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "button_text";
      color: 224 224 224 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "button_text_disabled";
      color: 0 0 0 128;
      color3: 0 0 0 0;
   }
   color_class {
      name: "fileman_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "ilist_item_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "ilist_item_odd_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "ilist_item_header_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "ilist_item_header_odd_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "ilist_item";
      color: 0 0 0 255;
      color3: 0 0 0 0;
   }
   color_class {
      name: "ilist_item_odd";
      color: 0 0 0 255;
      color3: 0 0 0 0;
   }
   color_class {
      name: "ilist_item_selected";
      color: 255 255 255 255;
      color3: 0 0 0 64;
   }
   color_class {
      name: "ilist_item_header";
      color: 224 224 224 255;
      color3: 0 0 0 32;
   }
   color_class {
      name: "ilist_item_header_odd";
      color: 224 224 224 255;
      color3: 0 0 0 32;
   }
   color_class {
      name: "dialog_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "move_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "resize_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "check_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "check_text_disabled";
      color: 0 0 0 128;
   }
   color_class {
      name: "radio_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "radio_text_disabled";
      color: 0 0 0 128;
   }
   color_class {
      name: "entry_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "entry_text_disabled";
      color: 128 128 128 255;
   }
   color_class {
      name: "slider_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "slider_text_disabled";
      color: 0 0 0 128;
   }
   color_class {
      name: "frame_base";
      color: 255 255 255 255;
   }
   color_class {
      name: "label_text";
      color: 0 0 0 255;
   }
   color_class {
      name: "label_text_disabled";
      color: 0 0 0 128;
   }
   color_class {
      name: "comp_focus-out_color";
      color: 255 255 255 220;
   }
   color_class {
      name: "PIPPO";
      color: 255 255 255 220;
   }
}

/*
 * this section defines all the theme elements (a collection of groupings of
 * parts (images, text, rects etc.))
 
*/
collections {
#include "edcs/background.edc" 
#include "edcs/borders.edc"
#include "edcs/systray.edc"
#include "edcs/taskbar_old.edc"
#include "edcs/dialog.edc"

/////////////////////////////////////////////////////////////////////////////
/*** THE DEFAULT MOUSE CURSOR - COLOR ***/

   group {
      name: "e/pointer/enlightenment/default/color";
      images {
         image: "pointer.png" COMP;
         image: "pointer_glow.png" COMP;
         image: "pointer_glint_01.png" COMP;
         image: "pointer_glint_02.png" COMP;
         image: "pointer_glint_03.png" COMP;
         image: "pointer_glint_04.png" COMP;
         image: "pointer_glint_05.png" COMP;
         image: "pointer_glint_06.png" COMP;
         image: "pointer_glint_07.png" COMP;
         image: "pointer_glint_08.png" COMP;
         image: "pointer_glint_09.png" COMP;
         image: "pointer_glint_10.png" COMP;
         image: "pointer_glint_11.png" COMP;
         image: "pointer_glint_12.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 0.71875 0.71875;
               /* force a specific aspect ratio so
                * when it gets scaled it wont squash
                * or stretch */
               aspect_preference: BOTH;
               /* both axes control aspect - thus it
                * will be WITHIN the bounds the axes
                * of thre part describe */
               image {
                  normal: "pointer.png";
               }
            }
         }
         part {
            name: "glow";
            /* this overlay is used to put a white glow
             * around the pointer, so when the pointer is
             * idle every now and again it will pulsate
             * with this glow to just remind you where the
             * pointer is (if you lose a black-ish
             * pointer on a black background) */
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               visible: 0;
               color: 255 255 255 0;
               image.normal: "pointer_glow.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "glint";
            /* this overlay flips a series of small images
             * over the pointer. they look like a white
             * light/refelection when put over the pointer
             * base image - and produce a "glinting" effect
             * when played back fast */
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               visible: 0;
               image.normal: "pointer_glint_12.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.tween: "pointer_glint_01.png";
               image.tween: "pointer_glint_02.png";
               image.tween: "pointer_glint_03.png";
               image.tween: "pointer_glint_04.png";
               image.tween: "pointer_glint_05.png";
               image.tween: "pointer_glint_06.png";
               image.tween: "pointer_glint_07.png";
               image.tween: "pointer_glint_08.png";
               image.tween: "pointer_glint_09.png";
               image.tween: "pointer_glint_10.png";
               image.tween: "pointer_glint_11.png";
               image.normal: "pointer_glint_12.png";
            }
         }
         part {
            name: "e.swallow.hotspot";
            /* this is a "fake" swallow part
             * that is used by e to determine
             * the pointer hotspot - or where
             * the actual mouse events get
             * reported from on the cursor */
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  /* the hotspot will scale with the cursor here */
                  to: "base";
                  relative: 0.27 0.125;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 0.27 0.125;
                  offset: 0 0;
               }
            }
         }
      }
      programs {
         program {
            name: "mouse_down";
            /* called every time e detects a mouse
             * press */
            signal: "e,action,mouse,down";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "glint";
            after: "mouse_down2";
         }
         program {
            name: "mouse_down2";
            action: STATE_SET "default" 0.0;
            target: "glint";
         }
         program {
            name: "mouse_idle";
            /* called when e thinks the mouse went
             * idle and isn't moving */
            signal: "e,state,mouse,idle";
            source: "e";
            action: STATE_SET "visible" 0.0;
            in: 5.0 0.0;
            transition: SINUSOIDAL 1.0;
            target: "glow";
            after: "mouse_idle2";
         }
         program {
            name: "mouse_idle2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 2.0;
            target: "glow";
            after: "mouse_idle";
         }
         program {
            name: "mouse_active";
            /* called when e sees the mouse become
             * active again */
            signal: "e,state,mouse,active";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "glow";
            after: "mouse_active2";
         }
         program {
            name: "mouse_active2";
            action: ACTION_STOP;
            target: "mouse_idle";
            target: "mouse_idle2";
         }
         // when mouse button is released. not used here
         //         program { name: "xx";
         //       signal: "e,action,mouse,up";
         //       source: "e";
         //    }
         // when mouse button is moved. not used here
         //         program { name: "xx";
         //       signal: "e,action,mouse,move";
         //       source: "e";
         //    }
         // when mouse wheel is scrolled. not used here
         //         program { name: "xx";
         //       signal: "e,action,mouse,wheel";
         //       source: "e";
         //    }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** THE DEFAULT MOUSE CURSOR - MONOCHROME. REALLY BORING ***/
   /* This pointer is used if the Xserver does not support full ARGB color
    * pointers. This can happen if X is old or the driver or libxcursor did
    * not exist when ecore was compiled. since the cursor will be literally
    * reduced down to black and white with a single transparency mask,
    * colors other than black and whigte will be lost (and be approximated
    * with dithering) and any translucency other than completely opaque or
    * completely transparent pixels will also be lost. it then makes sense
    * to have a special black and white only image with no semi-transparency
    * so when this is displayed it will look directly as intended by the
    * artist */

   group {
      name: "e/pointer/enlightenment/default/mono";
      images {
         image: "pointer_mono.png" COMP;
         /* a simple mono cursor image */
      }
      parts {
         part {
            name: "e/pointer";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "pointer_mono.png";
               }
            }
         }
         part {
            name: "hotspot";
            /* this cursor also has a hotspot */
            type: SWALLOW;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** SLIDESEL */

   /* this is a horizontal slide selector in e where you drag it horizontally
    * and different icons appear with text near it indicating what is
    * selected. not actually used anywhere, currently, but in e nevertheless */

   group {
      name: "e/widgets/slidesel";
      images {
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
         image: "bt_dis_shine.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "e.text.label";
                  relative: 0.0 1.0;
                  offset: 2 2;
               }
               rel2.offset: -3 -3;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: 2 2;
               }
               rel2 {
                  to: "base";
                  offset: -3 -3;
               }
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "clipper";
               rel2.to: "clipper";
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image {
                  normal: "bt_dis_shine.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -3 2;
               }
               align: 0.0 0.0;
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 0 1;
                  align: 0.5 0.0;
                  text_class: "slidesel_label";
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** TOOLBAR ****/

   group {
      name: "e/widgets/toolbar";
      images {
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
         image: "bt_dis_shine.png" COMP;
         image: "icon_left_arrow.png" COMP;
         image: "icon_right_arrow.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2.offset: -3 -3;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: 2 2;
               }
               rel2 {
                  to: "base";
                  offset: -3 -3;
               }
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "clipper";
               rel2.to: "clipper";
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image {
                  normal: "bt_dis_shine.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
               color: 255 255 255 128;
            }
         }
         part {
            name: "left_arrow";
            mouse_events: 1;
            scale: 1;
            description {
               state: "default" 0.0;
               image.normal: "icon_left_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "right_arrow";
            mouse_events: 1;
            scale: 1;
            description {
               state: "default" 0.0;
               image.normal: "icon_right_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
               min: 32 32;
               max: 32 32;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.dragable.hbar";
            mouse_events: 0;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "base";
            }
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "base";
               rel2.to: "base";
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
            target: "right_arrow";
         }
         program {
            name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "left_arrow";
            target: "right_arrow";
            transition: LINEAR 0.5;
         }
         program {
            name: "sb_left";
            signal: "mouse,down,1";
            source: "left_arrow";
            action: SIGNAL_EMIT "e,action,prev" "e";
         }
         program {
            name: "sb_right";
            signal: "mouse,down,1";
            source: "right_arrow";
            action: SIGNAL_EMIT "e,action,next" "e";
         }
      }
   }
   group {
      name: "e/widgets/toolbar/item";
      images {
         image: "toolbar_sel.png" COMP;
      }
      parts {
         part {
            name: "label2";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               color: 0 0 0 255;
               text {
                  font: "Sans";
                  text_source: "e.text.label";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "toolbar_sel.png";
                  border: 3 3 0 0;
               }
               fill.smooth: 0;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               // aspect: 1.0 1.0;
               // aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0 0.0;
                  offset: -3 -1;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               visible: 0;
               color: 224 224 224 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.2;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "go";
            signal: "mouse,up,1";
            source: "event";
            action: SIGNAL_EMIT "e,action,click" "e";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MENUS ***/

   /* this is the background for all menus. it also may optionally display a
    * title for the menu. this is wrapped around all the menu items that are
    * laid out in a vertical list from top to bottom */

   group {
      name: "e/widgets/menu/default/background";
      images {
         image: "base_bg.png" COMP;
         image: "bd_top_hilight.png" COMP;
         image: "bd_title_bg.png" COMP;
         image: "bd_title_over.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               color_class: "menu_base";
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
               /* note - a shortcut for avoiding doing
                * fill { smooth: 0; } */
            }
         }
         part {
            name: "top_hilight";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 15;
               }
               image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
            }
         }
         part {
            name: "title_back";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -5 0;
               }
               image {
                  normal: "bd_title_bg.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 0;
               }
               rel2 {
                  to_y: "e.text.title";
                  relative: 1.0 1.0;
                  offset: -5 -4;
               }
            }
         }
         part {
            name: "e.text.title";
            /* e sets the text of this to the title
             * if there is any */
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               visible: 0;
               align: 0.5 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               color_class: "menu_title";
               text {
                  text_source: "e.text.title";
                  font: "Sans:style=Bold";
                  size: 10;
                  align: 0.5 0.0;
                  min: 0 0;
                  text_class: "menu_title";
               }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color_class: "menu_title_active";
               text.min: 1 1;
            }
         }
         part {
            name: "title_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "title_back";
               rel2.to: "title_back";
               image {
                  normal: "bd_title_over.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "e.swallow.content";
            /* this swallow part determines
             * where in the menu the vertical
             * list of menu items is put */
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "e.text.title";
                  relative: 0.0 1.0;
                  offset: 2 1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -3;
               }
            }
         }
      }
      programs {
         program {
            name: "on";
            /* this program is run when e emits a signal
             * to display a title. e will also set the
             * title text */
            signal: "e,action,show,title";
            source: "e";
            action: STATE_SET "active" 0.0;
            target: "title_back";
            target: "e.text.title";
            target: "title_over";
         }
         program {
            name: "off";
            /* run when the title is removed */
            signal: "e,action,hide,title";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "title_back";
            target: "e.text.title";
            target: "title_over";
         }
      }
   }
   /* this is placed as a horizontal separator between menu items in the
    * vertical menu item list. it has no functionality other than being
    * a visual separator */
   group {
      name: "e/widgets/menu/default/separator";
      images {
         image: "menu_sep.png" COMP;
      }
      parts {
         part {
            name: "separator";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 16 2;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
               image {
                  normal: "menu_sep.png";
                  border: 2 2 0 0;
               }
               fill.smooth: 0;
            }
         }
      }
   }
   /* this is used for regular menu items. this is what swallows/holds the
    * whole line of the menu item, icon, check/radio mark, label and submenu
    * indicator, where applicable */
   group {
      name: "e/widgets/menu/default/item_bg";
      /* this is idential to the regular menu item above, but used only for
       * items that have a submenu. this is to allow for a possible different
       * look for submenu holding items. here this is identical to to the
       * normal menu item, thus we are making use of the alias directive that
       * gives a group the ability to go by manu names */
      alias: "e/widgets/menu/default/submenu_bg";
      images {
         image: "menu_sel_bg.png" COMP;
         image: "menu_sel_fg.png" COMP;
      }
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 5;
               }
               image {
                  normal: "menu_sel_bg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 2;
               }
            }
         }
         part {
            name: "e.swallow.content";
            /* all item content will go here */
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               rel1.offset: 2 1;
               rel2.offset: -3 -2;
            }
         }
         part {
            name: "fg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "menu_sel_fg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "sel";
            /* when the menu item is selected (hilighted)
             * this program is run to give the whole item
             * an overall selected look */
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            transition: LINEAR 0.2;
            target: "bg";
            target: "fg";
         }
         program {
            name: "unsel";
            /* when selection is removed from the menu
             * item */
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "bg";
            target: "fg";
         }
      }
   }
   /* this group holds a menu icon. here we just use it to add padding around
    * the icon. And to gray-out when disabled */
   group {
      name: "e/widgets/menu/default/icon";
      parts {
         part {
            name: "clip";
            type: RECT;
            description {
               min: 10 10;
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "e.swallow.content";
            /* icon is swallowed here */
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 24 24;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -3;
               }
            }
         }
      }
      programs {
         program {
            name: "enable";
            /* enable */
            signal: "e,state,enable";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clip";
         }
         program {
            name: "disable";
            /* disable */
            signal: "e,state,disable";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "clip";
         }
      }
   }
   /* this is the actual text label for the menu item */
   group {
      name: "e/widgets/menu/default/label";
      parts {
         part {
            name: "e.text.label";
            /* e sets the text of this */
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 1 -1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 1;
               }
               color_class: "menu_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "menu_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "menu_item_active";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "menu_item_disabled";
            }
         }
      }
      programs {
         program {
            name: "sel";
            /* when the menu item is actually selected */
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            transition: LINEAR 0.2;
            target: "e.text.label";
         }
         program {
            name: "unsel";
            /* on de-select */
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "e.text.label";
         }
         program {
            name: "enable";
            /* enable */
            signal: "e,state,enable";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "e.text.label";
         }
         program {
            name: "disable";
            /* disable */
            signal: "e,state,disable";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            //transition: LINEAR 0.3;
            target: "e.text.label";
         }
      }
   }
   /* this is a small arrow on the right of the menu item to indicate that it
    * has a submenu after it */
   group {
      name: "e/widgets/menu/default/submenu";
      images {
         image: "menu_arrow_normal.png" COMP;
         image: "menu_arrow_sel.png" COMP;
      }
      parts {
         part {
            name: "arrow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 9 12;
               max: 9 12;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -1;
               }
               image.normal: "menu_arrow_normal.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "menu_arrow_sel.png";
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "arrow";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
      }
   }
   /* this is placed left of the icon in a menu item (if any icon) or left
    * of the label if no icon is present. this is a checkbox to indicate if
    * the menu item is enabled or disabled */
   group {
      name: "e/widgets/menu/default/check";
      images {
         image: "check_base.png" COMP;
         image: "check_on.png" COMP;
         image: "check_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               image.normal: "check_base.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "check_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "check_sel.png";
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
      }
      programs {
         program {
            name: "sel";
            /* on selection of the menu item */
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "mark";
         }
         program {
            name: "unsel";
            /* de-select */
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
         }
         program {
            name: "on";
            /* if the checkmark is to be displayed */
            signal: "e,state,on";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            /* check mark is not to be displayed */
            signal: "e,state,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
      }
   }
   /* for a radio menu item - same as check, but only one of a group of radio
    * menu item can be selected at any one time */
   group {
      name: "e/widgets/menu/default/radio";
      images {
         image: "radio_base.png" COMP;
         image: "radio_on.png" COMP;
         image: "radio_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               image.normal: "radio_base.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "menu_arrow_sel.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "radio_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "radio_sel.png";
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "mark";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
         }
         program {
            name: "on";
            signal: "e,state,on";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            signal: "e,state,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** SHELF ***/

   /* Shelves are "panels" that  are placed around the edges of the screen
    * to hold useful gadgets to control things - like switch desktops
    * (the pager module and its gadget), launch programs, and anything else
    * someone wants to put in there. The way to add gadgets to a shelf is to
    * write a module that places a gadget there. This means that it might end
    * up containing all sorts of things and the artist needs to be aware of
    * that and make sure the shelf border and background etc. won't interfere
    * with all manner of things that may get placed there */

   group {
      name: "e/shelf/default/base";
      data {
         /* this tells e the shelf is shaped, not rectangular */
             item: "argb" "1";
         /* this tells e the number of pixels of the shelf to leave "exposed"
          * when auto-hiding the shelf */
         item: "hidden_state_size" "1";
         /* This makes the border hide instantly after the given amount of
          * seconds - in this case 3 seconds. This means there will be no
          * visible part of the shelf after this time at all as it will be
          * totally hidden */
         //    item: "instant_delay" "3.0";
      }
      images {
         image: "base_bg.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "shelf_base";
               image.normal: "base_bg.png";
               image.border: 2 2 2 2;
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -4 -4;
               }
            }
         }
      }
      programs {
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top_left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top_right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom_left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom_right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left_top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left_bottom";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right_top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right_bottom";
         //    source: "e";
         //      }
         // tell us we became a visible shelf. not used here
         //      program { name: "xx";
         //    signal: "e,state,visible";
         //    source: "e";
         //      }
         // tell us we became a hidden shelf. not used here
         //      program { name: "xx";
         //    signal: "e,state,hidden";
         //    source: "e";
         //      }
      }
   }
   /* This is put around gadgets in the shelf if they ask for an "inset" style
    * framing. This puts some sort of bordering around them to make them look
    * "inset" into the shelf or screen. this is meant to go with the default
    * shelf style as implied in the group name */
   group {
      name: "e/shelf/default/inset";
      images {
         image: "inset_sunk.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "inset";
                  offset: 1 1;
               }
               rel2 {
                  to: "inset";
                  offset: -2 -2;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: 1 1;
               }
               rel2 {
                  to: "base";
                  offset: -2 -2;
               }
            }
         }
         part {
            name: "inset";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
               image.normal: "inset_sunk.png";
               image.middle: 0;
               /* here we say the "middle" part of the image
                * between the borders is not filled - it's
                * empty, so don't draw it - ignore it */
               image.border: 7 7 7 7;
               fill.smooth: 0;
            }
         }
      }
      programs {
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top_left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,top_right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom_left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,bottom_right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left_top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,left_bottom";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right_top";
         //    source: "e";
         //      }
         // tell us what oriantation we are in. not used here
         //      program { name: "xx";
         //    signal: "e,state,orientation,right_bottom";
         //    source: "e";
         //      }
      }
   }
   /* Same as inset, but meant to be with no decorations that are visible. here
    * we simply make the content swallow inset a bit from the edges to align
    * with any plain style inset boxes */
   group {
      name: "e/shelf/default/plain";
      parts {
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
      }
   }
   /* This is the "invisible" shelf. Yes. Even it has visual config in edje.
    * The idea is that it will remain invisible, BUT will allow the designer
    * to do some layout and padding. This gets the same signals as the
    * default shelf and can provide the same data items */
   group {
      name: "e/shelf/invisible/base";
      data.item: "shaped" "1";
      parts {
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
      }
   }
   group {
      name: "e/shelf/invisible/inset";
      images {
         image: "inset_sunk_dark.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "inset";
                  offset: 1 1;
               }
               rel2 {
                  to: "inset";
                  offset: -2 -2;
               }
               color: 0 0 0 32;
            }
         }
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: 1 1;
               }
               rel2 {
                  to: "base";
                  offset: -2 -2;
               }
            }
         }
         part {
            name: "inset";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
               image.normal: "inset_sunk_dark.png";
               image.middle: 0;
               image.border: 7 7 7 7;
               fill.smooth: 0;
            }
         }
      }
   }
   group {
      name: "e/shelf/invisible/plain";
      parts {
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
      }
   }
   /* This is the alternate shelf. It provides a stylistic alternative to
    * make the shelf more dynamic to your tastes and wallpaper. It is
    * selected in the Shelf Configuration. More alternative shelfs can
    * be provided by using more group names. eg, "e/shelf/black/base" */
   group {
      name: "e/shelf/alternate/base";
      images {
         image: "shelf_alt_bg.png" COMP;
         //     image: "shelf_alt_bg_left.png" COMP;
         //     image: "shelf_alt_bg_right.png" COMP;
         image: "shelf_alt_over.png" COMP;
         //     image: "shelf_alt_over_left.png" COMP;
         //     image: "shelf_alt_over_right.png" COMP;
         image: "shelf_alt_shine.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "shelf_base";
               image.normal: "shelf_alt_bg.png";
               fill.smooth: 0;
            }
            //        description { state: "left" 0.0;
            //           image.normal: "shelf_alt_bg_left.png";
            //           fill.smooth: 0;
            //        }
            //        description { state: "right" 0.0;
            //           image.normal: "shelf_alt_bg_right.png";
            //           fill.smooth: 0;
            //        }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -4 -4;
               }
            }
         }
         part {
            name: "shine";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "shelf_alt_shine.png";
               rel2.relative: 1.0 0.5;
               fill.smooth: 0;
            }
            //        description { state: "left" 0.0;
            //           inherit: "default" 0.0;
            //           color: 255 255 255 0;
            //        }
            //        description { state: "right" 0.0;
            //           inherit: "default" 0.0;
            //           color: 255 255 255 0;
            //        }
         }
         part {
            name: "over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "shelf_alt_over.png";
               image.border: 5 5 5 5;
               image.middle: 0;
               fill.smooth: 0;
            }
            //        description { state: "left" 0.0;
            //           image.normal: "shelf_alt_over_left.png";
            //           image.border: 5 5 5 5;
            //           image.middle: 0;
            //           fill.smooth: 0;
            //        }
            //        description { state: "right" 0.0;
            //           image.normal: "shelf_alt_over_right.png";
            //           image.border: 5 5 5 5;
            //           image.middle: 0;
            //           fill.smooth: 0;
            //        }
         }
      }
      /* Because programs can not respond to 2 different types of signals,
       * the programs are split into individual programs that point towards
       * the base program for its orientation. */
      programs {
         /* Left orientation */
         //     program { name: "left";
         //        signal: "e,state,orientation,left";
         //        source: "e";
         //        action: STATE_SET "left" 0.0;
         //        target: "base";
         //        target: "over";
         //        target: "shine";
         //     }
         //     program { name: "left_top";
         //        signal: "e,state,orientation,left_top";
         //        source: "e";
         //        after: "left";
         //     }
         //     program { name: "left_bottom";
         //        signal: "e,state,orientation,left_bottom";
         //        source: "e";
         //        after: "left";
         //     }
         //     /* Right orientation */
         //     program { name: "right";
         //        signal: "e,state,orientation,right";
         //        source: "e";
         //        action: STATE_SET "right" 0.0;
         //        target: "base";
         //        target: "over";
         //        target: "shine";
         //     }
         //     program { name: "right_top";
         //        signal: "e,state,orientation,right_top";
         //        source: "e";
         //        after: "right";
         //     }
         //     program { name: "right_bottom";
         //        signal: "e,state,orientation,right_bottom";
         //        source: "e";
         //        after: "right";
         //     }
      }
   }
   /* This is the alternate shelf. It provides a stylistic alternative to
    * make the shelf more dynamic to your tastes and wallpaper. It is
    * selected in the Shelf Configuration. More alternative shelfs can
    * be provided by using more group names. eg, "e/shelf/black/base" */
   group { name: "e/shelf/alternate_vertical/base";
      images {
	 image: "shelf_alt_vert_bg.png" COMP;
// 	 image: "shelf_alt_bg_left.png" COMP;
// 	 image: "shelf_alt_bg_right.png" COMP;
	 image: "shelf_alt_over.png" COMP;
// 	 image: "shelf_alt_over_left.png" COMP;
// 	 image: "shelf_alt_over_right.png" COMP;
      }
      parts {
	 part { name: "base";
	    mouse_events: 0;
	    description { state: "default" 0.0;
               color_class: "shelf_base";
	       image.normal: "shelf_alt_vert_bg.png";
	       fill.smooth: 0;
	    }
// 	    description { state: "left" 0.0;
// 	       image.normal: "shelf_alt_bg_left.png";
// 	       fill.smooth: 0;
// 	    }
// 	    description { state: "right" 0.0;
// 	       image.normal: "shelf_alt_bg_right.png";
// 	       fill.smooth: 0;
// 	    }
	 }
	 part { name: "e.swallow.content";
	    type: SWALLOW;
	    description { state: "default" 0.0;
	       rel1 {
		  relative: 0.0 0.0;
		  offset: 3 3;
	       }
	       rel2 {
		  relative: 1.0 1.0;
		  offset: -4 -4;
	       }
	    }
	 }
	 part { name: "over";
	    mouse_events: 0;
	    description { state: "default" 0.0;
	       image.normal: "shelf_alt_over.png";
	       image.border: 5 5 5 5;
	       image.middle: 0;
	       fill.smooth: 0;
	    }
// 	    description { state: "left" 0.0;
// 	       image.normal: "shelf_alt_over_left.png";
// 	       image.border: 5 5 5 5;
// 	       image.middle: 0;
// 	       fill.smooth: 0;
// 	    }
// 	    description { state: "right" 0.0;
// 	       image.normal: "shelf_alt_over_right.png";
// 	       image.border: 5 5 5 5;
// 	       image.middle: 0;
// 	       fill.smooth: 0;
// 	    }
	 }
      }
      /* Because programs can not respond to 2 different types of signals,
       * the programs are split into individual programs that point towards
       * the base program for its orientation. */
      programs {
	 /* Left orientation */
// 	 program { name: "left";
// 	    signal: "e,state,orientation,left";
// 	    source: "e";
// 	    action: STATE_SET "left" 0.0;
// 	    target: "base";
// 	    target: "over";
// 	    target: "shine";
// 	 }
// 	 program { name: "left_top";
// 	    signal: "e,state,orientation,left_top";
// 	    source: "e";
// 	    after: "left";
// 	 }
// 	 program { name: "left_bottom";
// 	    signal: "e,state,orientation,left_bottom";
// 	    source: "e";
// 	    after: "left";
// 	 }
// 	 /* Right orientation */
// 	 program { name: "right";
// 	    signal: "e,state,orientation,right";
// 	    source: "e";
// 	    action: STATE_SET "right" 0.0;
// 	    target: "base";
// 	    target: "over";
// 	    target: "shine";
// 	 }
// 	 program { name: "right_top";
// 	    signal: "e,state,orientation,right_top";
// 	    source: "e";
// 	    after: "right";
// 	 }
// 	 program { name: "right_bottom";
// 	    signal: "e,state,orientation,right_bottom";
// 	    source: "e";
// 	    after: "right";
// 	 }
      }
   }
   group {
      name: "e/shelf/alternate/inset";
      images {
         image: "inset_raised.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "inset";
                  offset: 4 4;
               }
               rel2 {
                  to: "inset";
                  offset: -5 -5;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "inset";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: -1 -1;
               rel2.offset: 0 0;
               image.normal: "inset_raised.png";
               image.middle: 0;
               image.border: 7 7 7 7;
               fill.smooth: 0;
            }
         }
      }
   }
   group {
      name: "e/shelf/alternate/plain";
      parts {
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: CONNMAN ***/

   // ICONS: receive the following signals, all with source being "e"
   //    e,favorite,{yes,no}
   //    e,auto_connect,{yes,no}
   //    e,pass_required,{yes,no}
   //    e,state,{idle,association,configuration,ready,disconnect,failure}
   //    e,mode,{managed,adhoc,gprs,edge,umts}
   //    e,security,{none,wep,psk,ieee8021x,wpa,rsn}
   // and also the following message:
   //    id=1, type=MSG_INT, description=strength (0-100)

   group {
      name: "e/modules/connman/icon/ethernet";
      max: 128 128;
      min: 16 16;
      parts {
         part {
            name: "icon";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.image: "connman-ethernet.png" COMP;
               image.normal: "connman-ethernet.png";
            }
         }
      }
   }
   group {
      name: "e/modules/connman/icon/wifi";
      max: 128 128;
      min: 16 16;
      images {
         image: "connman-wifi-good.png" COMP;
         image: "connman-wifi-medium.png" COMP;
         image: "connman-wifi-bad.png" COMP;
      }
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               strength = getarg(2);
               if (strength >= 65)
                  run_program(PROGRAM:"strength,good"); 
               else if (strength >= 35)
                  run_program(PROGRAM:"strength,medium"); 
               else
                  run_program(PROGRAM:"strength,bad");
            }
         }
      }
      parts {
         part {
            name: "icon";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "connman-wifi-good.png";
            }
            description {
               state: "medium" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-medium.png";
            }
            description {
               state: "bad" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-bad.png";
            }
         }
         programs {
            program {
               name: "strength,good";
               action: STATE_SET "default" 0.0;
               target: "icon";
            }
            program {
               name: "strength,medium";
               action: STATE_SET "medium" 0.0;
               target: "icon";
            }
            program {
               name: "strength,bad";
               action: STATE_SET "bad" 0.0;
               target: "icon";
            }
         }
      }
   }
   // GADGET and TIP all have the same parts and signals:
   //
   // SIGNALS:
   //    e,unavailable: connmand is not running (nothing else works)
   //    e,available: connmand is running
   //
   //    e,changed,offline_mode,{yes,no}
   //    e,changed,connected,{yes,no}
   //    e,changed,service,{system,ethernet,wifi,wimax,bluetooth,cellular,vpn}
   //    e,changed,technology,{wifi,ethernet,bluetooth,wimax,cellular}
   //    e,changed,state,{idle,association,configuration,ready,disconnect,failure}
   //    e,changed,mode,{managed,adhoc,gprs,edge,umts}
   //    e,changed,security,{none,wep,psk,ieee8021x,wpa,rsn}
   //    e,changed,favorite,{yes,no}
   //    e,changed,auto_connect,{yes,no}
   //    e,changed,pass_required,{yes,no}
   //    e,changed,error,{yes,no}
   //    e,changed,ipv4_address,{yes,no}
   //
   // PARTS:
   //    e.text.offline_mode (filled with offline message)
   //    e.text.name
   //    e.text.error
   //    e.text.technology
   //    e.text.state
   //    e.text.ipv4_address
   //
   // MESSAGES:
   //    id=1, type=MSG_INT, description=strength (0-100)
   group {
      name: "e/modules/connman/main";
      images {
         image: "connman-disconnect.png" COMP;
         image: "connman-disconnect-offline.png" COMP;
         image: "connman-connecting-1.png" COMP;
         image: "connman-connecting-2.png" COMP;
         image: "connman-connecting-3.png" COMP;
         image: "connman-connecting-4.png" COMP;
         image: "connman-ethernet.png" COMP;
         image: "connman-wifi-good.png" COMP;
         image: "connman-wifi-medium.png" COMP;
         image: "connman-wifi-bad.png" COMP;
      }
      //max: 128 128;
      min: 16 16;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               strength = getarg(2);
               if (strength >= 65)
                  run_program(PROGRAM:"strength,good"); 
               else if (strength >= 35)
                  run_program(PROGRAM:"strength,medium"); 
               else
                  run_program(PROGRAM:"strength,bad");
            }
         }
      }
      parts {
         part {
            name: "eventarea";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "availability";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 128 128 0;
               visible: 0;
            }
            description {
               state: "unavailable" 0.0;
               inherit: "default" 0.0;
               color: 255 128 128 255;
               visible: 1;
            }
         }
         programs {
            program {
               name: "e,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "availability";
               transition: LINEAR 0.2;
            }
            program {
               name: "e,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "unavailable" 0.0;
               target: "availability";
               transition: LINEAR 0.2;
            }
         }
         part {
            name: "state-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "inverted" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
         }
         part {
            name: "state-inverted-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "inverted" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         programs {
            program {
               name: "e,changed,state,online";
               signal: "e,changed,state,online";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,ready";
               signal: "e,changed,state,ready";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,failure";
               signal: "e,changed,state,failure";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,disconnect";
               signal: "e,changed,state,disconnect";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,idle";
               signal: "e,changed,state,idle";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,association";
               signal: "e,changed,state,association";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "e,changed,state,configuration";
               signal: "e,changed,state,configuration";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "state-connecting-stop";
               action: ACTION_STOP;
               target: "state-connecting";
               after: "state-connecting-stop2";
            }
            program {
               name: "state-connecting-stop2";
               action: STATE_SET "default" 0.0;
               target: "connecting";
            }
            program {
               name: "state-connecting";
               action: STATE_SET "connecting" 0.0;
               target: "connecting";
               transition: LINEAR 0.5333;
               after: "state-connecting";
            }
         }
         part {
            name: "disconnected-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "disconnected";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "disconnected-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-disconnect.png";
            }
            description {
               state: "offline" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-disconnect-offline.png";
            }
         }
         part {
            name: "connecting";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "state-inverted-clipper";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-disconnect.png";
            }
            description {
               state: "connecting" 0.0;
               inherit: "default" 0.0;
               image.tween: "connman-connecting-1.png";
               image.tween: "connman-connecting-2.png";
               image.tween: "connman-connecting-3.png";
               image.normal: "connman-connecting-4.png";
            }
         }
         part {
            name: "ethernet-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ethernet";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "ethernet-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-ethernet.png";
            }
         }
         part {
            name: "wifi-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "wifi";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "wifi-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-wifi-good.png";
            }
            description {
               state: "good" 0.0;
               inherit: "default" 0.0;
            }
            description {
               state: "medium" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-medium.png";
            }
            description {
               state: "bad" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-bad.png";
            }
         }
         // TODO: wimax, cellular, bluetooth
         programs {
            program {
               name: "strength,good";
               action: STATE_SET "good" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,medium";
               action: STATE_SET "medium" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,bad";
               action: STATE_SET "bad" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               signal: "e,changed,offline_mode,yes";
               source: "e";
               action: STATE_SET "offline" 0.0;
               target: "disconnected";
            }
            program {
               signal: "e,changed,offline_mode,no";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "disconnected";
            }
            program {
               name: "e,changed,technology,none";
               signal: "e,changed,technology,none";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "disconnected-visibility";
               after: "e,changed,technology,none,others";
            }
            program {
               name: "e,changed,technology,none,others";
               action: STATE_SET "default" 0.0;
               target: "ethernet-visibility";
               target: "wifi-visibility";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,ethernet";
               signal: "e,changed,technology,ethernet";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "ethernet-visibility";
               after: "e,changed,technology,ethernet,others";
            }
            program {
               name: "e,changed,technology,ethernet,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "wifi-visibility";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,wifi";
               signal: "e,changed,technology,wifi";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "wifi-visibility";
               after: "e,changed,technology,wifi,others";
            }
            program {
               name: "e,changed,technology,wifi,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "ethernet-visibility";
               // add wimax, cellular, bluetooth
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -20;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.5 1.0;
                  text: "";
                  min: 0 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         programs {
            program {
               name: "resize";
               signal: "resize";
               script {
                  new x, y, w, h;
                  get_geometry(PART:"eventarea", x, y, w, h);
                  if (w <= 32)
                     set_state(PART:"e.text.name", "hidden", 0.0); 
                  else
                     set_state(PART:"e.text.name", "default", 0.0);
               }
            }
            program {
               name: "e,changed,connected,no";
               signal: "e,changed,connected,no";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.name";
            }
            program {
               name: "e,changed,connected,yes";
               signal: "e,changed,connected,yes";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.name";
            }
         }
      }
   }
   group {
      /* This group is interesting in that it specifies programs
       * after the part that they effect, instead of at the
       * end of the group. It is a good demonstation of freestyle
       * formatting in edje.
       */
      name: "e/modules/connman/tip";
      images {
         image: "inset_sunk.png" COMP;
         image: "connman-disconnect.png" COMP;
         image: "connman-disconnect-offline.png" COMP;
         image: "connman-connecting-1.png" COMP;
         image: "connman-connecting-2.png" COMP;
         image: "connman-connecting-3.png" COMP;
         image: "connman-connecting-4.png" COMP;
         image: "connman-ethernet.png" COMP;
         image: "connman-wifi.png" COMP;
      }
      min: 350 148;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               new buf[32];
               new Float:val;
               strength = getarg(2);
               if (strength > 0) {
                  val = float(strength) / 100.0;
                  snprintf(buf, sizeof(buf), "%d%%", strength);
                  set_text(PART:"strength", buf);
                  set_drag(PART:"strength_gauge_knob", val, 0.0);
                  run_program(PROGRAM:"strength,show");
               } 
               else run_program(PROGRAM:"strength,hide");
               
               if (strength >= 65)
                  run_program(PROGRAM:"strength,good"); 
               else if (strength >= 35)
                  run_program(PROGRAM:"strength,medium"); 
               else
                  run_program(PROGRAM:"strength,bad");
            }
         }
      }
      parts {
         part {
            name: "state-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "inverted" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
         }
         part {
            name: "state-inverted-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "inverted" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         programs {
            program {
               name: "e,changed,state,online";
               signal: "e,changed,state,online";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,ready";
               signal: "e,changed,state,ready";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,failure";
               signal: "e,changed,state,failure";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,disconnect";
               signal: "e,changed,state,disconnect";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,idle";
               signal: "e,changed,state,idle";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting-stop";
            }
            program {
               name: "e,changed,state,association";
               signal: "e,changed,state,association";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "e,changed,state,configuration";
               signal: "e,changed,state,configuration";
               source: "e";
               action: STATE_SET "inverted" 0.0;
               target: "state-clipper";
               target: "state-inverted-clipper";
               after: "state-connecting";
            }
            program {
               name: "state-connecting-stop";
               action: ACTION_STOP;
               target: "state-connecting";
               after: "state-connecting-stop2";
            }
            program {
               name: "state-connecting-stop2";
               action: STATE_SET "default" 0.0;
               target: "connecting";
            }
            program {
               name: "state-connecting";
               action: STATE_SET "connecting" 0.0;
               target: "connecting";
               transition: LINEAR 0.5333;
               after: "state-connecting";
            }
         }
         part {
            name: "technology";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               min: 128 128;
               max: 128 128;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 10;
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: 137 137;
               }
            }
         }
         part {
            name: "disconnected-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "disconnected";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "disconnected-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-disconnect.png";
               rel1.to: "technology";
               rel2.to: "technology";
            }
            description {
               state: "offline" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-disconnect-offline.png";
            }
         }
         programs {
            program {
               signal: "load";
               after: "e,changed,technology,none";
            }
         }
         part {
            name: "connecting";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "state-inverted-clipper";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-disconnect.png";
               rel1.to: "technology";
               rel2.to: "technology";
            }
            description {
               state: "connecting" 0.0;
               inherit: "default" 0.0;
               image.tween: "connman-connecting-1.png";
               image.tween: "connman-connecting-2.png";
               image.tween: "connman-connecting-3.png";
               image.normal: "connman-connecting-4.png";
            }
         }
         part {
            name: "ethernet-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "ethernet";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "ethernet-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-ethernet.png";
               rel1.to: "technology";
               rel2.to: "technology";
            }
         }
         part {
            name: "wifi-visibility";
            type: RECT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
         part {
            name: "wifi";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "wifi-visibility";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "connman-wifi-good.png";
               rel1.to: "technology";
               rel2.to: "technology";
            }
            description {
               state: "good" 0.0;
               inherit: "default" 0.0;
            }
            description {
               state: "medium" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-medium.png";
            }
            description {
               state: "bad" 0.0;
               inherit: "default" 0.0;
               image.normal: "connman-wifi-bad.png";
            }
         }
         // TODO: wimax, cellular, bluetooth
         programs {
            program {
               name: "strength,good";
               action: STATE_SET "good" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,medium";
               action: STATE_SET "medium" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "strength,bad";
               action: STATE_SET "bad" 0.0;
               target: "wifi";
               // add wimax, cellular, bluetooth
            }
            program {
               signal: "e,changed,offline_mode,yes";
               source: "e";
               action: STATE_SET "offline" 0.0;
               target: "disconnected";
            }
            program {
               signal: "e,changed,offline_mode,no";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "disconnected";
            }
            program {
               name: "e,changed,technology,none";
               signal: "e,changed,technology,none";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "disconnected-visibility";
               after: "e,changed,technology,none,others";
            }
            program {
               name: "e,changed,technology,none,others";
               action: STATE_SET "default" 0.0;
               target: "ethernet-visibility";
               target: "wifi-visibility";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,ethernet";
               signal: "e,changed,technology,ethernet";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "ethernet-visibility";
               after: "e,changed,technology,ethernet,others";
            }
            program {
               name: "e,changed,technology,ethernet,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "wifi-visibility";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,technology,wifi";
               signal: "e,changed,technology,wifi";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "wifi-visibility";
               after: "e,changed,technology,wifi,others";
            }
            program {
               name: "e,changed,technology,wifi,others";
               action: STATE_SET "default" 0.0;
               target: "disconnected-visibility";
               target: "ethernet-visibility";
               // add wimax, cellular, bluetooth
            }
            program {
               name: "e,changed,connected,no";
               signal: "e,changed,connected,no";
               source: "e";
               action: STATE_SET "visible" 0.0;
               target: "disconnected-visibility";
               after: "e,changed,technology,none,others";
               after: "strength,hide";
               after: "e,changed,connected,no,others";
               after: "e,changed,ipv4_address,no";
            }
            program {
               name: "e,changed,connected,no,others";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.error";
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 240 240 240 255;
               color3: 0 0 0 64;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "technology";
                  relative: 1.0 0.0;
                  offset: 10 10;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -10 30;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
         }
         part {
            name: "e.text.state";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 16 16 16 255;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.name";
                  relative: 1.0 1.0;
                  offset: 10 10;
               }
               rel2 {
                  to_y: "e.text.name";
                  relative: 1.0 1.0;
                  offset: -10 25;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 12;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
         }
         part {
            name: "strength_gauge_bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 100 10;
               max: 99999 99999;
               rel1 {
                  to_x: "technology";
                  to_y: "strength";
                  relative: 1.0 0.0;
                  offset: 10 -2;
               }
               rel2 {
                  to_y: "strength";
                  relative: 1.0 1.0;
                  offset: -10 1;
               }
               image {
                  normal: "inset_sunk.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               min: 0 0;
               max: 0 0;
            }
         }
         part {
            name: "strength_gauge_confine";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 255 0 0;
               rel1 {
                  to: "strength_gauge_bg";
                  offset: 1 1;
               }
               rel2 {
                  to: "strength_gauge_bg";
                  offset: -2 -2;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "strength_gauge_knob";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "strength_gauge_confine";
            }
            description {
               state: "default" 0.0;
               min: 0 0;
               max: 0 0;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "strength_gauge_fill";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 55 55 55 100;
               rel1.to: "strength_gauge_confine";
               rel2 {
                  to_x: "strength_gauge_knob";
                  to_y: "strength_gauge_confine";
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "strength";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 16 16 16 255;
               align: 0.5 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "strength_gauge_confine";
                  to_y: "e.text.state";
                  relative: 0.5 1.0;
                  offset: -1 10;
               }
               rel2 {
                  to_x: "strength_gauge_confine";
                  to_y: "e.text.state";
                  relative: 0.5 1.0;
                  offset: 1 25;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.5 0.5;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.state";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  /* = rel1 */
                  to_x: "technology";
                  to_y: "e.text.state";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
            }
         }
         programs {
            program {
               name: "strength,show";
               action: STATE_SET "default" 0.0;
               target: "strength";
               target: "strength_gauge_bg";
               target: "strength_gauge_confine";
               target: "strength_gauge_knob";
               target: "strength_gauge_fill";
            }
            program {
               name: "strength,hide";
               action: STATE_SET "hidden" 0.0;
               target: "strength";
               target: "strength_gauge_bg";
               target: "strength_gauge_confine";
               target: "strength_gauge_knob";
               target: "strength_gauge_fill";
            }
         }
         part {
            name: "e.text.error";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 96 96 255;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "technology";
                  to_y: "strength";
                  relative: 1.0 1.0;
                  offset: 10 10;
               }
               rel2 {
                  to_y: "strength";
                  relative: 1.0 1.0;
                  offset: -10 25;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               max: 0 0;
               rel1 {
                  to_x: "technology";
                  to_y: "strength";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  /* = rel1 */
                  to_x: "technology";
                  to_y: "strength";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
            }
         }
         programs {
            program {
               name: "e,changed,error,yes";
               signal: "e,changed,error,yes";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.error";
            }
            program {
               name: "e,changed,error,no";
               signal: "e,changed,error,no";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.error";
            }
         }
         part {
            name: "e.text.ipv4_address";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 96 96 96 255;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.error";
                  relative: 1.0 1.0;
                  offset: 10 10;
               }
               rel2 {
                  to_y: "e.text.error";
                  relative: 1.0 1.0;
                  offset: -10 25;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
               visible: 0;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.error";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  /* = rel1 */
                  to_x: "technology";
                  to_y: "e.text.error";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
            }
         }
         programs {
            program {
               name: "e,changed,ipv4_address,yes";
               signal: "e,changed,ipv4_address,yes";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.ipv4_address";
            }
            program {
               name: "e,changed,ipv4_address,no";
               signal: "e,changed,ipv4_address,no";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.ipv4_address";
            }
         }
         part {
            name: "e.text.offline_mode";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 16 16 16 255;
               align: 0.0 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.ipv4_address";
                  relative: 1.0 1.0;
                  offset: 10 10;
               }
               rel2 {
                  to_y: "e.text.ipv4_address";
                  relative: 1.0 1.0;
                  offset: -10 25;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
               visible: 0;
               rel1 {
                  to_x: "technology";
                  to_y: "e.text.ipv4_address";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  /* = rel1 */
                  to_x: "technology";
                  to_y: "e.text.ipv4_address";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
            }
         }
         programs {
            program {
               name: "e,changed,offline_mode,yes";
               signal: "e,changed,offline_mode,yes";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.offline_mode";
            }
            program {
               name: "e,changed,offline_mode,no";
               signal: "e,changed,offline_mode,no";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.offline_mode";
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: BLUEZ ***/

   group {
      name: "e/modules/bluez/main";
      images {
         image: "bluetooth-powered.png" COMP;
         image: "bluetooth-inactive.png" COMP;
         image: "bluetooth-hidden.png" COMP;
      }
      //max: 128 128;
      min: 16 16;
      parts {
         part {
            name: "eventarea";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "state-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "state";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               image.normal: "bluetooth-inactive.png";
            }
            description {
               state: "powered" 0.0;
               inherit: "default" 0.0;
               image.normal: "bluetooth-powered.png";
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               image.normal: "bluetooth-hidden.png";
            }
         }
         programs {
            program {
               signal: "e,changed,service,none";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state";
            }
            program {
               signal: "e,changed,off";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state";
            }
            program {
               signal: "e,changed,powered";
               source: "e";
               action: STATE_SET "powered" 0.0;
               target: "state";
            }
            program {
               signal: "e,changed,hidden";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "state";
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -20;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.5 1.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         programs {
            program {
               name: "resize";
               signal: "resize";
               script {
                  new x, y, w, h, tx, ty, tw, th;
                  get_geometry(PART:"eventarea", x, y, w, h);
                  get_geometry(PART:"e.text.name", tx, ty, tw, th);
                  if ((w <= 32) || (tw >= w))
                     set_state(PART:"e.text.name", "hidden", 0.0); 
                  else
                     set_state(PART:"e.text.name", "default", 0.0);
               }
            }
            program {
               signal: "e,changed,name";
               source: "e";
               action: STATE_SET "default" 0.0;
               // show so calcs take effect!
               target: "e.text.name";
               after: "resize";
            }
         }
      }
   }
   group {
      name: "e/modules/bluez/tip";
      images {
         image: "bluetooth-powered.png" COMP;
         image: "bluetooth-inactive.png" COMP;
         image: "bluetooth-hidden.png" COMP;
      }
      min: 200 84;
      parts {
         part {
            name: "state-clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "state";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 10;
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: 73 73;
               }
               image.normal: "bluetooth-inactive.png";
            }
            description {
               state: "powered" 0.0;
               inherit: "default" 0.0;
               image.normal: "bluetooth-powered.png";
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               image.normal: "bluetooth-hidden.png";
            }
         }
         programs {
            program {
               signal: "e,changed,off";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "state";
            }
            program {
               signal: "e,changed,powered";
               source: "e";
               action: STATE_SET "powered" 0.0;
               target: "state";
            }
            program {
               signal: "e,changed,hidden";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "state";
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 240 240 240 255;
               color3: 0 0 0 64;
               align: 0.0 0.0;
               rel1 {
                  to_x: "state";
                  relative: 1.0 0.0;
                  offset: 10 20;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -10 40;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.0;
                  text: "Bluetooth Manager";
                  min: 1 0;
               }
            }
         }
         part {
            name: "e.text.status";
            type: TEXT;
            mouse_events: 0;
            clip_to: "state-clipper";
            description {
               state: "default" 0.0;
               color: 16 16 16 255;
               rel1 {
                  to_y: "e.text.name";
                  to_x: "state";
                  relative: 1.0 1.0;
                  offset: 10 10;
               }
               rel2 {
                  to_y: "e.text.name";
                  relative: 1.0 1.0;
                  offset: -10 25;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 0;
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: OFONO ***/

// GADGET and TIP all have the same parts and signals:
//
// PARTS:
//    e.text.name
//    e.text.status
//    e.text.op
//
// SIGNALS:
//    e,unavailable: ofonod is not running (nothing else works)
//    e,available: ofonod is running
//    e,name,available: there is info about device name
//    e,name,unavailable: there is no info about device name
//    e,netinfo,available: there is info about network
//    e,netinfo,unavailable: there is no info about network
//
// MESSAGES:
//    id=1, type=MSG_INT, description=strength (0-100)

   group {
      name: "e/modules/ofono/main";
      max: 128 128;
      min: 1 1;
      images {
         image: "gsm_0.png" COMP;
         image: "gsm_1.png" COMP;
         image: "gsm_2.png" COMP;
         image: "gsm_3.png" COMP;
         image: "gsm_4.png" COMP;
         image: "gsm_no.png" COMP;
      }
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               strength = getarg(2);
               if (strength >= 80)
                  run_program(PROGRAM:"strength,5");
               else if (strength >= 60)
                  run_program(PROGRAM:"strength,4");
               else if (strength >= 40)
                  run_program(PROGRAM:"strength,3");
               else if (strength >= 20)
                  run_program(PROGRAM:"strength,2");
               else if (strength >= 1)
                  run_program(PROGRAM:"strength,1");
               else
                  run_program(PROGRAM:"strength,no");
            }
         }
      }
      parts {
         part {
            name: "eventarea";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "eventarea.image";
            type: IMAGE;
            description {
               state: "default" 0.0;
               aspect: 1.6 1.7;
               aspect_preference: HORIZONTAL;
               image.normal: "gsm_no.png";
               rel1.to: "eventarea";
               rel2.to: "eventarea";
            }
            description {
               state: "strength,5" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_4.png";
            }
            description {
               state: "strength,4" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_3.png";
            }
            description {
               state: "strength,3" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_2.png";
            }
            description {
               state: "strength,2" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_1.png";
            }
            description {
               state: "strength,1" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_0.png";
            }
            description {
               state: "strength,no" 0.0;
               inherit: "default" 0.0;
               image.normal: "gsm_no.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 100;
            }
         }
         programs {
            program {
               name: "strength,5";
               action: STATE_SET "strength,5" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,4";
               action: STATE_SET "strength,4" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,3";
               action: STATE_SET "strength,3" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,2";
               action: STATE_SET "strength,2" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,1";
               action: STATE_SET "strength,1" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,0";
               action: STATE_SET "strength,0" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "strength,no";
               action: STATE_SET "strength,no" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "e,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "e,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "disabled" 0.0;
               target: "eventarea.image";
            }
            program {
               name: "netinfo,unavailable";
               signal: "e,netinfo,unavailable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "eventarea.image";
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -20;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.5 1.0;
                  text: "";
                  min: 0 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         programs {
            program {
               name: "resize";
               signal: "resize";
               script {
                  new x, y, w, h;
                  get_geometry(PART:"eventarea", x, y, w, h);
                  if (w <= 32)
                     set_state(PART:"e.text.name", "hidden", 0.0); 
                  else
                     set_state(PART:"e.text.name", "default", 0.0);
               }
            }
         }
      }
   }
   group {
      name: "e/modules/ofono/tip";
      min: 220 80;
      images {
         image: "inset_sunk.png" COMP;
      }
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT) && (id == 1)) {
               new strength;
               new Float:val;
               strength = getarg(2);
               val = float(strength) / 100.0;
               set_drag(PART:"strength_gauge_knob", val, 0.0);
            }
         }
      }
      parts {
         part {
            name: "e.text.error";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 150 150 150 255;
               fixed: 1 1;
               visible: 0;
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "shown" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               name: "error,e,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.error";
            }
            program {
               name: "error,e,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "shown" 0.0;
               target: "e.text.error";
            }
            program {
               name: "error,netinfo,available";
               signal: "e,netinfo,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.error";
            }
            program {
               name: "error,netinfo,unavailable";
               signal: "e,netinfo,unavailable";
               source: "e";
               action: STATE_SET "shown" 0.0;
               target: "e.text.error";
            }
         }
         part {
            name: "e.text.name";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 240 240 240 255;
               color3: 0 0 0 64;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 5;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "shown" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               name: "name,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.name";
            }
            program {
               name: "name,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "shown" 0.0;
               target: "e.text.name";
            }
         }
         part {
            name: "e.text.op";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               color: 240 240 240 255;
               color3: 0 0 0 64;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 5;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         programs {
            program {
               name: "op,available";
               signal: "e,available";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.op";
            }
            program {
               name: "op,unavailable";
               signal: "e,unavailable";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.op";
            }
            program {
               name: "op,netinfo,unavailable";
               signal: "e,netinfo,unavailable";
               source: "e";
               action: STATE_SET "hidden" 0.0;
               target: "e.text.op";
            }
         }
         part {
            name: "e.text.status";
            type: TEXT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               align: 0.0 0.0;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 30;
               }
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.0;
                  text: "";
                  min: 1 1;
               }
            }
            description {
               state: "shown" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               name: "status,available";
               signal: "e,netinfo,available";
               source: "e";
               action: STATE_SET "shown" 0.0;
               target: "e.text.status";
            }
            program {
               name: "status,unavailable";
               signal: "e,netinfo,unavailable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "e.text.status";
            }
         }
         part {
            name: "strength_gauge_bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 100 10;
               max: 99999 99999;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 10 55;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -10 -10;
               }
               image {
                  normal: "inset_sunk.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "shown" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         programs {
            program {
               name: "strength,available";
               signal: "e,netinfo,available";
               source: "e";
               action: STATE_SET "shown" 0.0;
               target: "strength_gauge_bg";
            }
            program {
               name: "strength,unavailable";
               signal: "e,netinfo,unavailable";
               source: "e";
               action: STATE_SET "default" 0.0;
               target: "strength_gauge_bg";
            }
         }
         part {
            name: "strength_gauge_confine";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1 {
                  to: "strength_gauge_bg";
                  offset: 1 1;
               }
               rel2 {
                  to: "strength_gauge_bg";
                  offset: -2 -2;
               }
            }
         }
         part {
            name: "strength_gauge_knob";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "strength_gauge_confine";
               confine: "strength_gauge_bg";
            }
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               min: 0 0;
               max: 0 0;
            }
         }
         part {
            name: "strength_gauge_fill";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 55 55 55 100;
               fixed: 1 1;
               rel1.to: "strength_gauge_confine";
               rel2 {
                  to_x: "strength_gauge_knob";
                  to_y: "strength_gauge_confine";
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: CONF_EDGEBINDINGS ***/

/* This group draws the edge and corners for the user to pick.
 * XXX: Needs some love from masters of the brush! */

   group {
      name: "e/modules/conf_edgebindings/selection";
      parts {
         part {
            name: "e.swallow.background";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 210 150;
               rel1.offset: 4 4;
               rel2 {
                  relative: 0.5 1;
                  offset: -2 -5;
               }
            }
         }
         part {
            name: "e.edge.top_left";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 0;
                  offset: 20 20;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part {
            name: "e.edge.top";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: 20 0;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 0;
                  offset: -20 15;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part {
            name: "e.edge.top_right";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: -20 0;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 0;
                  offset: 0 20;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part {
            name: "e.edge.right";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: -15 20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: 0 -20;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part {
            name: "e.edge.bottom_right";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: -20 -20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: 0 0;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part {
            name: "e.edge.bottom";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0 1;
                  offset: 20 -15;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: -20 0;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part {
            name: "e.edge.bottom_left";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0 1;
                  offset: 0 -20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 1;
                  offset: 20 0;
                  to: "e.swallow.background";
               }
               color: 255 0 0 150;
            }
         }
         part {
            name: "e.edge.left";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0 0;
                  offset: 0 20;
                  to: "e.swallow.background";
               }
               rel2 {
                  relative: 0 1;
                  offset: 15 -20;
                  to: "e.swallow.background";
               }
               color: 255 255 0 150;
            }
         }
         part {
            name: "e.swallow.check";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: 5 4;
                  to_x: "e.swallow.background";
                  to_y: "e.text.description";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 30;
                  to_y: "e.text.description";
               }
            }
         }
         part {
            name: "e.swallow.slider";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 1;
                  offset: 5 2;
                  to_x: "e.swallow.background";
                  to_y: "e.swallow.check";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 -5;
               }
            }
         }
         part {
            name: "e.text.description";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1 0;
                  offset: 5 4;
                  to_x: "e.swallow.background";
               }
               rel2 {
                  relative: 1 1;
                  offset: -5 -45;
               }
               text {
                  style: "dialog_style";
                  min: 1 1;
               }
            }
         }
         part {
            name: "e.text.selection";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 1 1;
                  offset: 5 5;
                  to: "e.edge.top_left";
               }
               rel2 {
                  relative: 0 0;
                  offset: -5 -5;
                  to: "e.edge.bottom_right";
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 12;
                  align: 0.5 0.5;
                  fit: 1 1;
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: START ***/

   /* This is for the "start" module - i.e. a "start" button. It simply
    * provides such a button/gadget in a shelf that pops up E's main
    * menu - a nice familiarity feature for those from the windows world.
    * Other than that it really does nothing, so this button can be quite
    * imaginative as it has few functional requirements */

   group {
      name: "e/modules/start/main";
      alias: "e/modules/everything/gadget";
      max: 128 128;
      images {
         image: "logo_white_128.png" COMP;
         image: "logo_black_128.png" COMP;
      }
      parts {
         part {
            name: "base";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "logo_white_128.png";
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "over";
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.relative: -0.5 -0.5;
               rel2.relative: 1.5 1.5;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "logo_black_128.png";
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "on";
            signal: "e,state,focused";
            source: "e";
            action: STATE_SET "active" 0.0;
            transition: LINEAR 0.2;
            target: "base";
            target: "over";
         }
         program {
            name: "off";
            signal: "e,state,unfocused";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "base";
            target: "over";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: PAGER ***/

   group {
      name: "e/modules/pager/popup";
      images {
         image: "base_bg.png" COMP;
         image: "bd_top_hilight.png" COMP;
         image: "bd_title_bg.png" COMP;
         image: "bd_title_over.png";
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "top_hilight";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 15;
               }
               image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
            }
         }
         part {
            name: "title_back";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 0;
               }
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0 1.0;
                  offset: -5 -4;
               }
               image {
                  normal: "bd_title_bg.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  align: 0.5 0.0;
                  min: 1 1;
               }
            }
         }
         part {
            name: "title_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "title_back";
               rel2.to: "title_back";
               image {
                  normal: "bd_title_over.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "e.text.label";
                  relative: 0.0 1.0;
                  offset: 12 11;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -13 -13;
               }
            }
         }
      }
   }
   group {
      name: "e/modules/pager/desk";
      images {
         image: "pager_base1.png" COMP;
         image: "pager_base2.png" COMP;
         image: "pager_hi1.png" COMP;
         image: "pager_hi2.png" COMP;
         image: "pager_base_pattern.png" COMP;
      }
      parts {
         part {
            name: "zoom";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3 -3;
               rel2.offset: 2 2;
            }
         }
         part {
            name: "base";
            description {
               state: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  to: "zoom";
                  offset: -1 -1;
               }
               rel2 {
                  to: "zoom";
                  offset: 0 0;
               }
               image.normal: "pager_base2.png";
               image.border: 5 5 5 5;
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "base2";
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "zoom";
                  offset: -11 -11;
               }
               rel2 {
                  to: "zoom";
                  offset: 10 10;
               }
               image.normal: "pager_base1.png";
               image.border: 5 5 5 5;
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: -1 -1;
               rel2.offset: 0 0;
            }
         }
         part {
            name: "pattern";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "over2";
               rel2.to: "over2";
               image.normal: "pager_base_pattern.png";
               fill.size.relative: 0.0 0.0;
               fill.size.offset: 12 12;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 128;
               rel1 {
                  to: "base";
                  offset: 4 4;
               }
               rel2 {
                  to: "base";
                  offset: -5 -5;
               }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1.to: "clip";
               rel2.to: "clip";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to: "clip";
               rel2.to: "clip";
               color: 0 0 0 0;
               color_class: "module_label";
               text {
                  font: "Sans:style=Bold";
                  size: 8;
                  align: 0.5 0.5;
                  text_class: "module_small";
               }
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 128;
            }
         }
         part {
            name: "over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               image.normal: "pager_hi2.png";
               rel1 {
                  to: "base";
                  offset: 3 3;
               }
               rel2 {
                  to: "base";
                  offset: -4 -4;
               }
               image.border: 2 2 2 2;
               image.middle: 0;
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image.normal: "pager_hi1.png";
               rel1 {
                  to: "base2";
                  offset: 3 3;
               }
               rel2 {
                  to: "base2";
                  offset: -4 -4;
               }
               image.border: 2 2 2 2;
               image.middle: 0;
               fill.smooth: 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.eventarea";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            name: "on";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "active" 0.0;
            transition: LINEAR 0.2;
            target: "base";
            target: "base2";
            target: "pattern";
            target: "clip";
            target: "over";
            target: "over2";
         }
         program {
            name: "off";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "base";
            target: "base2";
            target: "pattern";
            target: "clip";
            target: "over";
            target: "over2";
         }
         program {
            name: "drg";
            signal: "e,action,drag,in";
            source: "e";
            action: STATE_SET "active" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "zoom";
            after: "drg2";
         }
         program {
            name: "drg2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "zoom";
            after: "drg";
         }
         program {
            name: "ndrg";
            signal: "e,action,drag,out";
            source: "e";
            action: ACTION_STOP;
            target: "drg";
            target: "drg2";
            after: "ndrg2";
         }
         program {
            name: "ndrg2";
            action: STATE_SET "default" 0.0;
            target: "zoom";
         }
         program {
            name: "name_show";
            signal: "mouse,in";
            source: "e.eventarea";
            action: STATE_SET "active" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.text.label";
         }
         program {
            name: "name_hide";
            signal: "mouse,out";
            source: "e.eventarea";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "e.text.label";
         }
         // don't have any states/anim for urgent windows on a desktop
         //    program { name: "xx";
         //       signal: "e,state,urgent";
         //       source: "e";
         //    }
         // don't have any states/anim for urgent windows on a desktop
         //    program { name: "xx";
         //       signal: "e,state,not_urgent";
         //       source: "e";
         //    }
      }
   }
   group {
      name: "e/modules/pager/window";
      images {
         image: "pager_window.png" COMP;
         image: "pager_window_unsel.png" COMP;
         image: "exclam.png" COMP;
      }
      parts {
         part {
            name: "icon_area";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon_area2";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "uw0" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3 -2;
               rel2.offset: -4 -3;
            }
            description {
               state: "uw1" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 5 -2;
               rel2.offset: 4 -3;
            }
            description {
               state: "uw2" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 4;
               rel2.offset: -2 3;
            }
            description {
               state: "uw3" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -2 -1;
               rel2.offset: -3 -2;
            }
            description {
               state: "uw4" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -4 1;
               rel2.offset: -5 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "icon_area2";
                  offset: -3 -3;
               }
               rel2 {
                  to: "icon_area2";
                  offset: 2 2;
               }
               image.normal: "pager_window_unsel.png";
               image.border: 9 9 7 6;
            }
            description {
               state: "focused" 0.0;
               inherit: "default" 0.0;
               image.normal: "pager_window.png";
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 1.0 1.0;
               max: 24  24;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1 {
                  to: "base";
                  offset: 4 7;
               }
               rel2 {
                  to: "base";
                  offset: -5 -7;
               }
            }
         }
         part {
            name: "urgent";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "exclam.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "urgent2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "exclam.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description {
               state: "faded" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 -1.0;
               rel2.relative: 2.0 2.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            name: "focus_in";
            signal: "e,state,focused";
            source: "e";
            action: STATE_SET "focused" 0.0;
            target: "base";
         }
         program {
            name: "focus_out";
            signal: "e,state,unfocused";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "base";
         }
         program {
            name: "urgent";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "urgent";
            target: "urgent2";
            after: "urgent2";
         }
         program {
            name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: LINEAR 0.5;
            target: "urgent2";
            after: "urgent3";
         }
         program {
            name: "urgent3";
            action: STATE_SET "visible" 0.0;
            target: "urgent2";
            after: "urgent2";
         }
         program {
            name: "urgentw0";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw1";
         }
         program {
            name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw2";
         }
         program {
            name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
            target: "icon_area2";
            transition: DECELERATE 0.1;
            after: "urgentw3";
         }
         program {
            name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw4";
         }
         program {
            name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw0";
         }
         program {
            name: "not_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: ACTION_STOP;
            target: "urgentw0";
            target: "urgentw1";
            target: "urgentw2";
            target: "urgentw3";
            target: "urgentw4";
            target: "urgent";
            target: "urgent2";
            target: "urgent3";
            after: "not_urgent2";
         }
         program {
            name: "not_urgent2";
            action: STATE_SET "default" 0.0;
            target: "urgent";
            target: "urgent2";
            target: "icon_area2";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: BATTERY ***/

   group {
      name: "e/modules/battery/main";
      images {
         image: "batt_base.png" COMP;
         image: "batt_level.png" COMP;
         image: "batt_over.png" COMP;
         image: "batt_power.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_FLOAT) && (id == 1)) {
               new Float:val;
               new r;
               new g;
               new b;
               val = getfarg(2);
               if (val < 0.35) {
                  new Float:val1;
                  new Float:val2;
                  val1 = val - 0.10;
                  if (val1 < 0.0) val1 = 0.0;
                     val2 = 0.125 - val1;
                  if (val2 < 0.0) val2 = 0.0;
                     val2 = val2 / 0.125;
                     r = round(val2 * 255.0, ROUND);
                     val2 = val1;
                  if (val2 > 0.125) val2 = 0.125;
                     val2 = val2 / 0.125;
                     g = round(val2 * 255.0, ROUND);
                     b = 0;
               } 
               else {
                  r = 0;
                  g = 255;
                  b = 0;
               }
               custom_state(PART:"fill", "default", 0.0);
               set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
               set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
               set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
               set_state(PART:"fill", "custom", 0.0);
               
               custom_state(PART:"fill_clip", "default", 0.0);
               set_state_val(PART:"fill_clip", STATE_REL1, 0.0, 1.0 - val);
               set_state(PART:"fill_clip", "custom", 0.0);
            }
         }
      }
      parts {
         part { name: "fade_clip";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               color: 255 255 255 160;
            }
         }
         part { name: "info_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "fade_clip";
            description { state: "default" 0.0;
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "pulse_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "fade_clip";
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "faded" 1.0;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               color: 255 255 255 0;
            }
         }
         part { name: "fill_region";
            mouse_events: 0;
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: 0.0 (26/128);
               rel2.relative: 1.0 ((128-14)/128);
            }
         }
         part { name: "fill_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "pulse_clip";
            description { state: "default" 0.0;
               rel1.to: "fill_region";
               rel1.relative: 0.0 0.5;
               rel2.to: "fill_region";
               color: 255 255 255 255;
            }
         }
         part { name: "base";
            clip_to: "pulse_clip";
            description { state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "batt_base.png";
            }
         }
         part { name: "fill";
            mouse_events: 0;
            clip_to: "fill_clip";
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "batt_level.png";
            }
         }
         part { name: "over";
            mouse_events: 0;
            clip_to: "pulse_clip";
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "batt_over.png";
            }
         }
         part { name: "power";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "batt_power.png";
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "e.text.reading";
            mouse_events: 0;
            type: TEXT;
            scale: 1;
            clip_to: "info_clip";
            effect: OUTLINE;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1.relative: 0.5 0.0;
               rel2.relative: 1.0 0.3;
               color: 0 0 0 255;
               color2: 255 255 255 128;
               color_class: "module_label";
               text {
                  font: "Sans";
                  size: 8;
                  min: 1 1;
                  align: 1.0 0.5;
                  text_class: "module_small";
               }
            }
         }
         part { name: "e.text.time";
            mouse_events: 0;
            type: TEXT;
            scale: 1;
            clip_to: "info_clip";
            effect: OUTLINE;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               rel1.relative: 0.5 0.3;
               rel2.relative: 1.0 0.6;
               color: 0 0 0 255;
               color2: 255 255 255 128;
               color_class: "module_label";
               text {
                  font: "Sans";
                  size: 8;
                  min: 1 1;
                  align: 1.0 0.5;
                  text_class: "module_small";
               }
            }
         }
      }
      programs {
         program { name: "hover1";
            signal: "mouse,in";
            source: "base";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "info_clip";
         }
         program { name: "hover2";
            signal: "mouse,out";
            source: "base";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "info_clip";
         }
         program { name: "charge";
            signal: "e,state,charging";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "power";
         }
         program { name: "discharge";
            signal: "e,state,discharging";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "power";
         }
         program { name: "unknown";
            signal: "e,state,unknown";
            source: "e";
            action: STATE_SET "faded" 0.0;
            target: "fade_clip";
         }
         program { name: "pulse";
            signal: "e,action,pulse,start";
            source: "e";
            action: STATE_SET "faded" 0.0;
            transition: ACCELERATE 0.3;
            after: "pulse2";
            target: "pulse_clip";
         }
         program { name: "pulse2";
            action: STATE_SET "faded" 1.0;
            transition: ACCELERATE 0.1;
            target: "pulse_clip";
         }
         program { name: "pulsestop";
            signal: "e,action,pulse,stop";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "pulse_clip";
         }
      }
   }
   group {
      name: "e/modules/battery/popup";
      min: 240 64;
      parts {
         part {
            name: "battery";
            type: SWALLOW;
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               min: 1 1;
               max: 120 120;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: battery;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -1 -1;
               }
               color: 0 0 0 255;
               text {
                  text: "Your battery is low!";
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "module_large";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: battery;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               color: 0 0 0 255;
               text {
                  text: "AC power is recommended.";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "module_normal";
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: TEMPERATURE ***/

   group {
      name: "e/modules/temperature/main";
      images {
         image: "temp_base.png" COMP;
         image: "temp_mid.png" COMP;
         image: "temp_over.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_FLOAT) && (id == 1)) {
               new Float:val;
               val = getfarg(2);
               set_drag(PART:"temp_top", 0.0, val);
            }
         }
      }
      parts {
         part {
            name: "base";
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               aspect: 0.387 0.387;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               max: 48 124;
               rel1 {
                  relative: 0.0 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
               image {
                  normal: "temp_base.png";
               }
            }
         }
         part {
            name: "temp";
            clip_to: "temp_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
               }
               rel2 {
                  to: "base";
               }
               image {
                  normal: "temp_mid.png";
               }
            }
         }
         part {
            name: "overlay";
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
               }
               rel2 {
                  to: "base";
               }
               image {
                  normal: "temp_over.png";
               }
            }
         }
         part {
            name: "e.text.reading";
            type: TEXT;
            scale: 1;
            effect: OUTLINE_SOFT_SHADOW;
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  to_x: "temp";
               }
               rel2 {
                  relative: 1.0  0.0;
               }
               color: 255 255 255 0;
               color2: 0 0 0 0;
               color3: 0 0 0 0;
               color_class: "module_label";
               text {
                  font: "Sans:style=Bold";
                  size: 8;
                  min: 1 1;
                  align: 0.0 0.0;
                  text_class: "module_small";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               color2: 0 0 0 128;
               color3: 0 0 0 32;
            }
         }
         part {
            name: "fade_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "faded" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "temp_clip";
            type: RECT;
            clip_to: "fade_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "base";
                  to_y: "temp_top";
               }
               rel2 {
                  to: "base";
               }
            }
         }
         part {
            name: "temp_top";
            type: RECT;
            dragable {
               x: 0 0 0;
               y: -1 1 0;
               confine: "temp_limit";
            }
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "temp_limit";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0 0.081;
                  to: "base";
               }
               rel2 {
                  relative: 1.0 0.637;
                  to: "base";
               }
            }
         }
         part {
            name: "over";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "hover1";
            signal: "mouse,in";
            source: "over";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "e.text.reading";
         }
         program {
            name: "hover2";
            signal: "mouse,out";
            source: "over";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "e.text.reading";
         }
         program {
            name: "known";
            signal: "e,state,known";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "fade_clip";
         }
         program {
            name: "unknown";
            signal: "e,state,unknown";
            source: "e";
            action: STATE_SET "faded" 0.0;
            target: "fade_clip";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: BACKLIGHT ***/
   group { name: "e/modules/backlight/main";
      images {
         image: "bulb-0.png" COMP;
         image: "bulb-1.png" COMP;
         image: "bulb-2.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {      
       public message(Msg_Type:type, id, ...) {
          if ((type == MSG_FLOAT) && (id == 0)) {
             new Float:val;
             val = getfarg(2);
             set_tween_state(PART:"glow", val, "default", 0.0, "full", 0.0);
             set_tween_state(PART:"glow2", val, "default", 0.0, "full", 0.0);
          }
       }
      }
      parts {
         part {
            name: "glow";
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "bulb-1.png";
               color: 255 255 255 0;
            }
            description { state: "full" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "base";
            description { state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "bulb-0.png";
            }
         }
         part {
            name: "glow2";
            description { state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "bulb-2.png";
               color: 255 255 255 0;
            }
            description { state: "full" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////

/*** MOD: CLOCK ***/
   group { name: "e/modules/clock/digital";
      min: 56 16;
      max: 512 128;
      images {
         image: "flip_base.png" COMP;
         image: "flip_base_shad.png" COMP;
         image: "flip_shad.png" COMP;
         image: "flip_0t.png" COMP;
         image: "flip_0b.png" COMP;
         image: "flip_1t.png" COMP;
         image: "flip_1b.png" COMP;
         image: "flip_2t.png" COMP;
         image: "flip_2b.png" COMP;
         image: "flip_3t.png" COMP;
         image: "flip_3b.png" COMP;
         image: "flip_4t.png" COMP;
         image: "flip_4b.png" COMP;
         image: "flip_5t.png" COMP;
         image: "flip_5b.png" COMP;
         image: "flip_6t.png" COMP;
         image: "flip_6b.png" COMP;
         image: "flip_7t.png" COMP;
         image: "flip_7b.png" COMP;
         image: "flip_8t.png" COMP;
         image: "flip_8b.png" COMP;
         image: "flip_9t.png" COMP;
         image: "flip_9b.png" COMP;
         image: "flip_amt.png" COMP;
         image: "flip_amb.png" COMP;
         image: "flip_pmt.png" COMP;
         image: "flip_pmb.png" COMP;
         image: "flip_colon.png" COMP;
      }
      script {
#define DIGPRG(nom, ns) \
         public ns ## v0_cur, ns ## v0_pre, ns ## v0_lock, ns ## v0_next; \
         public ns ## animator2(val, Float:pos) { \
            new st1[11], st2[11], v; \
            v = get_int(ns ## v0_cur); \
            snprintf(st1, 10, "%ih", v); \
            snprintf(st2, 10, "%i", v); \
            set_tween_state(PART:nom"bot", pos, st1, 0.0, st2, 0.0); \
            set_tween_state(PART:nom"sh", pos, "half", 0.0, "full", 0.0); \
            if (pos >= 1.0) { \
               set_state(PART:nom"sh", "default", 0.0); \
               set_int(ns ## v0_lock, 0); \
            } \
         } \
         public ns ## animator1(val, Float:pos) { \
            new st1[11], st2[11], v; \
            v = get_int(ns ## v0_pre); \
            snprintf(st1, 10, "%i", v); \
            snprintf(st2, 10, "%ih", v); \
            set_tween_state(PART:nom"top", pos, st1, 0.0, st2, 0.0); \
            set_tween_state(PART:nom"sh", pos, "default", 0.0, "half", 0.0); \
            if (pos >= 1.0) anim(0.1, #ns"animator2", val); \
         } \
         public ns ## valset(value) { \
            new v, buf[11]; \
            v = get_int(ns ## v0_cur); \
            if (v == value) return; \
            if (get_int(ns ## v0_lock) == 1) { \
               set_state(PART:nom"sh", "default", 0.0); \
            } \
            set_int(ns ## v0_pre, v); \
            set_int(ns ## v0_cur, value); \
            set_int(ns ## v0_lock, 1); \
            snprintf(buf, 10, "%i", get_int(ns ## v0_pre)); \
            set_state(PART:nom"bot0", buf, 0.0); \
            snprintf(buf, 10, "%ih", get_int(ns ## v0_cur)); \
            set_state(PART:nom"bot", buf, 0.0); \
            snprintf(buf, 10, "%i", get_int(ns ## v0_cur)); \
            set_state(PART:nom"top0", buf, 0.0); \
            snprintf(buf, 10, "%i", get_int(ns ## v0_pre)); \
            set_state(PART:nom"top", buf, 0.0); \
            set_state(PART:nom"sh", "default", 0.0); \
            anim(0.1, #ns"animator1", 1); \
         }

         DIGPRG("s1", s1)
         DIGPRG("s2", s2)

         DIGPRG("m1", m1)
         DIGPRG("m2", m2)

         DIGPRG("h1", h1)
         DIGPRG("h2", h2)

         DIGPRG("ap", ap)
                           
         public do_seconds, do_24h, tick_timer;
         
         public clock_cb(val) {
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new v, dosec, do24h, tim;

            date(year, month, day, yearday, weekday, hour, minute, second);
            dosec = get_int(do_seconds);
            if (dosec) {
               v = round(second);
               tim = timer(1.0 - (second - v), "clock_cb", 1);
               // set seconds to v
               s1valset(v / 10);
               s2valset(v % 10);
            }
            else {
               tim = timer(60.0 - (second), "clock_cb", 1);
            }
            set_int(tick_timer, tim);

            // set minutes to minute
            m1valset(minute / 10);
            m2valset(minute % 10);

            // set hours to hour
            do24h = get_int(do_24h);
            if (do24h) {
               h1valset(hour / 10);
               h2valset(hour % 10);
            }
            else {
               new pm;
               
               // if 12 or later, its pm
               if (hour >= 12) {
                  pm = 1;
                  // if we are after 12 (1, 2, 3 etc.) then mod by 12
                  if (hour > 12) hour = hour % 12;
               }
               else {
                  pm = 0;
                  // make after midnight be 12:XX AM :)
                  if (hour == 0) hour = 12;
               }
               h1valset(hour / 10);
               h2valset(hour % 10);
               apvalset(pm);
            }
         }
         
         public eval_fields() {
            new do24h, dosec;
            
            dosec = get_int(do_seconds);
            do24h = get_int(do_24h);
            custom_state(PART:"hours1", "default", 0.0);
            custom_state(PART:"hours2", "default", 0.0);
            custom_state(PART:"mins1", "default", 0.0);
            custom_state(PART:"mins2", "default", 0.0);
            custom_state(PART:"secs1", "default", 0.0);
            custom_state(PART:"secs2", "default", 0.0);
            custom_state(PART:"ampm", "default", 0.0);
            if ((dosec) && (!do24h)) { // sec + ampm
               set_state_val(PART:"hours1", STATE_REL1, (0.0/16.0), 0.0);
               set_state_val(PART:"hours1", STATE_REL2, (2.0/16.0), 1.0);
               set_state_val(PART:"hours2", STATE_REL1, (2.0/16.0), 0.0);
               set_state_val(PART:"hours2", STATE_REL2, (4.0/16.0), 1.0);
               set_state_val(PART:"mins1", STATE_REL1, (5.0/16.0), 0.0);
               set_state_val(PART:"mins1", STATE_REL2, (7.0/16.0), 1.0);
               set_state_val(PART:"mins2", STATE_REL1, (7.0/16.0), 0.0);
               set_state_val(PART:"mins2", STATE_REL2, (9.0/16.0), 1.0);
               set_state_val(PART:"secs1", STATE_REL1, (10.0/16.0), 0.0);
               set_state_val(PART:"secs1", STATE_REL2, (12.0/16.0), 1.0);
               set_state_val(PART:"secs2", STATE_REL1, (12.0/16.0), 0.0);
               set_state_val(PART:"secs2", STATE_REL2, (14.0/16.0), 1.0);
               set_state_val(PART:"ampm", STATE_REL1, (14.0/16.0), 0.0);
               set_state_val(PART:"ampm", STATE_REL2, (16.0/16.0), 1.0);
               set_min_size(16 * 4, 16);
               set_max_size(16 * 32, 128);
            }
            else if ((dosec) && (do24h)) { // sec + -
               set_state_val(PART:"hours1", STATE_REL1, (0.0/14.0), 0.0);
               set_state_val(PART:"hours1", STATE_REL2, (2.0/14.0), 1.0);
               set_state_val(PART:"hours2", STATE_REL1, (2.0/14.0), 0.0);
               set_state_val(PART:"hours2", STATE_REL2, (4.0/14.0), 1.0);
               set_state_val(PART:"mins1", STATE_REL1, (5.0/14.0), 0.0);
               set_state_val(PART:"mins1", STATE_REL2, (7.0/14.0), 1.0);
               set_state_val(PART:"mins2", STATE_REL1, (7.0/14.0), 0.0);
               set_state_val(PART:"mins2", STATE_REL2, (9.0/14.0), 1.0);
               set_state_val(PART:"secs1", STATE_REL1, (10.0/14.0), 0.0);
               set_state_val(PART:"secs1", STATE_REL2, (12.0/14.0), 1.0);
               set_state_val(PART:"secs2", STATE_REL1, (12.0/14.0), 0.0);
               set_state_val(PART:"secs2", STATE_REL2, (14.0/14.0), 1.0);
               set_state_val(PART:"ampm", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"ampm", STATE_REL2, (0.0/1.0), 1.0);
               set_min_size(14 * 4, 16);
               set_max_size(14 * 32, 128);
            }
            else if ((!dosec) && (!do24h)) { // - + ampm
               set_state_val(PART:"hours1", STATE_REL1, (0.0/11.0), 0.0);
               set_state_val(PART:"hours1", STATE_REL2, (2.0/11.0), 1.0);
               set_state_val(PART:"hours2", STATE_REL1, (2.0/11.0), 0.0);
               set_state_val(PART:"hours2", STATE_REL2, (4.0/11.0), 1.0);
               set_state_val(PART:"mins1", STATE_REL1, (5.0/11.0), 0.0);
               set_state_val(PART:"mins1", STATE_REL2, (7.0/11.0), 1.0);
               set_state_val(PART:"mins2", STATE_REL1, (7.0/11.0), 0.0);
               set_state_val(PART:"mins2", STATE_REL2, (9.0/11.0), 1.0);
               set_state_val(PART:"secs1", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"secs1", STATE_REL2, (0.0/1.0), 1.0);
               set_state_val(PART:"secs2", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"secs2", STATE_REL2, (0.0/1.0), 1.0);
               set_state_val(PART:"ampm", STATE_REL1, (9.0/11.0), 0.0);
               set_state_val(PART:"ampm", STATE_REL2, (11.0/11.0), 1.0);
               set_min_size(11 * 4, 16);
               set_max_size(11 * 32, 128);
            }
            else if ((!dosec) && (do24h)) { // - + -
               set_state_val(PART:"hours1", STATE_REL1, (0.0/9.0), 0.0);
               set_state_val(PART:"hours1", STATE_REL2, (2.0/9.0), 1.0);
               set_state_val(PART:"hours2", STATE_REL1, (2.0/9.0), 0.0);
               set_state_val(PART:"hours2", STATE_REL2, (4.0/9.0), 1.0);
               set_state_val(PART:"mins1", STATE_REL1, (5.0/9.0), 0.0);
               set_state_val(PART:"mins1", STATE_REL2, (7.0/9.0), 1.0);
               set_state_val(PART:"mins2", STATE_REL1, (7.0/9.0), 0.0);
               set_state_val(PART:"mins2", STATE_REL2, (9.0/9.0), 1.0);
               set_state_val(PART:"secs1", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"secs1", STATE_REL2, (0.0/1.0), 1.0);
               set_state_val(PART:"secs2", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"secs2", STATE_REL2, (0.0/1.0), 1.0);
               set_state_val(PART:"ampm", STATE_REL1, (0.0/1.0), 0.0);
               set_state_val(PART:"ampm", STATE_REL2, (0.0/1.0), 1.0);
               set_min_size(9 * 4, 16);
               set_max_size(9 * 32, 128);
            }
            set_state(PART:"hours1", "custom", 0.0);
            set_state(PART:"hours2", "custom", 0.0);
            set_state(PART:"mins1", "custom", 0.0);
            set_state(PART:"mins2", "custom", 0.0);
            set_state(PART:"secs1", "custom", 0.0);
            set_state(PART:"secs2", "custom", 0.0);
            set_state(PART:"ampm", "custom", 0.0);
            emit("e,state,sizing,changed", "");
         }
      }
      parts {
         part { name: "hclip"; type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
            }
         }
         part { name: "mclip"; type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
            }
         }
         part { name: "sclip"; type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
            }
         }
         part { name: "ampmclip"; type: RECT;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
            }
         }
         part { name: "hours1"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (0/16) 0.0;
               rel2.relative: (2/16) 1.0;
            }
         }
         part { name: "hours2"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (2/16) 0.0;
               rel2.relative: (4/16) 1.0;
            }
         }
         part { name: "hcolon1";
            clip_to: "mclip";
            description { state: "default" 0.0;
               rel1.to: "hours2";
               rel1.relative: 1.0 0.0;
               rel1.offset: 1 1;
               rel2.to: "mins1";
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 0;
               image.normal: "flip_colon.png";
               min: 2 4;
               aspect: 0.25 0.25;
               aspect_preference: BOTH;
            }
         }
         part { name: "hcolon2";
            clip_to: "mclip";
            description { state: "default" 0.0;
               rel1.to: "hcolon1";
               rel1.offset: -1 -1;
               rel2.to: "hcolon1";
               rel2.offset: -2 -2;
               color: 0 0 0 255;
               image.normal: "flip_colon.png";
            }
         }
         part { name: "mins1"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (5/16) 0.0;
               rel2.relative: (7/16) 1.0;
            }
         }
         part { name: "mins2"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (7/16) 0.0;
               rel2.relative: (9/16) 1.0;
            }
         }
         part { name: "mcolon1";
            clip_to: "sclip";
            description { state: "default" 0.0;
               rel1.to: "mins2";
               rel1.relative: 1.0 0.0;
               rel1.offset: 1 1;
               rel2.to: "secs1";
               rel2.relative: 0.0 1.0;
               rel2.offset: 0 0;
               image.normal: "flip_colon.png";
               min: 2 4;
               aspect: 0.25 0.25;
               aspect_preference: BOTH;
            }
         }
         part { name: "mcolon2";
            clip_to: "sclip";
            description { state: "default" 0.0;
               rel1.to: "mcolon1";
               rel1.offset: -1 -1;
               rel2.to: "mcolon1";
               rel2.offset: -2 -2;
               color: 0 0 0 255;
               image.normal: "flip_colon.png";
            }
         }
         part { name: "secs1"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (10/16) 0.0;
               rel2.relative: (12/16) 1.0;
           }
         }
         part { name: "secs2"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (12/16) 0.0;
               rel2.relative: (14/16) 1.0;
           }
         }
         part { name: "ampm"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.relative: (14/16) 0.0;
               rel2.relative: (16/16) 1.0;
            }
         }
         
#define DIGIT(nom, relto, clipto) \
         part { name: nom"base"; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel1.to: relto; \
               rel1.offset: 1 1; \
               rel2.to: relto; \
               rel2.offset: -2 -2; \
               min: 2 4; \
               aspect: 0.5 0.5; \
               aspect_preference: BOTH; \
            } \
         } \
         part { name: nom"shad"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.offset: -4 -4; \
               rel1.to: nom"base"; \
               rel2.offset: 3 3; \
               rel2.to: nom"base"; \
               image { \
                  normal: "flip_base_shad.png"; \
                  border: 8 8 8 8; \
               } \
            } \
         } \
         part { name: nom"b"; type: RECT; \
            description { state: "default" 0.0; \
               visible: 0; \
               rel1.to: nom"base"; \
               rel1.relative: 0.0 0.5; \
               rel2.to: nom"base"; \
            } \
         } \
         part { name: nom"t"; type: RECT; \
            description { state: "default" 0.0; \
               visible: 0; \
               rel1.to: nom"base"; \
               rel2.to: nom"base"; \
               rel2.relative: 1.0 0.5; \
            } \
         } \
         part { name: nom"bot0"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               image.normal: "flip_0b.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_0b.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_1b.png"; \
            } \
            description { state: "2" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_2b.png"; \
            } \
            description { state: "3" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_3b.png"; \
            } \
            description { state: "4" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_4b.png"; \
            } \
            description { state: "5" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_5b.png"; \
            } \
            description { state: "6" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_6b.png"; \
            } \
            description { state: "7" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_7b.png"; \
            } \
            description { state: "8" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_8b.png"; \
            } \
            description { state: "9" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_9b.png"; \
            } \
         } \
         part { name: nom"sh"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_shad.png"; \
            } \
            description { state: "half" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 0.5; \
            } \
            description { state: "full" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
            } \
         } \
         part { name: nom"bot"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               image.normal: "flip_0b.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_0b.png"; \
            } \
            description { state: "0h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_0b.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_1b.png"; \
            } \
            description { state: "1h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_1b.png"; \
            } \
            description { state: "2" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_2b.png"; \
            } \
            description { state: "2h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_2b.png"; \
            } \
            description { state: "3" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_3b.png"; \
            } \
            description { state: "3h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_3b.png"; \
            } \
            description { state: "4" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_4b.png"; \
            } \
            description { state: "4h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_4b.png"; \
            } \
            description { state: "5" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_5b.png"; \
            } \
            description { state: "5h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_5b.png"; \
            } \
            description { state: "6" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_6b.png"; \
            } \
            description { state: "6h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_6b.png"; \
            } \
            description { state: "7" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_7b.png"; \
            } \
            description { state: "7h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_7b.png"; \
            } \
            description { state: "8" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_8b.png"; \
            } \
            description { state: "8h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_8b.png"; \
            } \
            description { state: "9" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_9b.png"; \
            } \
            description { state: "9h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_9b.png"; \
            } \
         } \
         part { name: nom"top0"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"t"; \
               rel2.to: nom"t"; \
               image.normal: "flip_0t.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_0t.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_1t.png"; \
            } \
            description { state: "2" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_2t.png"; \
            } \
            description { state: "3" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_3t.png"; \
            } \
            description { state: "4" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_4t.png"; \
            } \
            description { state: "5" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_5t.png"; \
            } \
            description { state: "6" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_6t.png"; \
            } \
            description { state: "7" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_7t.png"; \
            } \
            description { state: "8" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_8t.png"; \
            } \
            description { state: "9" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_9t.png"; \
            } \
         } \
         part { name: nom"top"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"t"; \
               rel2.to: nom"t"; \
               image.normal: "flip_0t.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_0t.png"; \
            } \
            description { state: "0h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_0t.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_1t.png"; \
            } \
            description { state: "1h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_1t.png"; \
            } \
            description { state: "2" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_2t.png"; \
            } \
            description { state: "2h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_2t.png"; \
            } \
            description { state: "3" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_3t.png"; \
            } \
            description { state: "3h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_3t.png"; \
            } \
            description { state: "4" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_4t.png"; \
            } \
            description { state: "4h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_4t.png"; \
            } \
            description { state: "5" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_5t.png"; \
            } \
            description { state: "5h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_5t.png"; \
            } \
            description { state: "6" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_6t.png"; \
            } \
            description { state: "6h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_6t.png"; \
            } \
            description { state: "7" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_7t.png"; \
            } \
            description { state: "7h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_7t.png"; \
            } \
            description { state: "8" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_8t.png"; \
            } \
            description { state: "8h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_8t.png"; \
            } \
            description { state: "9" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_9t.png"; \
            } \
            description { state: "9h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_9t.png"; \
            } \
         }
         
         DIGIT("h1", "hours1", "hclip");
         DIGIT("h2", "hours2", "hclip");

         DIGIT("m1", "mins1", "mclip");
         DIGIT("m2", "mins2", "mclip");

         DIGIT("s1", "secs1", "sclip");
         DIGIT("s2", "secs2", "sclip");

#define DIGAP(nom, relto, clipto) \
         part { name: nom"base"; \
            scale: 1; \
            description { state: "default" 0.0; \
               rel1.to: relto; \
               rel1.offset: 1 1; \
               rel2.to: relto; \
               rel2.offset: -2 -2; \
               min: 2 4; \
               aspect: 0.5 0.5; \
               aspect_preference: BOTH; \
            } \
         } \
         part { name: nom"shad"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.offset: -4 -4; \
               rel1.to: nom"base"; \
               rel2.offset: 3 3; \
               rel2.to: nom"base"; \
               image { \
                  normal: "flip_base_shad.png"; \
                  border: 8 8 8 8; \
               } \
            } \
         } \
         part { name: nom"b"; type: RECT; \
            description { state: "default" 0.0; \
               visible: 0; \
               rel1.to: nom"base"; \
               rel1.relative: 0.0 0.5; \
               rel2.to: nom"base"; \
            } \
         } \
         part { name: nom"t"; type: RECT; \
            description { state: "default" 0.0; \
               visible: 0; \
               rel1.to: nom"base"; \
               rel2.to: nom"base"; \
               rel2.relative: 1.0 0.5; \
            } \
         } \
         part { name: nom"bot0"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               image.normal: "flip_amb.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_amb.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_pmb.png"; \
            } \
         } \
         part { name: nom"sh"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_shad.png"; \
            } \
            description { state: "half" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 0.5; \
            } \
            description { state: "full" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
            } \
         } \
         part { name: nom"bot"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"b"; \
               rel2.to: nom"b"; \
               image.normal: "flip_amb.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_amb.png"; \
            } \
            description { state: "0h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_amb.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               rel2.relative: 1.0 1.0; \
               image.normal: "flip_pmb.png"; \
            } \
            description { state: "1h" 0.0; \
               inherit: "default" 0.0; \
               visible: 0; \
               rel2.relative: 1.0 0.0; \
               image.normal: "flip_pmb.png"; \
            } \
         } \
         part { name: nom"top0"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"t"; \
               rel2.to: nom"t"; \
               image.normal: "flip_amt.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_amt.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               image.normal: "flip_pmt.png"; \
            } \
         } \
         part { name: nom"top"; \
            clip_to: clipto; \
            description { state: "default" 0.0; \
               rel1.to: nom"t"; \
               rel2.to: nom"t"; \
               image.normal: "flip_amt.png"; \
            } \
            description { state: "0" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_amt.png"; \
            } \
            description { state: "0h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_amt.png"; \
            } \
            description { state: "1" 0.0; \
               inherit: "default" 0.0; \
               rel1.relative: 0.0 0.0; \
               image.normal: "flip_pmt.png"; \
            } \
            description { state: "1h" 0.0; \
               inherit: "default" 0.0; \
               color: 128 128 128 255; \
               visible: 0; \
               rel1.relative: 0.0 1.0; \
               image.normal: "flip_pmt.png"; \
            } \
         }

         DIGAP("ap", "ampm", "ampmclip");
         
///////////////////////////////////////////////////////////////////         
         
         part { name: "event"; type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "init";
            signal: "load";
            source: "";
            script {
               clock_cb(0);
            }
         }
         program { name: "secon";
            signal: "e,state,seconds,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "secs1";
            after: "sec2";
         }
         program { name: "sec2";
            script {
               new tim;
               
               set_int(do_seconds, 1);
               set_state(PART:"sclip", "default", 0.0);
               eval_fields();
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
         program { name: "secoff";
            signal: "e,state,seconds,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "secs1";
            after: "sec3";
         }
         program { name: "sec3";
            script {
               new tim;
               
               set_int(do_seconds, 0);
               set_state(PART:"sclip", "hidden", 0.0);
               eval_fields();
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
         program { name: "24h";
            signal: "e,state,24h,on";
            source: "e";
            script {
               new tim;
               
               set_int(do_24h, 1);
               set_state(PART:"ampmclip", "hidden", 0.0);
               eval_fields();
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
         program { name: "12h";
            signal: "e,state,24h,off";
            source: "e";
            script {
               new tim;
               
               set_int(do_24h, 0);
               set_state(PART:"ampmclip", "default", 0.0);
               eval_fields();
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
      }
   }
   group { name: "e/modules/clock/main";
      images {
         image: "clock_base.png" COMP;
         image: "tacho_fg.png" COMP;
         image: "ch-h1.png" COMP;
         image: "ch-h2.png" COMP;
         image: "ch-m1.png" COMP;
         image: "ch-m2.png" COMP;
         image: "ch-s1.png" COMP;
         image: "ch-s2.png" COMP;
         image: "ch-h1-2.png" COMP;
         image: "ch-h2-2.png" COMP;
         image: "ch-m1-2.png" COMP;
         image: "ch-m2-2.png" COMP;
         image: "ch-s1-2.png" COMP;
         image: "ch-s2-2.png" COMP;
         image: "ch-h1-3.png" COMP;
         image: "ch-h2-3.png" COMP;
         image: "ch-m1-3.png" COMP;
         image: "ch-m2-3.png" COMP;
         image: "ch-s1-3.png" COMP;
         image: "ch-s2-3.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
         public do_seconds, tick_timer;
         
         public clock_cb(val) {
            new year, month, day, yearday, weekday, hour, minute;
            new Float:second;
            new v, dosec, tim;
            new x, y, w, h;

            date(year, month, day, yearday, weekday, hour, minute, second);
            get_geometry(PART:"hour", x, y, w, h);
            dosec = get_int(do_seconds);
            if (dosec) {
               v = round(second);
               tim = timer(1.0 - (second - v), "clock_cb", 1);
               
               custom_state(PART:"seconds", "default", 0.0);
               set_state_val(PART:"seconds", STATE_MAP_ROT_Z, (v * 360.0) / 60.0);
               if (h < 22) 
                  set_state_val(PART:"seconds", STATE_IMAGE, IMAGE:"ch-s1-3.png");
               else if (h < 44) 
                  set_state_val(PART:"seconds", STATE_IMAGE, IMAGE:"ch-s1-2.png");
               else 
                  set_state_val(PART:"seconds", STATE_IMAGE, IMAGE:"ch-s1.png");
               set_state(PART:"seconds", "custom", 0.0);
               
               custom_state(PART:"seconds-sh", "default", 0.0);
               set_state_val(PART:"seconds-sh", STATE_MAP_ROT_Z, (v * 360.0) / 60.0);
               if (h < 22) 
                  set_state_val(PART:"seconds-sh", STATE_IMAGE, IMAGE:"ch-s2-3.png");
               else if (h < 44) 
                  set_state_val(PART:"seconds-sh", STATE_IMAGE, IMAGE:"ch-s2-2.png");
               else 
                  set_state_val(PART:"seconds-sh", STATE_IMAGE, IMAGE:"ch-s2.png");
               set_state(PART:"seconds-sh", "custom", 0.0);
            }
            else {
               tim = timer(60.0 - (second), "clock_cb", 1);
            }
            set_int(tick_timer, tim);

            custom_state(PART:"minutes", "default", 0.0);
            set_state_val(PART:"minutes", STATE_MAP_ROT_Z, (float(minute) * 360.0) / 60.0);
            if (h < 22) 
               set_state_val(PART:"minutes", STATE_IMAGE, IMAGE:"ch-m1-3.png");
            else if (h < 44) 
               set_state_val(PART:"minutes", STATE_IMAGE, IMAGE:"ch-m1-2.png");
            else 
               set_state_val(PART:"minutes", STATE_IMAGE, IMAGE:"ch-m1.png");
            set_state(PART:"minutes", "custom", 0.0);

            custom_state(PART:"minutes-sh", "default", 0.0);
            set_state_val(PART:"minutes-sh", STATE_MAP_ROT_Z, (float(minute) * 360.0) / 60.0);
            if (h < 22) 
               set_state_val(PART:"minutes-sh", STATE_IMAGE, IMAGE:"ch-m2-3.png");
            else if (h < 44) 
               set_state_val(PART:"minutes-sh", STATE_IMAGE, IMAGE:"ch-m2-2.png");
            else 
               set_state_val(PART:"minutes-sh", STATE_IMAGE, IMAGE:"ch-m2.png");
            set_state(PART:"minutes-sh", "custom", 0.0);

            custom_state(PART:"hour", "default", 0.0);
            set_state_val(PART:"hour", STATE_MAP_ROT_Z, ((float(hour) + (float(minute) / 60.0)) * 360.0) / 12.0);
            if (h < 22) 
               set_state_val(PART:"hour", STATE_IMAGE, IMAGE:"ch-h1-3.png");
            else if (h < 44) 
               set_state_val(PART:"hour", STATE_IMAGE, IMAGE:"ch-h1-2.png");
            else 
               set_state_val(PART:"hour", STATE_IMAGE, IMAGE:"ch-h1.png");
            set_state(PART:"hour", "custom", 0.0);
            
            custom_state(PART:"hour-sh", "default", 0.0);
            set_state_val(PART:"hour-sh", STATE_MAP_ROT_Z, ((float(hour) + (float(minute) / 60.0)) * 360.0) / 12.0);
            if (h < 22) 
               set_state_val(PART:"hour-sh", STATE_IMAGE, IMAGE:"ch-h2-3.png");
            else if (h < 44) 
               set_state_val(PART:"hour-sh", STATE_IMAGE, IMAGE:"ch-h2-2.png");
            else 
               set_state_val(PART:"hour-sh", STATE_IMAGE, IMAGE:"ch-h2.png");
            set_state(PART:"hour-sh", "custom", 0.0);
         }
      }
      parts {
         part {
            name: "base";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "clock_base.png";
            }
         }
         part {
            name: "base2";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "base";
                  relative: (2.0/128.0) (2.0/128.0);
               }
               rel2 {
                  to: "base";
                  relative: (1.0+(2.0/128.0)) (1.0+(2.0/128.0));
               }
            }
         }
         part {
            name: "seconds-sh";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "base2";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base2";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-s2.png";
               map {
                  on: 1;
                  rotation {
                     center: "base2";
                  }
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "seconds";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-s1.png";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "minutes-sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base2";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base2";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-m2.png";
               map {
                  on: 1;
                  rotation {
                     center: "base2";
                  }
               }
            }
         }
         part {
            name: "minutes";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-m1.png";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
         }
         part {
            name: "hour-sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base2";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base2";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-h2.png";
               map {
                  on: 1;
                  rotation {
                     center: "base2";
                  }
               }
            }
         }
         part {
            name: "hour";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.3125 0.0;
               }
               rel2 {
                  to: "base";
                  relative: 0.6875 0.6875;
               }
               image.normal: "ch-h1.png";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
         }
         part {
            name: "over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "tacho_fg.png";
            }
         }
      }
      programs {
         program { name: "init";
            signal: "load";
            source: "";
            script {
               clock_cb(0);
            }
         }
         program { name: "secon";
            signal: "e,state,seconds,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "seconds";
            target: "seconds-sh";
            after: "sec2";
         }
         program { name: "sec2";
            script {
               new tim;
               
               set_int(do_seconds, 1);
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
         program { name: "secoff";
            signal: "e,state,seconds,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "seconds";
            target: "seconds-sh";
            after: "sec3";
         }
         program { name: "sec3";
            script {
               new tim;
               
               set_int(do_seconds, 0);
               tim = get_int(tick_timer);
               if (tim) {
                  cancel_timer(tim);
                  set_int(tick_timer, 0);
               }
               clock_cb(0);
            }
         }
      }
   }

   group { name: "e/modules/clock/calendar/dayname";
      parts {
         part { name: "e.text.label";
            type: TEXT;
            effect: SHADOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               color: 0 0 0 64;
               color3: 255 255 255 255;
               rel1.offset: 3 3;
               rel2.offset: -3 -3;
               text {
                  text: "XXX";
                  font: "Sans";
                  align: 0.5 0.5;
                  size: 8;
                  min: 1 1;
                  text_class: "module_small";
               }
            }
         }
      }
   }
   group { name: "e/modules/clock/calendar/day";
      images {
         image: "inset_sunk.png" COMP;
      }
      parts {
         part { name: "hidden"; type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 64;
            }
         }
         part { name: "weekend"; type: RECT;
            mouse_events: 0;
            clip_to: "hidden";
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
            description { state: "weekend" 0.0;
               inherit: "default" 0.0;
               color: 255 0 0 64;
            }
         }
         part { name: "day"; type: RECT;
            mouse_events: 0;
            clip_to: "hidden";
            description { state: "default" 0.0;
               color: 255 255 255 0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
            description { state: "today" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 200;
            }
         }
         part { name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "hidden";
            description { state: "default" 0.0;
               align: 0.5 0.5;
               color: 0 0 0 255;
              color3: 0 0 0 32;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
               text {
                  text: "88";
                  font: "Sans";
                  align: 0.5 0.5;
                  size: 8;
                  min: 1 1;
                  text_class: "module_small";
               }
            }
            description { state: "today" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "inset";
            mouse_events: 0;
            clip_to: "hidden";
            description { state: "default" 0.0;
               image.normal: "inset_sunk.png";
               image.middle: 0;
               image.border: 7 7 7 7;
               fill.smooth: 0;
               color: 255 255 255 128;
            }
         }
      }
      programs {
         program { name: "weekend";
            signal: "e,state,weekend";
            source: "e";
            action: STATE_SET "weekend" 0.0;
            target: "weekend";
         }
         program { name: "weekday";
            signal: "e,state,weekday";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "weekend";
         }
         program { name: "hidden";
            signal: "e,state,hidden";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "hidden";
         }
         program { name: "visible";
            signal: "e,state,visible";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "hidden";
         }
         program { name: "today";
            signal: "e,state,today";
            source: "e";
            action: STATE_SET "today" 0.0;
            target: "day";
            target: "e.text.label";
         }
         program { name: "someday";
            signal: "e,state,someday";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "day";
            target: "e.text.label";
         }
      }
   }
   group { name: "e/modules/clock/calendar";
      images {
         image: "arrow_left.png" COMP;
         image: "arrow_right.png" COMP;
         image: "inset_sunk.png" COMP;
         image: "ilist_1.png" COMP;
         image: "ilist_2.png" COMP;
         image: "ilist_item_shadow.png" COMP;
      }
      parts {
         part { name: "e.text.month";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 1;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1 {
                  to_x: "prev";
                  relative: 1.0 0.0;
               }
               rel2 {
                  relative: 1.0 0.0;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  align: 0.0 0.5;
                  size: 10;
                  min: 0 1;
                  text_class: "module_normal";
               }
            }
         }
         part { name: "e.text.year";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 1.0 0.0;
               rel1 {
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "next";
                  relative: 0.0 0.0;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  align: 1.0 0.5;
                  size: 10;
                  min: 0 1;
                  text_class: "module_normal";
               }
            }
         }
         part { name: "previm";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 9 9;
               max: 9 9;
               rel1.to: "prev";
               rel2.to: "prev";
               image.normal: "arrow_left.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 2;
               rel2.offset: -1 1;
            }
         }
         part { name: "prev";
            type: RECT;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               color: 0 0 0 0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to_y: "e.text.month";
               rel1.relative: 0.0 0.0;
               rel2.to_y: "e.text.month";
               rel2.relative: 0.0 1.0;
            }
            program { name: "prev_down";
               signal: "mouse,down,1";
               source: "prev";
               action: STATE_SET "pressed" 0.0;
               target: "previm";
            }
            program { name: "prev_up";
               signal: "mouse,up,1";
               source: "prev";
               action: STATE_SET "default" 0.0;
               target: "previm";
            }
            program { name: "prev_clicked";
               signal: "mouse,clicked,1";
               source: "prev";
               action: SIGNAL_EMIT "e,action,prev" "";
            }
         }
         part { name: "nextim";
            mouse_events: 0;
            description { state: "default" 0.0;
               min: 9 9;
               max: 9 9;
               rel1.to: "next";
               rel2.to: "next";
               image.normal: "arrow_right.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 2;
               rel2.offset: -1 1;
            }
         }
         part { name: "next";
            type: RECT;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               color: 0 0 0 0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to_y: "e.text.month";
               rel1.relative: 1.0 0.0;
               rel2.to_y: "e.text.month";
               rel2.relative: 1.0 1.0;
            }
            program { name: "next_down";
               signal: "mouse,down,1";
               source: "next";
               action: STATE_SET "pressed" 0.0;
               target: "nextim";
            }
            program { name: "next_up";
               signal: "mouse,up,1";
               source: "next";
               action: STATE_SET "default" 0.0;
               target: "nextim";
            }
            program { name: "next_clicked";
               signal: "mouse,clicked,1";
               source: "next";
               action: SIGNAL_EMIT "e,action,next" "";
            }
         }
         part { name: "days_bg1";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "e.table.days";
               rel1.offset: -1 -1;
               rel2.to: "e.table.days";
               rel2.offset: 0 0;
               image.normal: "ilist_2.png";
               image.border: 2 2 2 2;
            }
         }
         part { name: "daynames_bg0";
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "daynames_bg1";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "daynames_bg1";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image.normal: "ilist_item_shadow.png";
               fill.smooth: 0;
            }
         }
         part { name: "daynames_bg1";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "e.table.daynames";
               rel1.offset: -1 -1;
               rel2.to: "e.table.daynames";
               rel2.offset: 0 0;
               image.normal: "ilist_1.png";
               image.border: 2 2 2 2;
            }
         }
         part { name: "e.table.daynames"; type: TABLE;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.5 0.0;
               rel1.to_y: "e.text.month";
               rel1.relative: 0.0 1.0;
               rel1.offset: 2 2;
               rel2.to_y: "e.text.month";
               rel2.relative: 1.0 1.0;
               rel2.offset: -3 2;
               step: 7 1;
               table {
                  homogeneous: TABLE;
                  padding: 1 1;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
            table { items {
#define DAYNAME(x) \
   item { \
      position: x 0; \
      span: 1 1; \
      source: "e/modules/clock/calendar/dayname"; \
      weight: 1.0 1.0; \
      align: -1.0 -1.0; \
   }
               DAYNAME(0);
               DAYNAME(1);
               DAYNAME(2);
               DAYNAME(3);
               DAYNAME(4);
               DAYNAME(5);
               DAYNAME(6);
            } }
         }
         part { name: "e.table.days"; type: TABLE;
            description { state: "default" 0.0;
               rel1.to_y: "e.table.daynames";
               rel1.relative: 0.0 1.0;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
               step: 7 5;
               table {
                  homogeneous: TABLE;
                  padding: 1 1;
                  align: 0.5 0.5;
                  min: 1 1;
               }
            }
            table { items {
#define DAY(x, y) \
   item { \
      position: x y; \
      span: 1 1; \
      source: "e/modules/clock/calendar/day"; \
      weight: 1.0 1.0; \
      align: -1.0 -1.0; \
   }
               DAY(0, 0);
               DAY(1, 0);
               DAY(2, 0);
               DAY(3, 0);
               DAY(4, 0);
               DAY(5, 0);
               DAY(6, 0);

               DAY(0, 1);
               DAY(1, 1);
               DAY(2, 1);
               DAY(3, 1);
               DAY(4, 1);
               DAY(5, 1);
               DAY(6, 1);

               DAY(0, 2);
               DAY(1, 2);
               DAY(2, 2);
               DAY(3, 2);
               DAY(4, 2);
               DAY(5, 2);
               DAY(6, 2);

               DAY(0, 3);
               DAY(1, 3);
               DAY(2, 3);
               DAY(3, 3);
               DAY(4, 3);
               DAY(5, 3);
               DAY(6, 3);
               
               DAY(0, 4);
               DAY(1, 4);
               DAY(2, 4);
               DAY(3, 4);
               DAY(4, 4);
               DAY(5, 4);
               DAY(6, 4);

               DAY(0, 5);
               DAY(1, 5);
               DAY(2, 5);
               DAY(3, 5);
               DAY(4, 5);
               DAY(5, 5);
               DAY(6, 5);
            } }
         }
         part { name: "inset";
            mouse_events: 1;
            description { state: "default" 0.0;
               image.normal: "inset_sunk.png";
               image.middle: 0;
               image.border: 7 7 7 7;
               fill.smooth: 0;
               rel1.to: "e.table.daynames";
               rel1.offset: -2 -2;
               rel2.to: "e.table.days";
               rel2.offset: 2 2;
            }
         }
      }
      programs {
         program {
            name: "mw_next";
            source: "*";
            signal: "mouse,wheel,0,-1";
            action: SIGNAL_EMIT "e,action,prev" "";
         }
         program {
            name: "mw_right";
            source: "*";
            signal: "mouse,wheel,0,1";
            action: SIGNAL_EMIT "e,action,next" "";
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
/*** MOD: CPUFREQ ***/

#if 0
   group {
      name: "e/modules/cpufreq/main";
      images {
         image: "tacho_bg.png" COMP;
         image: "tacho_fg.png" COMP;
         image: "tacho_dial_00.png" COMP;
         image: "tacho_dial_01.png" COMP;
         image: "tacho_dial_02.png" COMP;
         image: "tacho_dial_03.png" COMP;
         image: "tacho_dial_04.png" COMP;
         image: "tacho_dial_05.png" COMP;
         image: "tacho_dial_06.png" COMP;
         image: "tacho_dial_07.png" COMP;
         image: "tacho_dial_08.png" COMP;
         image: "tacho_dial_09.png" COMP;
         image: "tacho_dial_10.png" COMP;
         image: "tacho_dial_11.png" COMP;
         image: "tacho_dial_12.png" COMP;
         image: "tacho_dial_13.png" COMP;
         image: "tacho_dial_14.png" COMP;
         image: "tacho_dial_15.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
         public available_frequencies;
         public available_governors;
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT_SET) && (id == 1)) {
               while (count(available_frequencies) > 0) {
                  remove(available_frequencies, 0);
               }
               for (new i = 2; i < numargs(); i++) {
                  append_int(available_frequencies, getarg(i));
               }
            } 
            else if ((type == MSG_STRING_SET) && (id == 2)) {
               new text[100];
               while (count(available_governors) > 0) {
                  remove(available_governors, 0);
               }
               for (new i = 2; i < numargs(); i++) {
                  snprintf(text, 100, "%s", getarg(i));
                  append_str(available_governors, text);
               }
            } 
            else if ((type == MSG_INT_SET) && (id == 3)) {
               new f = getarg(2);
               new use_buttons = getarg(3);
               new Float:freq, Float:min_freq, Float:max_freq;
               new text[100];
               freq = f;
               min_freq = fetch_int(available_frequencies, 0);
               max_freq = fetch_int(available_frequencies,
                             count(available_frequencies) - 1);
               freq = (freq - min_freq) / (max_freq - min_freq);
               set_state(PART:"meter", "default", freq);
               if (f < 1000000) {
                  snprintf(text, 100, "%i", f / 1000);
               } 
               else {
                  snprintf(text, 100, "%i.%i", f / 1000000,
                            (f % 1000000) / 100000);
               }
               set_text(PART:"readout", text);
               if (use_buttons == 0) {
                  // set_state(PART:"increase_button", "inactive", 0.0);
                  // set_state(PART:"decrease_button", "inactive", 0.0);
                  // set_state(PART:"increase", "inactive", 0.0);
                  // set_state(PART:"decrease", "inactive", 0.0);
               } 
               else {
                  // set_state(PART:"increase_button", "default", 0.0);
                  // set_state(PART:"decrease_button", "default", 0.0);
                  // set_state(PART:"increase", "default", 0.0);
                  // set_state(PART:"decrease", "default", 0.0);
               }
            } 
            else if((type == MSG_STRING) && (id == 4)) {
               new text[100];
               snprintf(text, 100, "%s", getarg(2));
            }
         }
      }
      parts {
         part {
            name: "fade_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "faded" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "base";
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "tacho_bg.png";
            }
         }
         part {
            name: "readout";
            type: TEXT;
            scale: 1;
            // effect: OUTLINE_SOFT_SHADOW;
            mouse_events: 0;
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.6 0.7;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.6 0.7;
                  offset: 0 0;
               }
               color: 255 255 255 255;
               color2: 0 0 0 128;
               color3: 0 0 0 32;
               color_class: "module_label";
               text {
                  text: "??? Ghz";
                  font: "Sans:style=Bold";
                  size: 6;
                  align: 0.5 0.5;
                  min: 1 1;
                  text_class: "module_small";
               }
            }
         }
         part {
            name: "meter";
            clip_to: "fade_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0000;
               image.normal: "tacho_dial_00.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.0666;
               image.normal: "tacho_dial_01.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.1333;
               image.normal: "tacho_dial_02.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.2000;
               image.normal: "tacho_dial_03.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.2666;
               image.normal: "tacho_dial_04.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.3333;
               image.normal: "tacho_dial_05.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.4000;
               image.normal: "tacho_dial_06.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.4666;
               image.normal: "tacho_dial_07.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.5333;
               image.normal: "tacho_dial_08.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.6000;
               image.normal: "tacho_dial_09.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.6666;
               image.normal: "tacho_dial_10.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.7333;
               image.normal: "tacho_dial_11.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.8000;
               image.normal: "tacho_dial_12.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.8666;
               image.normal: "tacho_dial_13.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 0.9333;
               image.normal: "tacho_dial_14.png";
               rel1.to: "base";
               rel2.to: "base";
            }
            description {
               state: "default" 1.0000;
               image.normal: "tacho_dial_15.png";
               rel1.to: "base";
               rel2.to: "base";
            }
         }
         part {
            name: "over";
            clip_to: "fade_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "tacho_fg.png";
            }
         }
      }
      programs {
      /*
         program {
            name: "next_governor";
            signal: "mouse,down,1";
            source: "cpu";
            action: SIGNAL_EMIT "e,action,governor,next" "";
         }
         program {
            name: "next_governor2";
            signal: "mouse,down,1";
            source: "cpu";
            action: STATE_SET "clicked" 0.0;
            target: "cpu";
         }
         program {
            name: "next_governor3";
            signal: "mouse,up,1";
            source: "cpu";
            action: STATE_SET "default" 0.0;
            target: "cpu";
         }
         program {
            name: "increase_frequency";
            signal: "mouse,down,1";
            source: "increase";
            action: SIGNAL_EMIT "e,action,frequency,increase" "";
         }
         program {
            name: "increase_frequency2";
            signal: "mouse,down,1";
            source: "increase";
            action: STATE_SET "clicked" 0.0;
            target: "increase_button";
         }
         program {
            name: "increase_frequency3";
            signal: "mouse,up,1";
            source: "increase";
            action: STATE_SET "default" 0.0;
            target: "increase_button";
         }
         program {
            name: "decrease_frequency";
            signal: "mouse,down,1";
            source: "decrease";
            action: SIGNAL_EMIT "e,action,frequency,decrease" "";
         }
         program {
            name: "decrease_frequency2";
            signal: "mouse,down,1";
            source: "decrease";
            action: STATE_SET "clicked" 0.0;
            target: "decrease_button";
         }
         program {
            name: "decrease_frequency3";
            signal: "mouse,up,1";
            source: "decrease";
            action: STATE_SET "default" 0.0;
            target: "decrease_button";
         }
         */
         program {
            name: "enabled";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "fade_clip";
         }
         program {
            name: "disabled";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "faded" 0.0;
            target: "fade_clip";
         }
      }
   }
#else
   group {
      name: "e/modules/cpufreq/main";
      images {
         image: "tacho_bg.png" COMP;
         image: "tacho_fg.png" COMP;
         image: "t0.png" COMP;
         image: "t0-sh.png" COMP;
         image: "t1.png" COMP;
         image: "t1-sh.png" COMP;
         image: "t2.png" COMP;
      }
      min: 16 16;
      max: 128 128;
      script {
         public available_frequencies;
         public available_governors;

         public cur_freq_old;
         public cur_freq_new;
         public cur_freq_now;
         public cur_freq_anim;

         public min_freq_old;
         public min_freq_new;
         public min_freq_now;

         public max_freq_old;
         public max_freq_new;
         public max_freq_now;
        
         public slide_cur_freq(val, Float:v) {
            new Float:freq, Float:min_freq, Float:max_freq, Float:tf;
            new f, f0, f1;
           
            v = (1.0 - cos(v * 3.141592654)) / 2.0;
           
            min_freq = fetch_int(available_frequencies, 0);
            max_freq = fetch_int(available_frequencies,
                                 count(available_frequencies) - 1);
           
            f0 = get_int(cur_freq_old);
            f1 = get_int(cur_freq_new);
            f = f1 - f0;
            freq = float(f) * v;
            f = round(freq);
            f = f + f0;
            set_int(cur_freq_now, f);
           
            freq = (float(f) - min_freq) / (max_freq - min_freq);
            tf = (freq * 225.0) - 135.0;
            custom_state(PART:"meter", "default", 0.0);
            set_state_val(PART:"meter", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter", "custom", 0.0);
            custom_state(PART:"meter_sh", "default", 0.0);
            set_state_val(PART:"meter_sh", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter_sh", "custom", 0.0);
           
            f0 = get_int(min_freq_old);
            f1 = get_int(min_freq_new);
            f = f1 - f0;
            freq = float(f) * v;
            f = round(freq);
            f = f + f0;
            set_int(min_freq_now, f);
           
            freq = (float(f) - min_freq) / (max_freq - min_freq);
            tf = (freq * 225.0) - 135.0;
            custom_state(PART:"meter_min", "default", 0.0);
            set_state_val(PART:"meter_min", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter_min", "custom", 0.0);
            custom_state(PART:"meter_min_sh", "default", 0.0);
            set_state_val(PART:"meter_min_sh", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter_min_sh", "custom", 0.0);
           
            f0 = get_int(max_freq_old);
            f1 = get_int(max_freq_new);
            f = f1 - f0;
            freq = float(f) * v;
            f = round(freq);
            f = f + f0;
            set_int(max_freq_now, f);
           
            freq = (float(f) - min_freq) / (max_freq - min_freq);
            tf = (freq * 225.0) - 135.0;
            custom_state(PART:"meter_max", "default", 0.0);
            set_state_val(PART:"meter_max", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter_max", "custom", 0.0);
            custom_state(PART:"meter_max_sh", "default", 0.0);
            set_state_val(PART:"meter_max_sh", STATE_MAP_ROT_Z, tf);
            set_state(PART:"meter_max_sh", "custom", 0.0);
           
            if (v >= 1.0) {
              set_int(cur_freq_anim, 0);
              return 0;
            }
            return 1;
         }
        
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT_SET) && (id == 1)) { // add an available freq
               while (count(available_frequencies) > 0) {
                  remove(available_frequencies, 0);
               }
               for (new i = 2; i < numargs(); i++) {
                  append_int(available_frequencies, getarg(i));
               }
            } 
            else if ((type == MSG_STRING_SET) && (id == 2)) { // add a governor
               new text[100];
               while (count(available_governors) > 0) {
                  remove(available_governors, 0);
               }
               for (new i = 2; i < numargs(); i++) {
                  snprintf(text, 100, "%s", getarg(i));
                  append_str(available_governors, text);
               }
            } 
            else if ((type == MSG_INT_SET) && (id == 3)) { // avg freq
               new f;
               new ani, curf, minf, maxf;
               new text[100];

               f = getarg(2);              
               if (f < 1000000) snprintf(text, 100, "%i", f / 1000);
               else snprintf(text, 100, "%i.%i", f / 1000000,
                             (f % 1000000) / 100000);
               set_text(PART:"readout", text);
              
               ani = get_int(cur_freq_anim);
               if (ani > 0) cancel_anim(ani);
               ani = anim(1.0, "slide_cur_freq", 0);
               set_int(cur_freq_anim, ani);
              
               f = getarg(2);
               curf = get_int(cur_freq_now);
               set_int(cur_freq_old, curf);
               set_int(cur_freq_new, f);
              
               f = getarg(4);
               minf = get_int(min_freq_now);
               set_int(min_freq_old, minf);
               set_int(min_freq_new, f);
              
               f = getarg(5);
               maxf = get_int(max_freq_now);
               set_int(max_freq_old, maxf);
               set_int(max_freq_new, f);
            } 
            else if ((type == MSG_STRING) && (id == 4)) {
               new text[100];
               snprintf(text, 100, "%s", getarg(2));
            }
         }
      }
      parts {
         part {
            name: "fade_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "faded" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "base";
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "tacho_bg.png";
            }
         }
         part {
            name: "readout";
            type: TEXT;
            scale: 1;
            // effect: OUTLINE_SOFT_SHADOW;
            mouse_events: 0;
            clip_to: "fade_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.6 0.7;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.6 0.7;
                  offset: 0 0;
               }
               color: 255 255 255 255;
               color2: 0 0 0 128;
               color3: 0 0 0 32;
               color_class: "module_label";
               text {
                  text: "??? Ghz";
                  font: "Sans:style=Bold";
                  size: 6;
                  align: 0.5 0.5;
                  min: 1 1;
                  text_class: "module_small";
               }
            }
         }
         part { name: "meter_min_sh";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t1-sh.png";
               rel1.to: "meter_min";
               rel1.relative: 0.0+(2.0/64.0) 0.0+(2.0/64.0);
               rel2.to: "meter_min";
               rel2.relative: 1.0+(2.0/64.0) 1.0+(2.0/64.0);
               map {
                  on: 1;
                  rotation {
                     center: "meter_min_sh";
                  }
               }
            }
         }
         part { name: "meter_min";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t2.png";
               rel1.to: "base";
               rel2.to: "base";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
         }
         part { name: "meter_max_sh";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t1-sh.png";
               rel1.to: "meter_max";
               rel1.relative: 0.0+(2.0/64.0) 0.0+(2.0/64.0);
               rel2.to: "meter_max";
               rel2.relative: 1.0+(2.0/64.0) 1.0+(2.0/64.0);
               map {
                  on: 1;
                  rotation {
                     center: "meter_max_sh";
                  }
               }
            }
         }
         part { name: "meter_max";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t1.png";
               rel1.to: "base";
               rel2.to: "base";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
         }
         part { name: "meter_sh";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t0-sh.png";
               rel1.to: "meter";
               rel1.relative: 0.0+(2.0/64.0) 0.0+(2.0/64.0);
               rel2.to: "meter";
               rel2.relative: 1.0+(2.0/64.0) 1.0+(2.0/64.0);
               map {
                  on: 1;
                  rotation {
                     center: "meter_sh";
                  }
               }
            }
         }
         part { name: "meter";
            clip_to: "fade_clip";
            mouse_events: 0;
            description { state: "default" 0.0000;
               image.normal: "t0.png";
               rel1.to: "base";
               rel2.to: "base";
               map {
                  on: 1;
                  rotation {
                     center: "base";
                  }
               }
            }
         }
         part {
            name: "over";
            clip_to: "fade_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "tacho_fg.png";
            }
         }
      }
      programs {
         program {
            name: "enabled";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "fade_clip";
         }
         program {
            name: "disabled";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "faded" 0.0;
            target: "fade_clip";
         }
      }
   }
#endif

/////////////////////////////////////////////////////////////////////////////
/*** MOD: IBOX / IBAR ***/

   group {
      name: "e/modules/ibox/icon";
      alias: "e/modules/ibar/icon";
      data {
         item: "raise_on_hilight" "0";
         // 1 or 0 if u want an icon holder to raise when the mouse (or keyboard) hilights it
         // item: "item_list" "item item2 item3";
      }
      parts {
         part {
            name: "item_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "item_clip";
            description {
               state: "default" 0.0;
               rel1.offset: 2   2;
               rel2.offset: -3   -3;
            }
            description {
               state: "bigger" 0.0;
            }
         }
         part {
            name: "urgent_area";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "uw0" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3 -2;
               rel2.offset: -4 -3;
            }
            description {
               state: "uw1" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 5 -2;
               rel2.offset: 4 -3;
            }
            description {
               state: "uw2" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 4;
               rel2.offset: -2 3;
            }
            description {
               state: "uw3" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -2 -1;
               rel2.offset: -3 -2;
            }
            description {
               state: "uw4" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -4 1;
               rel2.offset: -5 0;
            }
         }
         part {
            name: "urgent";
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "urgent_area";
               rel2.to: "urgent_area";
               image.normal: "exclam.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  relative: -0.5  -0.5;
               }
               rel2 {
                  relative: 1.5  1.5;
               }
               color: 255 255 255 0;
            }
         }
         part {
            name: "over";
            type: RECT;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "hover_in";
            signal: "mouse,in";
            source: "over";
            action: STATE_SET "bigger" 0.0;
            transition: LINEAR 0.1;
            target: "e.swallow.content";
         }
         program {
            name: "hover_out";
            signal: "mouse,out";
            source: "over";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "e.swallow.content";
         }
         program {
            name: "set_urgent";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.2;
            target: "urgent";
         }
         program {
            name: "set_not_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.6;
            target: "urgent";
         }
         program {
            name: "urgentw0";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "urgent_area";
            transition: DECELERATE 0.1;
            after: "urgentw1";
         }
         program {
            name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            target: "urgent_area";
            transition: DECELERATE 0.1;
            after: "urgentw2";
         }
         program {
            name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
            target: "urgent_area";
            transition: DECELERATE 0.1;
            after: "urgentw3";
         }
         program {
            name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            target: "urgent_area";
            transition: DECELERATE 0.1;
            after: "urgentw4";
         }
         program {
            name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            target: "urgent_area";
            transition: DECELERATE 0.1;
            after: "urgentw0";
         }
         program {
            name: "not_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: ACTION_STOP;
            target: "urgentw0";
            target: "urgentw1";
            target: "urgentw2";
            target: "urgentw3";
            target: "urgentw4";
            after: "not_urgent2";
         }
         program {
            name: "not_urgent2";
            action: STATE_SET "default" 0.0;
            target: "urgent";
            target: "urgent_area";
         }
      }
   }
   group {
      name: "e/modules/ibox/icon_overlay";
      alias: "e/modules/ibar/icon_overlay";
      data {
         // item: "item_list", "item item2 item3";
      }
      script {
         public urgent;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "background";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "base";
               rel2.to: "base";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               visible: 1;
               rel1.to: "base";
               rel2.to: "base";
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               visible: 1;
               rel1 {
                  relative: -0.5  -0.5;
                  to: "base";
               }
               rel2 {
                  relative: 1.5  1.5;
                  to: "base";
               }
               color: 255 255 255 0;
            }
            description {
               state: "huge" 0.0;
               visible: 1;
               rel1 {
                  relative: -2.0  -2.0;
                  to: "base";
               }
               rel2 {
                  relative: 3.0  3.0;
                  to: "base";
               }
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "background";
            description {
               state: "default" 0.0;
               rel1.to: "background";
               rel2.to: "background";
            }
         }
         part {
            name: "urgent";
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "base";
               rel2.to: "base";
               image.normal: "exclam.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  relative: -0.5  -0.5;
                  to: "base";
               }
               rel2 {
                  relative: 1.5  1.5;
                  to: "base";
               }
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -1    -1;
               }
               color: 255 255 255 0;
               color3: 0 0 0 0;
               color_class: "module_label";
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "module_normal";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -1    -1;
               }
               color: 255 255 255 255;
               color3: 0 0 0 42;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,focused";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "background";
            after: "go_active2";
         }
         program {
            name: "go_activeB";
            signal: "e,action,show,label";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "e.text.label";
         }
         program {
            name: "go_active2";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 0.5;
            target: "background";
            after: "go_active";
         }
         program {
            name: "go_passive";
            signal: "e,state,unfocused";
            source: "e";
            action: ACTION_STOP;
            target: "go_active";
            target: "go_active2";
            after: "go_passive2";
         }
         program {
            name: "go_passiveB";
            signal: "e,action,hide,label";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "e.text.label";
         }
         program {
            name: "go_passive2";
            action: STATE_SET "default" 0.0;
            target: "background";
            script {
               if (get_int(urgent) == 1) {
                  run_program(PROGRAM:"go_urgent");
               }
            }
         }
         program {
            name: "init";
            signal: "load";
            source: "";
            script {
               set_int(urgent, 0);
            }
         }
         program {
            name: "set_urgent";
            signal: "e,state,urgent";
            source: "e";
            script {
               set_int(urgent, 1);
            }
         }
         program {
            name: "go_urgent";
            action: STATE_SET "visible" 0.0;
            target: "background";
            target: "urgent";
            after: "go_urgent2";
         }
         program {
            name: "go_urgent2";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 0.5;
            target: "background";
            target: "urgent";
            after: "go_urgent";
         }
         program {
            name: "unset_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            script {
               set_int(urgent, 0);
            }
         }
         program {
            name: "go_unurgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: ACTION_STOP;
            target: "go_urgent";
            target: "go_urgent2";
            after: "go_unurgent2";
         }
         program {
            name: "go_unurgent2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.3;
            target: "background";
            target: "urgent";
         }
         program {
            name: "exec_exec";
            signal: "e,action,exec";
            source: "e";
            after: "exec_start";
         }
         program {
            name: "exec_start";
            signal: "e,action,start";
            source: "e";
            action: ACTION_STOP;
            target: "go_active";
            target: "go_active2";
            target: "go_passive";
            target: "go_passive2";
            target: "go_big";
            target: "go_big2";
            after: "go_big";
         }
         program {
            name: "go_big";
            action: STATE_SET "visible" 0.0;
            target: "background";
            after: "go_big2";
         }
         program {
            name: "go_big2";
            action: STATE_SET "huge" 0.0;
            transition: LINEAR 0.5;
            target: "background";
         }
      }
   }
   group {
      name: "e/modules/ibox/drop";
      alias: "e/modules/ibar/drop";
      images.image: "inset_raised.png" COMP;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_raised.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
            }
         }
      }
   }
   group {
      name: "e/modules/ibox/drop_overlay";
      alias: "e/modules/ibar/drop_overlay";
      images {
         image: "gadman_top.png" COMP;
         image: "gadman_bottom.png" COMP;
         image: "gadman_left.png" COMP;
         image: "gadman_right.png" COMP;
      }
      parts {
         part {
            name: "left_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.relative: -1.0 0.5;
               rel2.relative: -1.0 0.5;
               image.normal: "gadman_right.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.8 0.2;
               rel2.relative: -0.7 0.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 0.5;
               rel2.relative: 0.2 0.5;
            }
         }
         part {
            name: "left_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.relative: -1.0 0.5;
               rel2.relative: -1.0 0.5;
               image.normal: "gadman_right.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.8 0.2;
               rel2.relative: -0.7 0.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 0.5;
               rel2.relative: 0.2 0.5;
            }
         }
         part {
            name: "right_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.relative: 2.0 0.5;
               rel2.relative: 2.0 0.5;
               image.normal: "gadman_left.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.8 0.2;
               rel2.relative: 1.7 0.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.8 0.5;
               rel2.relative: 0.8 0.5;
            }
         }
         part {
            name: "right_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.relative: 2.0 0.5;
               rel2.relative: 2.0 0.5;
               image.normal: "gadman_left.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 1.8 0.2;
               rel2.relative: 1.7 0.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.8 0.5;
               rel2.relative: 0.8 0.5;
            }
         }
         part {
            name: "top_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel1.relative: 0.5 -1.0;
               rel2.relative: 0.5 -1.0;
               image.normal: "gadman_bottom.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 -0.8;
               rel2.relative: 0.8 -0.7;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.2;
               rel2.relative: 0.5 0.2;
            }
         }
         part {
            name: "top_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel1.relative: 0.5 -1.0;
               rel2.relative: 0.5 -1.0;
               image.normal: "gadman_bottom.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 -0.8;
               rel2.relative: 0.8 -0.7;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.2;
               rel2.relative: 0.5 0.2;
            }
         }
         part {
            name: "bottom_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel1.relative: 0.5 2.0;
               rel2.relative: 0.5 2.0;
               image.normal: "gadman_top.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 1.7;
               rel2.relative: 0.8 1.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.8;
               rel2.relative: 0.5 0.8;
            }
         }
         part {
            name: "bottom_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               rel1.relative: 0.5 2.0;
               rel2.relative: 0.5 2.0;
               image.normal: "gadman_top.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.2 1.7;
               rel2.relative: 0.8 1.8;
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.8;
               rel2.relative: 0.5 0.8;
            }
         }
      }
      programs {
         program {
            name: "start1";
            signal: "show";
            source: "";
            after: "left1_1";
            after: "right1_1";
            after: "top1_1";
            after: "bottom1_1";
         }
         program {
            name: "start2";
            signal: "show";
            source: "";
            in: 0.4 0.0;
            after: "left2_1";
            after: "right2_1";
            after: "top2_1";
            after: "bottom2_1";
         }
         // LEFT ARROW
         program {
            name: "left1_1";
            action: STATE_SET "1" 0.0;
            target: "left_arrow1";
            transition: LINEAR 0.4;
            after: "left1_2";
         }
         program {
            name: "left1_2";
            action: STATE_SET "2" 0.0;
            target: "left_arrow1";
            transition: LINEAR 0.4;
            after: "left1_r";
         }
         program {
            name: "left1_r";
            action: STATE_SET "default" 0.0;
            target: "left_arrow1";
            after: "left1_1";
         }
         program {
            name: "left2_1";
            action: STATE_SET "1" 0.0;
            target: "left_arrow2";
            transition: LINEAR 0.4;
            after: "left2_2";
         }
         program {
            name: "left2_2";
            action: STATE_SET "2" 0.0;
            target: "left_arrow2";
            transition: LINEAR 0.4;
            after: "left2_r";
         }
         program {
            name: "left2_r";
            action: STATE_SET "default" 0.0;
            target: "left_arrow2";
            after: "left2_1";
         }
         // RIGHT ARROW
         program {
            name: "right1_1";
            action: STATE_SET "1" 0.0;
            target: "right_arrow1";
            transition: LINEAR 0.4;
            after: "right1_2";
         }
         program {
            name: "right1_2";
            action: STATE_SET "2" 0.0;
            target: "right_arrow1";
            transition: LINEAR 0.4;
            after: "right1_r";
         }
         program {
            name: "right1_r";
            action: STATE_SET "default" 0.0;
            target: "right_arrow1";
            after: "right1_1";
         }
         program {
            name: "right2_1";
            action: STATE_SET "1" 0.0;
            target: "right_arrow2";
            transition: LINEAR 0.4;
            after: "right2_2";
         }
         program {
            name: "right2_2";
            action: STATE_SET "2" 0.0;
            target: "right_arrow2";
            transition: LINEAR 0.4;
            after: "right2_r";
         }
         program {
            name: "right2_r";
            action: STATE_SET "default" 0.0;
            target: "right_arrow2";
            after: "right2_1";
         }
         // TOP ARROW
         program {
            name: "top1_1";
            action: STATE_SET "1" 0.0;
            target: "top_arrow1";
            transition: LINEAR 0.4;
            after: "top1_2";
         }
         program {
            name: "top1_2";
            action: STATE_SET "2" 0.0;
            target: "top_arrow1";
            transition: LINEAR 0.4;
            after: "top1_r";
         }
         program {
            name: "top1_r";
            action: STATE_SET "default" 0.0;
            target: "top_arrow1";
            after: "top1_1";
         }
         program {
            name: "top2_1";
            action: STATE_SET "1" 0.0;
            target: "top_arrow2";
            transition: LINEAR 0.4;
            after: "top2_2";
         }
         program {
            name: "top2_2";
            action: STATE_SET "2" 0.0;
            target: "top_arrow2";
            transition: LINEAR 0.4;
            after: "top2_r";
         }
         program {
            name: "top2_r";
            action: STATE_SET "default" 0.0;
            target: "top_arrow2";
            after: "top2_1";
         }
         // BOTTOM ARROW
         program {
            name: "bottom1_1";
            action: STATE_SET "1" 0.0;
            target: "bottom_arrow1";
            transition: LINEAR 0.4;
            after: "bottom1_2";
         }
         program {
            name: "bottom1_2";
            action: STATE_SET "2" 0.0;
            target: "bottom_arrow1";
            transition: LINEAR 0.4;
            after: "bottom1_r";
         }
         program {
            name: "bottom1_r";
            action: STATE_SET "default" 0.0;
            target: "bottom_arrow1";
            after: "bottom1_1";
         }
         program {
            name: "bottom2_1";
            action: STATE_SET "1" 0.0;
            target: "bottom_arrow2";
            transition: LINEAR 0.4;
            after: "bottom2_2";
         }
         program {
            name: "bottom2_2";
            action: STATE_SET "2" 0.0;
            target: "bottom_arrow2";
            transition: LINEAR 0.4;
            after: "bottom2_r";
         }
         program {
            name: "bottom2_r";
            action: STATE_SET "default" 0.0;
            target: "bottom_arrow2";
            after: "bottom2_1";
         }
      }
   }



/////////////////////////////////////////////////////////////////////////////
/*** MOD: WINLIST ***/

/* e/widgets/winlist/* is the Window List
   gadget that pops up with Alt Tab       */

   group {
      name: "e/widgets/winlist/main";
      images {
         image: "base_bg.png" COMP;
         image: "bd_top_hilight.png" COMP;
         image: "bd_title_bg.png" COMP;
         image: "bd_title_over.png";
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "top_hilight";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 15;
               image.normal: "bd_top_hilight.png";
               fill.smooth: 0;
            }
         }
         part {
            name: "title_back";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 4 0;
               rel2.offset: -5 -4;
               rel2.to_y: "e.text.title";
               image {
                  normal: "bd_title_bg.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.5 0.0;
               min: 24 24;
               max: 24 24;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 1     6;
                  to_y: "title_back";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -2    30;
                  to_y: "title_back";
               }
            }
         }
         part {
            name: "separator";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 16 2;
               rel1 {
                  offset: 16 2;
                  relative: 0.0 1.0;
                  to_y: "e.text.label";
               }
               rel2 {
                  offset: -17 4;
                  relative: 1.0 1.0;
                  to_y: "e.text.label";
               }
               image {
                  normal: "menu_sep.png";
                  border: 2 2 0 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.list";
            type: SWALLOW;
            clip_to: "list_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 12   12;
                  to_y: "e.text.label";
               }
               rel2.offset: -13  -12;
            }
         }
         part {
            name: "list_clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to_y: "e.swallow.list";
               rel2.to_y: "e.swallow.list";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: NONE;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 16   16;
                  to_y: "e.swallow.icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -17 16;
                  to_y: "e.swallow.icon";
               }
               color_class: "winlist_label";
               text {
                  text: "Title goes here";
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 0 1;
                  align: 0.5 0.5;
                  text_class: "winlist_label";
               }
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               color: 224 224 224 255;
               color3: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  align: 0.5 0.0;
                  min: 1 1;
               }
            }
         }
         part {
            name: "title_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "title_back";
               rel2.to: "title_back";
               image {
                  normal: "bd_title_over.png";
                  border: 7 7 2 7;
               }
               fill.smooth: 0;
            }
         }
      }
   }
   group {
      name: "e/widgets/winlist/item";
      images {
         image: "menu_sel_bg.png" COMP;
         image: "menu_sel_fg.png" COMP;
         image: "pager_window.png" COMP;
         image: "pager_window_shaded.png" COMP;
         image: "pager_base2.png";
      }
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 5;
               }
               image {
                  normal: "menu_sel_bg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 2;
               }
            }
         }
         part {
            name: "fg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "menu_sel_fg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4  3;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4   -1;
                  to_y: "e.text.label";
               }
            }
         }
         part {
            name: "type";
            description {
               state: "default" 0.0;
               min: 23 24;
               max: 23 24;
               align: 1.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  offset: -23  -12;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -1  11;
                  to_y: "e.text.label";
               }
               image.normal: "pager_window.png";
            }
            description {
               state: "iconified" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description {
               state: "invisible" 0.0;
               inherit: "default" 0.0;
               image.normal: "pager_base2.png";
            }
            description {
               state: "shaded" 0.0;
               inherit: "default" 0.0;
               image.normal: "pager_window_shaded.png";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  offset: 3 5;
                  to_x: "e.swallow.icon";
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: -4 -4;
                  to_x: "type";
               }
               color_class: "winlist_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.5;
                  text_class: "winlist_title";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "winlist_item_active";
            }
         }
         part {
            name: "e.event.winlist.item";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 12 12;
               visible: 1;
               color: 0 0 0 0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
      }
      programs {
         program {
            name: "type1";
            signal: "e,state,iconified";
            source: "e";
            action: STATE_SET "iconified" 0.0;
            target: "type";
         }
         program {
            name: "type2";
            signal: "e,state,invisible";
            source: "e";
            action: STATE_SET "invisible" 0.0;
            target: "type";
         }
         program {
            name: "type3";
            signal: "e,state,shaded";
            source: "e";
            action: STATE_SET "shaded" 0.0;
            target: "type";
         }
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            transition: LINEAR 0.2;
            target: "bg";
            target: "fg";
            target: "e.text.label";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "bg";
            target: "fg";
            target: "e.text.label";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: EXEBUF ***/

   /* Exebuf is the run dialog, binded to Alt-Esc by default */

   group {
      name: "e/widgets/exebuf/main";
      images {
         image: "base_bg.png" COMP;
         image: "inset_sunk.png" COMP;
         image: "menu_sel_bg.png" COMP;
         image: "menu_sel_fg.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "eap_bg";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.eap_list";
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.eap_list";
                  offset: 0  0;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.eap_list";
            type: SWALLOW;
            clip_to: "eap_list_clip";
            description {
               state: "default" 0.0;
               min: 32 64;
               align: 0.5 0.0;
               rel1.offset: 12  12;
               rel2 {
                  offset: -13  -13;
                  relative: 1.0 0.0;
                  to_y: "bg";
               }
            }
         }
         part {
            name: "eap_list_clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to_y: "e.swallow.eap_list";
               rel2.to_y: "e.swallow.eap_list";
            }
         }
         part {
            name: "eap_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: -1 -1;
                  to: "eap_bg";
               }
               rel2 {
                  offset: 0 0;
                  to: "eap_bg";
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "exe_bg";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.exe_list";
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.exe_list";
                  offset: 0  0;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.exe_list";
            type: SWALLOW;
            clip_to: "exe_list_clip";
            description {
               state: "default" 0.0;
               min: 32 64;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 12  12;
                  to_y: "bg";
               }
               rel2.offset: -13  -13;
            }
         }
         part {
            name: "exe_list_clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to_y: "e.swallow.exe_list";
               rel2.to_y: "e.swallow.exe_list";
            }
         }
         part {
            name: "exe_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: -1 -1;
                  to: "exe_bg";
               }
               rel2 {
                  offset: 0 0;
                  to: "exe_bg";
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 0 42;
               max: 99999 42;
               rel1.offset: 20 0;
               rel2.offset: -21 -1;
               image {
                  normal: "menu_sel_bg.png";
                  border: 8 8 5 9;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SHADOW;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 0.5;
                  offset: 4   0;
                  to_x: "e.swallow.icons";
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: 4  0;
                  to_x: "e.swallow.icons";
               }
               color: 255 255 255 255;
               color3: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.5;
                  min: 1 1;
                  text_class: "exebuf_command";
               }
            }
         }
         part {
            name: "cursor";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 1 18;
               max: 1 18;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 1    0;
                  to: "e.text.label";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: 1    -1;
                  to: "e.text.label";
               }
               color: 255 255 255 220;
            }
            description {
               state: "faded" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.swallow.icons";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               align: 0.0 0.5;
               rel1 {
                  offset: 6  4;
                  to: "bg";
               }
               rel2 {
                  offset: -7  -5;
                  to: "bg";
               }
            }
         }
         part {
            name: "fg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "menu_sel_fg.png";
                  border: 8 8 5 9;
               }
            }
         }
      }
      programs {
         program {
            name: "blink_off";
            signal: "show";
            source: "";
            action: STATE_SET "faded" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "cursor";
            after: "blink_on";
         }
         program {
            name: "blink_on";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.25;
            target: "cursor";
            after: "blink_off";
         }
      }
   }
   group {
      name: "e/widgets/exebuf/item";
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.offset: -5 -3;
               rel2.offset: 4 5;
               image {
                  normal: "menu_sel_bg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: -2 0;
               rel2.offset: 1 2;
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: 2 1;
                  relative: 1.0 0.0;
                  to_x: "e.swallow.icons";
               }
               rel2.offset: -3 -2;
               color_class: "menu_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.5;
                  text_class: "menu_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "menu_item_active";
            }
         }
         part {
            name: "e.swallow.icons";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               max: 18 18;
               aspect: 1.0 1.0;
               align: 0.0 0.5;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3   1;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: -3   -2;
               }
            }
         }
         part {
            name: "fg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "menu_sel_fg.png";
                  border: 8 8 5 9;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.event.exebuf.item";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 14 14;
               visible: 1;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 1    -1;
                  to_x: "e.swallow.icons";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -1   -1;
               }
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            transition: LINEAR 0.2;
            target: "bg";
            target: "fg";
            target: "e.text.title";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.1;
            target: "bg";
            target: "fg";
            target: "e.text.title";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: SYSCON ***/

   group {
      name: "e/widgets/syscon/main";
      images {
         image: "base_bg.png" COMP;
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.main";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               // fixed: 1 1;
               align: 0.5 0.0;
               rel1.offset: 12 12;
               rel2.relative: 1.0 0.0;
               rel2.offset: -13 12;
            }
         }
         part {
            name: "e.swallow.secondary";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               min: 32 32;
               rel1.to: "e.swallow.main";
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 12;
               rel2.to: "e.swallow.extra";
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 -13;
            }
         }
         part {
            name: "e.swallow.extra";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               // fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.0 1.0;
               rel1.offset: 12 -13;
               rel2.to_y: "button_image";
               rel2.relative: 1.0 0.0;
               rel2.offset: -13 -13;
            }
         }
         part {
            name: "button_image";
            mouse_events: 1;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.5 1.0;
               rel1.offset: 0 -13;
               rel2.relative: 0.5 1.0;
               rel2.offset: 0 -13;
               min: 64 32;
               max: 64 32;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "button_image";
                  relative: 0.0  0.0;
                  offset: 3    3;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "button_text";
               text {
                  text: "Cancel";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "button_text_disabled";
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "over3";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 12 12 12 12;
               }
               fill.smooth : 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,close" "";
         }
      }
   }
   group {
      name: "e/widgets/syscon/item/button";
      images {
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
      }
      parts {
         part {
            name: "button_image";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 32 16;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 0 1;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 3    -4;
                  to: "button_image";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "button_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 1.0;
                  text_class: "button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "button_text_disabled";
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3  3;
                  to: "button_image";
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -4   -1;
                  to_x: "button_image";
                  to_y: "e.text.label";
               }
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "over3";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 12 12 12 12;
               }
               fill.smooth : 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "disabler";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,click" "";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over1";
            target: "disabler";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over1";
            target: "disabler";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: MIXER ***/
   // TODO: Add code for making sound circles fade between states.

   group {
      name: "e/modules/mixer/main";
      images {
         image: "mixer.png" COMP;
         image: "mixer_low_left.png" COMP;
         image: "mixer_low_right.png" COMP;
         image: "mixer_med_left.png" COMP;
         image: "mixer_med_right.png" COMP;
         image: "mixer_high_left.png" COMP;
         image: "mixer_high_right.png" COMP;
      }
      max: 128 128;
      min: 1 1;
      script {
         public message(Msg_Type:type, id, ...) {
            if ((type == MSG_INT_SET) && (id == 0)) {
               new mute, left, right;
               mute = getarg(2);
               left = getarg(3);
               right = getarg(4);
               if (mute)
                  run_program(PROGRAM:"mute"); 
               else
                  run_program(PROGRAM:"unmute");
               
               if (left <= 0)
                  run_program(PROGRAM:"left_none"); 
               else if (left < 33)
                  run_program(PROGRAM:"left_low"); 
               else if (left < 66)
                  run_program(PROGRAM:"left_medium"); 
               else if (left >= 66)
                  run_program(PROGRAM:"left_high");
               
               if (right <= 0)
                  run_program(PROGRAM:"right_none"); 
               else if (right < 33)
                  run_program(PROGRAM:"right_low"); 
               else if (right < 66)
                  run_program(PROGRAM:"right_medium"); 
               else if (right >= 66)
                  run_program(PROGRAM:"right_high");
            }
         }
      }
      parts {
         part {
            name: "speaker";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1 1;
               aspect_preference: BOTH;
               image.normal: "mixer.png";
            }
         }
         part {
            name: "left";
            type: IMAGE;
            clip_to: "mute";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               aspect: 1 1;
               aspect_preference: BOTH;
               rel1.to: "speaker";
               rel2.to: "speaker";
               image.normal: "mixer_low_left.png";
            }
            description {
               state: "low" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description {
               state: "medium" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "mixer_med_left.png";
            }
            description {
               state: "high" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "mixer_high_left.png";
            }
         }
         part {
            name: "right";
            type: IMAGE;
            clip_to: "mute";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               aspect: 1 1;
               aspect_preference: BOTH;
               rel1.to: "speaker";
               rel2.to: "speaker";
               image.normal: "mixer_low_right.png";
            }
            description {
               state: "low" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description {
               state: "medium" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "mixer_med_right.png";
            }
            description {
               state: "high" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               image.normal: "mixer_high_right.png";
            }
         }
         part {
            name: "mute";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "active" 0.0;
               color: 255 255 255 64;
            }
         }
         part {
            name: "over";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "speaker";
               rel2.to: "speaker";
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            name: "mute";
            action: STATE_SET "active" 0.0;
            transition: LINEAR 0.3;
            target: "mute";
         }
         program {
            name: "unmute";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mute";
         }
         program {
            name: "left_none";
            action: STATE_SET "default" 0.0;
            target: "left";
         }
         program {
            name: "left_low";
            action: STATE_SET "low" 0.0;
            target: "left";
         }
         program {
            name: "left_medium";
            action: STATE_SET "medium" 0.0;
            target: "left";
         }
         program {
            name: "left_high";
            action: STATE_SET "high" 0.0;
            target: "left";
         }
         program {
            name: "right_none";
            action: STATE_SET "default" 0.0;
            target: "right";
         }
         program {
            name: "right_low";
            action: STATE_SET "low" 0.0;
            target: "right";
         }
         program {
            name: "right_medium";
            action: STATE_SET "medium" 0.0;
            target: "right";
         }
         program {
            name: "right_high";
            action: STATE_SET "high" 0.0;
            target: "right";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** FILEMAN ***/
/* E inbuilt filemanager */

   group {
      name: "e/fileman/default/window/main";
      images {
         image: "dia_grad.png" COMP;
         image: "dia_topshad.png" COMP;
         image: "dia_botshad.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "fileman_base";
               image.normal: "dia_grad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "e.swallow.bg";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 31;
               image.normal: "dia_topshad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "shadow2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -4;
               image.normal: "dia_botshad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
      }
   }
   group {
      name: "e/fileman/default/progress";
      min: 250 40;
      images {
         image: "icon_efm_file_del.png" COMP;
      }
      parts {
         part {
            name: "bg";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "bt_dis_base.png";
               image.border: 5 5 5 5;
            }
            description {
               state: "need_attention" 0.0;
               inherit: "default" 0.0;
               color: 200 0 0 150;
            }
         }
         part {
            name: "shadow";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "bt_dis_shine.png";
               image.border: 5 5 5 5;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
         part {
            name: "icon";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               align: 0.01 0.5;
               rel1.to: "bg";
               rel2.to: "bg";
               image.normal: "icon_efm_dnd_ask.png";
            }
            description {
               state: "copy" 0.0;
               inherit: "default" 0.0;
               image.normal: "icon_efm_dnd_copy.png";
            }
            description {
               state: "move" 0.0;
               inherit: "default" 0.0;
               image.normal: "icon_efm_dnd_move.png";
            }
            description {
               state: "delete" 0.0;
               inherit: "default" 0.0;
               image.normal: "icon_efm_file_del.png";
            }
         }
         part {
            name: "gauge_bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "icon";
               rel1.relative: 1.0 0.60;
               rel2.to: "bg";
               rel2.relative: 1.0 1.0;
               rel2.offset: -4 -5;
               image.normal: "inset_sunk.png";
               image.border: 6 6 6 6;
            }
         }
         part {
            name: "gauge_confine";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "gauge_bg";
               rel1.offset: 1 1;
               rel2.to: "gauge_bg";
               rel2.offset: -2 -2;
               color: 0 255 0 0;
            }
         }
         part {
            name: "e.gauge.bar";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               min: 0 0;
               color: 55 55 55 100;
            }
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine:"gauge_confine";
            }
         }
         part {
            name: "e.text.info";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  to_x: "icon";
                  to_y: "bg";
               }
               rel2 {
                  relative: 0.0 0.6;
                  to_x: "bt_abort";
                  to_y: "icon";
               }
               color: 0 0 0 255;
               text {
                  font: "Sans";
                  size: 10;
                  align: 0.0 0.5;
                  text_class: "fileman_icon";
               }
            }
         }
         part {
            name: "bt_abort";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 1.0 0.0;
               min: 19 19;
               max: 19 19;
               rel1.offset: -3 2;
               rel2.offset: -3 2;
               image.normal: "bd_button_close_shadow.png";
            }
         }
         part {
            name: "bt_abort_unfoc";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.to: "bt_abort";
               rel2.to: "bt_abort";
               image.normal: "bd_button_close_unfocused.png";
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
         part {
            name: "bt_abort_foc";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bt_abort";
               rel2.to: "bt_abort";
               image.normal: "bd_button_close_focused.png";
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
         part {
            name: "e.event.abort";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1.to: "bt_abort";
               rel2.to: "bt_abort";
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "set_need_attention";
            signal: "e,action,set,need_attention";
            source: "e";
            action: STATE_SET "need_attention" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "bg";
            after: "need_loop";
         }
         program {
            name: "need_loop";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "bg";
            after: "set_need_attention";
         }
         program {
            name: "set_normal";
            signal: "e,action,set,normal";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "bg";
         }
         program {
            name: "set_icon_unknow";
            signal: "e,action,icon,unknow";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon";
         }
         program {
            name: "set_icon_copy";
            signal: "e,action,icon,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "icon";
         }
         program {
            name: "set_icon_move";
            signal: "e,action,icon,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "icon";
         }
         program {
            name: "set_icon_delete";
            signal: "e,action,icon,delete";
            source: "e";
            action: STATE_SET "delete" 0.0;
            target: "icon";
         }
         program {
            name: "bt_abort_down";
            signal: "mouse,down,*";
            source: "e.event.abort";
            action: STATE_SET "active" 0.0;
            target: "bt_abort_unfoc";
            target: "bt_abort_foc";
         }
         program {
            name: "bt_abort_up";
            signal: "mouse,up,*";
            source: "e.event.abort";
            action: STATE_SET "default" 0.0;
            target: "bt_abort_unfoc";
            target: "bt_abort_foc";
         }
         program {
            name: "bt_abort_click";
            signal: "mouse,clicked,*";
            source: "e.event.abort";
            action: SIGNAL_EMIT "e,fm,operation,abort" "";
         }
      }
   }
   group {
      name: "e/fileman/default/scrollframe";
      images {
         image: "inset_sunk.png" COMP;
         image: "arrow_left.png" COMP;
         image: "arrow_right.png" COMP;
         image: "arrow_up.png" COMP;
         image: "arrow_down.png" COMP;
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerh.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2 {
                  relative: 0.0  0.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
                  to_y: "sb_hbar";
               }
            }
         }
         part {
            name: "conf_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: -1 -1;
               rel2.offset: 0 0;
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -2 1;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -2 -1;
                  to_y: "sb_hbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               max: 0 99999;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 -1;
                  to_y: "sb_hbar";
               }
            }
         }
         part {
            name: "sb_vbar_base";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -2;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1    1;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "sb_vbar_runner";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "sb_vbar_base";
               rel1.offset: 1 0;
               rel2.to: "sb_vbar_base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_vbar_p1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.vbar";
               }
            }
         }
         part {
            name: "sb_vbar_p2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.vbar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.vbar";
            clip_to: "sb_vbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_vbar_over1";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_over2";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a1_arrow";
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a1";
               rel2.to: "sb_vbar_a1";
               image.normal: "arrow_up.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 -1;
               rel2.offset: -1 -2;
            }
         }
         part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 1.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a2";
               rel2.to: "sb_vbar_a2";
               image.normal: "arrow_down.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
         part {
            name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 1 -2;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: -1 -2;
                  to_x: "sb_vbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part {
            name: "sb_hbar_base";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -2   0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 1   -1;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "sb_hbar_runner";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 99999 3;
               rel1.to: "sb_hbar_base";
               rel1.offset: 0 1;
               rel2.to: "sb_hbar_base";
               image {
                  normal: "sb_runnerh.png";
                  border: 4 4 0 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_hbar_p1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "e.dragable.hbar";
               }
            }
         }
         part {
            name: "sb_hbar_p2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "e.dragable.hbar";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.hbar";
            clip_to: "sb_hbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_hbar_over1";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_over2";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_a1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 0.0  1.0;
                  offset: 0   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a1_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a1";
               rel2.to: "sb_hbar_a1";
               image.normal: "arrow_left.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 0;
               rel2.offset: -2 -1;
            }
         }
         part {
            name: "sb_hbar_a2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 1.0  0.0;
                  offset: -1    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 1.0  1.0;
                  offset: -1   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a2";
               rel2.to: "sb_hbar_a2";
               image.normal: "arrow_right.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 1 0;
               rel2.offset: 0 -1;
            }
         }
         part {
            name: "e.box.operations";
            type: BOX;
            description {
               state: "default" 0.0;
               rel2.to_x: "sb_vbar";
               rel2.to_y: "sb_hbar";
               rel2.relative: 0.0 0.0;
               box {
                  layout: "vertical";
                  padding: 0 0;
                  align: 1.0 1.0;
               }
            }
         }
      }
      programs {
         program {
            name: "sb_vbar_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_hbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: DRAG_VAL_STEP -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: DRAG_VAL_STEP 1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p2";
            action: DRAG_VAL_PAGE  1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.hbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.hbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.hbar";
         }
      }
   }
   group {
      name: "e/fileman/desktop/scrollframe";
      images {
         image: "arrow_left.png" COMP;
         image: "arrow_right.png" COMP;
         image: "arrow_up.png" COMP;
         image: "arrow_down.png" COMP;
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerh.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  0.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
                  to_y: "sb_hbar";
               }
            }
         }
         part {
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 -1;
                  to_y: "sb_hbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               max: 0 99999;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -1 -1;
                  to_y: "sb_hbar";
               }
            }
         }
         part {
            name: "sb_vbar_base";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1    0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "sb_vbar_runner";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "sb_vbar_base";
               rel1.offset: 1 0;
               rel2.to: "sb_vbar_base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_vbar_p1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.vbar";
               }
            }
         }
         part {
            name: "sb_vbar_p2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.vbar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.vbar";
            clip_to: "sb_vbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_vbar_over1";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_over2";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a1_arrow";
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a1";
               rel2.to: "sb_vbar_a1";
               image.normal: "arrow_up.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 -1;
               rel2.offset: -1 -2;
            }
         }
         part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 1.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a2";
               rel2.to: "sb_vbar_a2";
               image.normal: "arrow_down.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
         part {
            name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 1 -2;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: -1 -2;
                  to_x: "sb_vbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part {
            name: "sb_hbar_base";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -1   0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0   -1;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "sb_hbar_runner";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 99999 3;
               rel1.to: "sb_hbar_base";
               rel1.offset: 0 1;
               rel2.to: "sb_hbar_base";
               image {
                  normal: "sb_runnerh.png";
                  border: 4 4 0 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_hbar_p1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "e.dragable.hbar";
               }
            }
         }
         part {
            name: "sb_hbar_p2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "e.dragable.hbar";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.hbar";
            clip_to: "sb_hbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_hbar_over1";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_over2";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_a1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 0.0  1.0;
                  offset: 0   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a1_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a1";
               rel2.to: "sb_hbar_a1";
               image.normal: "arrow_left.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 0;
               rel2.offset: -2 -1;
            }
         }
         part {
            name: "sb_hbar_a2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 1.0  0.0;
                  offset: -1    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 1.0  1.0;
                  offset: -1   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a2";
               rel2.to: "sb_hbar_a2";
               image.normal: "arrow_right.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 1 0;
               rel2.offset: 0 -1;
            }
         }
      }
      programs {
         program {
            name: "sb_vbar_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_hbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: DRAG_VAL_STEP -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: DRAG_VAL_STEP 1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p2";
            action: DRAG_VAL_PAGE  1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.hbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.hbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.hbar";
         }
      }
   }
   group {
      name: "e/fileman/default/list/drop_in";
      alias: "e/fileman/default/list/drop_between";
      alias: "e/fileman/desktop/list/drop_in";
      alias: "e/fileman/desktop/list/drop_between";
      images {
         image: "gadman_frame.png" COMP;
         image: "gadman_border.png" COMP;
      }
      parts {
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: -10 -10;
               rel2.offset: 9 9;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "overlay";
            mouse_events: 0;
            clip_to: "clipper";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "border";
                  offset: 4 4;
               }
               rel2 {
                  to: "border";
                  offset: -5 -5;
               }
               image.normal: "gadman_frame.png";
               fill.size.relative: 0 0;
               fill.size.offset: 24 24;
            }
         }
         part {
            name: "border";
            mouse_events: 0;
            clip_to: "clipper";
            description {
               state: "default" 0.0;
               rel1.offset: -5 -5;
               rel2.offset: 4 4;
               image {
                  normal: "gadman_border.png";
                  border: 10 10 10 10;
                  middle: 0;
               }
               fill.smooth: 0;
            }
         }
      }
      programs {
         program {
            name: "visible";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "clipper";
         }
         program {
            name: "hidden";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clipper";
         }
      }
   }
   group {
      name: "e/fileman/default/rubberband";
      images {
         image: "gadman_frame.png" COMP;
         image: "gadman_border.png" COMP;
      }
      parts {
         part {
            name: "overlay";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "border";
                  offset: 4 4;
               }
               rel2 {
                  to: "border";
                  offset: -5 -5;
               }
               image.normal: "gadman_frame.png";
               fill.size.relative: 0 0;
               fill.size.offset: 24 24;
            }
         }
         part {
            name: "border";
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               rel1.offset: -5 -5;
               rel2.offset: 4 4;
               image {
                  normal: "gadman_border.png";
                  border: 10 10 10 10;
                  middle: 0;
               }
               fill.smooth: 0;
            }
         }
      }
   }
   group {
      name: "e/fileman/default/overlay";
      alias: "e/fileman/desktop/overlay";
      images {
         image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
         image: "gadman_frame.png" COMP;
         image: "gadman_border.png" COMP;
      }
      parts {
         part {
            name: "busy_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "active" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "overlay";
            mouse_events: 0;
            clip_to: "busy_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to: "border";
                  offset: 4 4;
               }
               rel2 {
                  to: "border";
                  offset: -5 -5;
               }
               image.normal: "gadman_frame.png";
               fill.size.relative: 0 0;
               fill.size.offset: 24 24;
            }
         }
         part {
            name: "border";
            mouse_events: 0;
            clip_to: "busy_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "e.text.busy_label";
                  to_y: "busy";
                  offset: -20 -20;
               }
               rel2 {
                  to: "e.text.busy_label";
                  offset: 19 9;
               }
               image {
                  normal: "gadman_border.png";
                  border: 10 10 10 10;
                  middle: 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "busy";
            clip_to: "busy_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 32 32;
               aspect: 1.0 1.0;
               align: 0.5 0.5;
               aspect_preference: BOTH;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 8 8;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -9 -9;
               }
               image {
                  normal: "busy-9.png";
                  tween: "busy-1.png";
                  tween: "busy-2.png";
                  tween: "busy-3.png";
                  tween: "busy-4.png";
                  tween: "busy-5.png";
                  tween: "busy-6.png";
                  tween: "busy-7.png";
                  tween: "busy-8.png";
               }
            }
         }
         part {
            name: "e.text.busy_label";
            type: TEXT;
            effect: SOFT_SHADOW;
            clip_to: "busy_clip";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               rel1 {
                  to: "busy";
                  relative: 0.0 1.0;
                  offset: 0 4;
               }
               rel2 {
                  to: "busy";
                  relative: 1.0 1.0;
                  offset: -1 4;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.0;
                  text_class: "fileman_notice";
               }
            }
         }
         part {
            name: "typebuf_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "active" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.text.typebuf_label";
            type: TEXT;
            effect: SOFT_SHADOW;
            clip_to: "typebuf_clip";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -5 -5;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 0 0;
                  align: 0.5 0.5;
                  elipsis: 1.0;
                  text_class: "fileman_typebuf";
               }
            }
         }
      }
      programs {
         program {
            name: "go1";
            signal: "e,state,busy,start";
            source: "e";
            action: STATE_SET "active" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "busy_clip";
         }
         program {
            name: "go2";
            signal: "e,state,busy,start";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "busy";
            after: "go2";
         }
         program {
            name: "stop1";
            signal: "e,state,busy,stop";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "busy_clip";
            after: "stop2";
         }
         program {
            name: "stop2";
            action: ACTION_STOP;
            target: "go2";
         }
         program {
            name: "gob1";
            signal: "e,state,typebuf,start";
            source: "e";
            action: STATE_SET "active" 0.0;
            transition: SINUSOIDAL 0.25;
            target: "typebuf_clip";
         }
         program {
            name: "stopb1";
            signal: "e,state,typebuf,stop";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "typebuf_clip";
         }
      }
   }

#if 0
   group {
      name: "e/fileman/default/icon/variable";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "label2";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               color: 0 0 0 255;
               text {
                  font: "Sans";
                  text_source: "e.text.label";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image.normal: "pager_base2.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0 0.0;
                  offset: -3 -1;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1.to: "icon0";
               rel2.to: "icon0";
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1.to: "icon";
               rel2.to: "icon";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -2;
               }
               visible: 0;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 16 16;
               rel1 {
                  relative: 0.75 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 24 24;
               rel1.relative: 0.75 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_copy.png";
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_ask.png";
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_move.png";
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.2;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
#endif
   group {
      name: "e/fileman/default/icon/fixed";
      alias: "e/fileman/default/icon/variable";

      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      styles {
        style {
            name: "fileman_icon_name";
            base: "font=Sans font_size=10 align=center text_class=fileman_icon align=center color=#fff wrap=mixed ellipsis=1.0";
        }
        style {
            name: "fileman_icon_name_full";
            base: "font=Sans font_size=10 text_class=fileman_icon align=center color=#fff wrap=mixed style=soft_shadow shadow_color=#0002";
        }
      }

      parts {
         part {
            name: "label2";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               color: 0 0 0 255;
               rel1 {
                  to_y: "icon0";
                  relative: 0.0 1.0;
                  offset: 3 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -1;
               }
               text {
                  text_source: "e.text.label";
                  style: "fileman_icon_name";
	          align: 0.5 0.0;
                  min: 0 1;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to_x: "e.text.label";
               rel1.offset: -2 0;
               rel2.to: "e.text.label";
               rel2.offset: 3 6;

               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image.normal: "pager_base2.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.5 1.0;
               aspect_preference: BOTH;
               visible: 0;
               /* color: 200 0 0 100; */
               rel1 {
                  relative: 0.0 0.0;
                  offset: 5 5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -6 -40;
               }
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1.to: "icon0";
               rel2.to: "icon0";
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1.to: "icon";
               rel2.to: "icon";
            }
         }
         part {
            name: "e.text.label";
            type: TEXTBLOCK;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               visible: 0;
               rel1 {
                  to_y: "icon0";
                  relative: 0.0 1.0;
                  offset: 3 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -1;
               }

               text {
                  style: "fileman_icon_name_full";
                  min: 0 1;
                  max: 0 1;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1.offset: 8 8;
               rel2.offset: -9 -9;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 16 16;
               rel1 {
                  relative: 0.75 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 24 24;
               rel1.relative: 0.75 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_copy.png";
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_ask.png";
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_move.png";
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.2;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
#if 0
   group {
      name: "e/fileman/desktop/icon/variable";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image.normal: "pager_base2.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 2;
               }
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0 0.0;
                  offset: -3 -1;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1.to: "icon0";
               rel2.to: "icon0";
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1.to: "icon";
               rel2.to: "icon";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -2;
               }
               color: 224 224 224 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "desktop_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 224 224 224 255;
               color3: 0 0 0 64;
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 16 16;
               rel1 {
                  relative: 0.75 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 24 24;
               rel1.relative: 0.75 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_copy.png";
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_ask.png";
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_move.png";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.2;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
#endif
   group {
      name: "e/fileman/desktop/icon/fixed";
      alias: "e/fileman/desktop/icon/variable";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      styles {
        style {
            name: "fileman_desktop_icon_name";
            base: "font=Sans:style=Bold font_size=10 text_class=desktop_icon align=center color=#fff wrap=mixed ellipsis=1.0 style=soft_shadow shadow_color=#0002";
        }
        style {
            name: "fileman_desktop_icon_name_full";
            base: "font=Sans:style=Bold font_size=10 text_class=desktop_icon align=center color=#fff wrap=mixed style=soft_shadow shadow_color=#0002";
        }
      }      
      parts {
         part {
            name: "label2";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
	       color: 224 224 224 255;
               color3: 0 0 0 64;
               rel1 {
                  to_y: "icon0";
                  relative: 0.0 1.0;
                  offset: 3 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -1;
               }
               text {
                  style: "fileman_desktop_icon_name";
	          text_source: "e.text.label";
	          align: 0.5 0.0;
                  min: 0 1;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to_x: "e.text.label";
               rel1.offset: -2 0;
               rel2.to: "e.text.label";
               rel2.offset: 3 6;

               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image.normal: "pager_base2.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.5 1.0;
               aspect_preference: BOTH;
               visible: 0;
               /* color: 200 0 0 100; */
               rel1 {
                  relative: 0.0 0.0;
                  offset: 5 5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -6 -40;
               }
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1.to: "icon0";
               rel2.to: "icon0";
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1.to: "icon";
               rel2.to: "icon";
            }
         }
         part {
            name: "e.text.label";
            type: TEXTBLOCK;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               fixed: 1 1;
               color: 224 224 224 255;
               color3: 0 0 0 64;
               visible: 0;
               rel1 {
                  to_y: "icon0";
                  relative: 0.0 1.0;
                  offset: 4 3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3 -1;
               }
               text {
                  style: "fileman_desktop_icon_name_full";
                  min: 0 1;
                  max: 0 1;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 0 0 0 0;
               rel1.offset: 8 8;
               rel2.offset: -9 -9;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 16 16;
               rel1 {
                  relative: 0.75 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               min: 24 24;
               rel1.relative: 0.75 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_copy.png";
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_ask.png";
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_dnd_move.png";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.2;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
   /* e/fileman/default/list/* is used in file selectors eg; Wallpaper dialog */
   group {
      name: "e/fileman/default/list/variable";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_1.png" COMP;
         image: "ilist_item_shadow.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_base";
               image {
                  normal: "ilist_1.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image {
                  normal: "e17_fileman_thumb_bg.png";
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1 {
                  to: "icon0";
               }
               rel2 {
                  to: "icon0";
               }
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1 {
                  to: "icon";
               }
               rel2 {
                  to: "icon";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "icon0";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.5 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.75 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_copy.png";
               }
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_ask.png";
               }
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_move.png";
               }
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
   group {
      name: "e/fileman/default/list_odd/variable";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_2.png" COMP;
         image: "ilist_item_shadow.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_odd_base";
               image {
                  normal: "ilist_2.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image {
                  normal: "e17_fileman_thumb_bg.png";
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1 {
                  to: "icon0";
               }
               rel2 {
                  to: "icon0";
               }
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1 {
                  to: "icon";
               }
               rel2 {
                  to: "icon";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "icon0";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item_odd";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.5 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.75 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_copy.png";
               }
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_ask.png";
               }
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_move.png";
               }
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
   group {
      name: "e/fileman/default/list/fixed";
      alias: "e/fileman/desktop/list/fixed";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_1.png" COMP;
         image: "ilist_item_shadow.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_base";
               image {
                  normal: "ilist_1.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image {
                  normal: "e17_fileman_thumb_bg.png";
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1 {
                  to: "icon0";
               }
               rel2 {
                  to: "icon0";
               }
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1 {
                  to: "icon";
               }
               rel2 {
                  to: "icon";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "icon0";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.5 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.75 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_copy.png";
               }
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_ask.png";
               }
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_move.png";
               }
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }
   group {
      name: "e/fileman/default/list_odd/fixed";
      alias: "e/fileman/desktop/list_odd/fixed";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_2.png" COMP;
         image: "ilist_item_shadow.png" COMP;
         image: "e17_mini_button_shadow2.png" COMP;
         image: "e17_fileman_thumb_bg.png" COMP;
         image: "icon_efm_dnd_copy.png" COMP;
         image: "icon_efm_dnd_ask.png" COMP;
         image: "icon_efm_dnd_move.png" COMP;
         image: "icon_efm_vol_unmounted.png" COMP;
         image: "icon_efm_vol_mounted.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_odd_base";
               image {
                  normal: "ilist_2.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: 2 2;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "e.swallow.icon";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.icon";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box_bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  relative: 0.0 0.0;
                  offset: 1 1;
               }
               rel2 {
                  to: "icon_box";
                  relative: 1.0 1.0;
                  offset: -2 -2;
               }
               image {
                  normal: "e17_fileman_thumb_bg.png";
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0 0;
                     offset: 32 32;
                  }
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon0";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               visible: 0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "icon";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               visible: 0;
               rel1 {
                  to: "icon0";
               }
               rel2 {
                  to: "icon0";
               }
               color: 0 0 0 0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               max: 0 0;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -4   -4;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 3    3;
               }
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "icon0";
                  relative: 0.0  0.0;
                  offset: -2   -2;
               }
               rel2 {
                  to: "icon0";
                  relative: 1.0  1.0;
                  offset: 1    1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               // fixed: 1 1;
               rel1 {
                  to: "icon";
               }
               rel2 {
                  to: "icon";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "icon0";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item_odd";
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "vol_state";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.5 0.0;
                  to: "icon";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "icon";
               }
            }
            description {
               state: "unmounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_unmounted.png";
            }
            description {
               state: "mounted" 0.0;
               inherit: "visible" 0.0;
               image.normal: "icon_efm_vol_mounted.png";
            }
         }
         part {
            name: "dnd_action";
            type: IMAGE;
            mouse_events: 0;
            repeat_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 1.0 1.0;
               rel1 {
                  relative: 0.75 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "copy" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_copy.png";
               }
            }
            description {
               state: "ask" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_ask.png";
               }
            }
            description {
               state: "move" 0.0;
               inherit: "visible" 0.0;
               image {
                  normal: "icon_efm_dnd_move.png";
               }
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
         program {
            name: "ask";
            signal: "e,state,ask";
            source: "e";
            action: STATE_SET "ask" 0.0;
            target: "dnd_action";
         }
         program {
            name: "move";
            signal: "e,state,move";
            source: "e";
            action: STATE_SET "move" 0.0;
            target: "dnd_action";
         }
         program {
            name: "copy";
            signal: "e,state,copy";
            source: "e";
            action: STATE_SET "copy" 0.0;
            target: "dnd_action";
         }
         program {
            name: "vol_off";
            signal: "e,state,volume,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_unmounted";
            signal: "e,state,volume,unmounted";
            source: "e";
            action: STATE_SET "unmounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "vol_mounted";
            signal: "e,state,volume,mounted";
            source: "e";
            action: STATE_SET "mounted" 0.0;
            target: "vol_state";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen-";
            signal: "e,action,thumb,gen,alpha";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "icon_box_bg";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: SINUSOIDAL 0.3;
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** SYSTEM ***/

   group {
      name: "e/sys/logout";
      alias: "e/sys/halt";
      alias: "e/sys/reboot";
      alias: "e/sys/suspend";
      alias: "e/sys/hibernate";
      data.item: "borderless" "1";
      // data.item: "shaped" "1";
      images {
         image: "vgrad_dark.png" COMP;
         image: "shelf_alt_over.png" COMP;
         image: "logo_white_128.png" COMP;
         image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
      }
      styles {
         style {
            name: "sys_style";
            base: "font=Sans:style=Bold font_size=12 text_class=tb_plain align=center color=#fff style=soft_shadow shadow_color=#0000001f wrap=word";
            tag: "br" "\n";
            tag: "hilight" "+ font=Sans:style=Bold text_class=tb_light";
         }
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 250 250;
               image.normal: "vgrad_dark.png";
               fill {
                  size {
                     relative: 0 1.0;
                     offset: 36 0;
                  }
               }
            }
         }
         part {
            name: "over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "shelf_alt_over.png";
               image.border: 5 5 5 5;
               image.middle: 0;
               fill.smooth: 0;
            }
         }
         part {
            name: "busy";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               aspect: 1.0 1.0;
               align: 0.5 0.0;
               aspect_preference: BOTH;
               rel1 {
                  to_y: "logo";
                  relative: 0.0 1.0;
                  offset: 0 1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 1;
               }
               image {
                  normal: "busy-9.png";
                  tween: "busy-1.png";
                  tween: "busy-2.png";
                  tween: "busy-3.png";
                  tween: "busy-4.png";
                  tween: "busy-5.png";
                  tween: "busy-6.png";
                  tween: "busy-7.png";
                  tween: "busy-8.png";
               }
            }
         }
         part {
            name: "logo";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 128 128;
               max: 128 128;
               align: 0.5 0.0;
               image.normal: "logo_white_128.png";
            }
            description {
               state: "done" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.textblock.message";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: 8 8;
                  relative: 0.0 1.0;
                  to_y: "busy";
               }
               rel2.offset: -9 -9;
               text {
                  style: "sys_style";
                  min: 1 1;
               }
            }
         }
      }
      programs {
         program {
            name: "busy_anim";
            signal: "show";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3333;
            target: "busy";
            after: "busy_anim";
         }
      }
   }



/////////////////////////////////////////////////////////////////////////////
/*** MOVE/RESIZE BOX ***/

   group {
      name: "e/widgets/border/default/move";
      images {
         image: "base_bg.png" COMP;
         image: "icon_win_move.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "icon";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               min: 21 21;
               max: 21 21;
               fixed: 1 1;
               rel1.offset: 2 2;
               rel2.relative: 0.0 1.0;
               rel2.offset: 2 -3;
               image.normal: "icon_win_move.png";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to_x: "icon";
               rel1.offset: 2 4;
               rel1.relative: 1.0 0.0;
               rel2.offset: -5 -5;
               color_class: "move_text";
               text {
                  text: "X Y";
                  font: "Sans";
                  size: 10;
                  align: 0.5 0.5;
                  min: 1 1;
                  text_class: "move_text";
               }
            }
         }
      }
   }
   group {
      name: "e/widgets/border/default/resize";
      images {
         image: "base_bg.png" COMP;
         image: "icon_win_resize.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "icon";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               min: 21 21;
               max: 21 21;
               fixed: 1 1;
               rel1.offset: 2 2;
               rel2.relative: 0.0 1.0;
               rel2.offset: 2 -3;
               image.normal: "icon_win_resize.png";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.to_x: "icon";
               rel1.offset: 2 4;
               rel1.relative: 1.0 0.0;
               rel2.offset: -5 -5;
               color_class: "resize_text";
               text {
                  text: "WxH";
                  font: "Sans";
                  size: 10;
                  align: 0.5 0.5;
                  min: 1 1;
                  text_class: "resize_text";
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** FILE MANAGER TOOLBAR ***/

   group {
      name: "e/fileman/toolbar/default/base";
      images {
         image: "efm_toolbar_top.png" COMP;
         image: "efm_toolbar_bottom.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 99999 48;
               image.normal: "efm_toolbar_top.png";
               image.border: 4 4 4 4;
               fill.smooth: 0;
            }
            description {
               state: "bottom" 0.0;
               inherit: "default" 0.0;
               image.normal: "efm_toolbar_bottom.png";
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
            }
            description {
               state: "bottom" 0.0;
               inherit: "default" 0.0;
            }
         }
      }
      programs {
         program {
            name: "orient1";
            signal: "e,state,orientation,top";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "e.swallow.content";
         }
         program {
            name: "orient2";
            signal: "e,state,orientation,bottom";
            source: "e";
            action: STATE_SET "bottom" 0.0;
            target: "base";
            target: "e.swallow.content";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** TRANSITIONS ***/
/* The fake backgrounds used in the Transitions config dialog */

   images {
      image: "vgrad_dark.png" COMP;
      image: "vgrad_light.png" COMP;
      image: "logo_black_128.png" COMP;
      image: "logo_white_128.png" COMP;
   }
   group {
      name: "e/transpreview/0";
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "vgrad_dark.png";
               fill {
                  size {
                     relative: 0 1.0;
                     offset: 36 0;
                  }
               }
            }
         }
         part {
            name: "logo";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "logo_white_128.png";
               min: 32 32;
               max: 128 128;
            }
         }
      }
   }
   group {
      name: "e/transpreview/1";
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "vgrad_light.png";
               fill {
                  size {
                     relative: 0 1.0;
                     offset: 36 0;
                  }
               }
            }
         }
         part {
            name: "logo";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image.normal: "logo_black_128.png";
               min: 32 32;
               max: 128 128;
            }
         }
      }
   }
   /* e/transitions/* The look of transitions when swapping desks */
   group {
      name: "e/transitions/crossfade";
      parts {
         part {
            name: "e.swallow.bg.old";
            type: SWALLOW;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "e.swallow.bg.new";
            type: SWALLOW;
            clip_to: "bg_new_clip";
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "bg_new_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
            description {
               state: "done" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "go";
            signal: "e,action,start";
            source: "e";
            action: STATE_SET "done" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "bg_new_clip";
            after: "go2";
         }
         program {
            name: "go2";
            action: SIGNAL_EMIT "e,state,done" "";
         }
      }
   }
   group {
      name: "e/transitions/vswipe";
      images.image: "transition_vswipe.png" COMP;
      parts {
         part {
            name: "e.swallow.bg.old";
            type: SWALLOW;
            clip_to: "bg_prev_clip";
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "e.swallow.bg.new";
            type: SWALLOW;
            clip_to: "bg_new_clip";
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "bg_prev_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 0   -32;
               rel2.offset: -1    31;
            }
            description {
               state: "done" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    31;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -1   31;
               }
            }
         }
         part {
            name: "bg_new_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0    -32;
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1   -32;
               }
            }
            description {
               state: "done" 0.0;
               rel1.offset: 0   -32;
               rel2.offset: -1    31;
            }
         }
         part {
            name: "swipe_gap";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 0 64;
               max: 99999 64;
               rel1 {
                  to: "bg_prev_clip";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "bg_prev_clip";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
               image.normal: "transition_vswipe.png";
            }
         }
      }
      programs {
         program {
            name: "go";
            signal: "e,action,start";
            source: "e";
            action: STATE_SET "done" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "bg_new_clip";
            target: "bg_prev_clip";
            after: "go2";
         }
         program {
            name: "go2";
            action: SIGNAL_EMIT "e,state,done" "";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** WIDGETS ***/

   group {
      name: "e/widgets/check";
      images {
         image: "check_base.png" COMP;
         image: "check_on.png" COMP;
         image: "check_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 2    2;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 2   -3;
               }
               image.normal: "check_base.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "check_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "check_sel.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
               color_class: "check_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "check_button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "check_text_disabled";
            }
         }
         part {
            name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program {
            name: "on";
            /* if the checkmark is to be displayed */
            signal: "e,state,checked";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            /* check mark is not to be displayed */
            signal: "e,state,unchecked";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
         program {
            name: "click";
            signal: "mouse,up,1";
            source: "event";
            action: SIGNAL_EMIT "e,action,toggle" "";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
      }
   }
   group {
      name: "e/widgets/check_icon";
      images {
         image: "check_base.png" COMP;
         image: "check_on.png" COMP;
         image: "check_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 2    2;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 2   -3;
               }
               image.normal: "check_base.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "check_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "check_sel.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            clip_to: "icon_clip";
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
            }
            description {
               state: "label_visible" 0.0;
               inherit: "default" 0.0;
               min: 16 16;
               rel2 {
                  to_y: "base";
                  relative: 1.0  0.0;
                  offset: -2 -2;
               }
            }
         }
         part {
            name: "icon_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "label_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "label_visible" 0.0;
               visible: 1;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "label_clip";
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
               color_class: "check_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "check_button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "check_text_disabled";
            }
         }
         part {
            name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program {
            name: "on";
            /* if the checkmark is to be displayed */
            signal: "e,state,checked";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            /* check mark is not to be displayed */
            signal: "e,state,unchecked";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
         program {
            name: "click";
            signal: "mouse,up,1";
            source: "event";
            action: SIGNAL_EMIT "e,action,toggle" "";
         }
         program {
            name: "label_on";
            signal: "e,state,labeled";
            source: "e";
            action: STATE_SET "label_visible" 0.0;
            target: "e.swallow.icon";
            target: "label_clip";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
      }
   }
   /* for a radio menu item - same as check, but only one of a group of radio
    * menu item can be selected at any one time */
   group {
      name: "e/widgets/radio";
      images {
         image: "radio_base.png" COMP;
         image: "radio_on.png" COMP;
         image: "radio_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 2    2;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 2   -3;
               }
               image.normal: "radio_base.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "radio_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "radio_sel.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
               color_class: "radio_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "radio_button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "radio_text_disabled";
            }
         }
         part {
            name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program {
            name: "on";
            /* if the checkmark is to be displayed */
            signal: "e,state,on";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            /* check mark is not to be displayed */
            signal: "e,state,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
         program {
            name: "click";
            signal: "mouse,up,1";
            source: "event";
            action: SIGNAL_EMIT "e,action,toggle" "";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
      }
   }
   group {
      name: "e/widgets/radio_icon";
      images {
         image: "radio_base.png" COMP;
         image: "radio_on.png" COMP;
         image: "radio_sel.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               max: 16 16;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 2    2;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 2   -3;
               }
               image.normal: "radio_base.png";
            }
         }
         part {
            name: "mark";
            mouse_events: 0;
            clip_to: "mark_hold";
            description {
               state: "default" 0.0;
               rel1.to: "mark_hold";
               rel2.to: "mark_hold";
               image.normal: "radio_on.png";
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               image.normal: "radio_sel.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "mark_hold";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  to: "base";
                  offset: -5 -5;
               }
               rel2 {
                  to: "base";
                  offset: 4 4;
               }
            }
            description {
               state: "on" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1.offset: 0 0;
               rel2.offset: -1 -1;
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            clip_to: "icon_clip";
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.0;
                  offset: 2 2;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
            }
            description {
               state: "label_visible" 0.0;
               inherit: "default" 0.0;
               min: 16 16;
               rel2 {
                  to_y: "e.text.label";
                  relative: 1.0  0.0;
                  offset: -2 -2;
               }
            }
         }
         part {
            name: "icon_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "label_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "label_visible" 0.0;
               visible: 1;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            clip_to: "label_clip";
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "base";
                  relative: 1.0  0.5;
                  offset: 2 1;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2 -2;
               }
               color_class: "radio_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "radio_button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "radio_text_disabled";
            }
         }
         part {
            name: "event";
            type: RECT;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
      }
      programs {
         program {
            name: "on";
            /* if the radiomark is to be displayed */
            signal: "e,state,on";
            source: "e";
            action: STATE_SET "on" 0.0;
            transition: LINEAR 0.15;
            target: "mark_hold";
         }
         program {
            name: "off";
            /* radio mark is not to be displayed */
            signal: "e,state,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "mark_hold";
         }
         program {
            name: "click";
            signal: "mouse,up,1";
            source: "event";
            action: SIGNAL_EMIT "e,action,toggle" "";
         }
         program {
            name: "label_on";
            signal: "e,state,labeled";
            source: "e";
            action: STATE_SET "label_visible" 0.0;
            target: "e.swallow.icon";
            target: "label_clip";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "mark";
            target: "event";
            target: "e.text.label";
         }
      }
   }
   group {
      name: "e/widgets/button";
      images {
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
      }
      parts {
         part {
            name: "button_image";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 32 16;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3   3;
                  to: "button_image";
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 3  -4;
                  to: "button_image";
               }
            }
            description {
               state: "combo" 0.0;
               inherit: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3  3;
                  to: "button_image";
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 3   -4;
                  to: "button_image";
               }
            }
            description {
               state: "icon" 0.0;
               inherit: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3  3;
                  to: "button_image";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 2    3;
                  to_x: "e.swallow.icon";
                  to_y: "button_image";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "button_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "button";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "button_text_disabled";
            }
            description {
               state: "icon" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "over3";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 7 7 9 9;
               }
               fill.smooth : 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "disabler";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,click" "";
         }
         program {
            name: "text_state";
            signal: "e,state,text";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "e.swallow.icon";
            target: "e.text.label";
         }
         program {
            name: "icon_state";
            signal: "e,state,icon";
            source: "e";
            action: STATE_SET "icon" 0.0;
            target: "e.swallow.icon";
            target: "e.text.label";
         }
         program {
            name: "combo_state";
            signal: "e,state,combo";
            source: "e";
            action: STATE_SET "combo" 0.0;
            target: "e.swallow.icon";
            target: "e.text.label";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "over1";
            target: "e.text.label";
            target: "disabler";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over1";
            target: "e.text.label";
            target: "disabler";
         }
      }
   }
   /* e/widgets/scrollframe is used in the Wallpaper selector dialog */
   group {
      name: "e/widgets/scrollframe";
      images {
         image: "inset_sunk.png" COMP;
         image: "arrow_left.png" COMP;
         image: "arrow_right.png" COMP;
         image: "arrow_up.png" COMP;
         image: "arrow_down.png" COMP;
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerh.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {
         part {
            name: "bg";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
               color: 255 255 255 255;
               color_class: "scrollframe_base";
            }
         }
         part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  0.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
                  to_y: "sb_hbar";
               }
            }
         }
         /*
         part { name: "tst";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.relative: 1.0 0.2;
               color: 0 0 255 128;
            }
         }
         */
         part {
            name: "conf_over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.0;
               rel1 {
                  to: "bg";
                  relative: 1.0 0.0;
                  offset: -2 1;
               }
               rel2 {
                  to: "bg";
                  relative: 1.0 0.0;
                  offset: -2 -1;
                  to_y: "sb_hbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               max: 0 99999;
               rel1 {
                  to: "bg";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  to: "bg";
                  relative: 1.0 0.0;
                  offset: -1 -1;
                  to_y: "sb_hbar";
               }
            }
         }
         part {
            name: "sb_vbar_base";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -2;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1    1;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "sb_vbar_runner";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "sb_vbar_base";
               rel1.offset: 1 0;
               rel2.to: "sb_vbar_base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_vbar_p1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.vbar";
               }
            }
         }
         part {
            name: "sb_vbar_p2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.vbar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.vbar";
            clip_to: "sb_vbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_vbar_over1";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_over2";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a1_arrow";
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a1";
               rel2.to: "sb_vbar_a1";
               image.normal: "arrow_up.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 -1;
               rel2.offset: -1 -2;
            }
         }
         part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 1.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a2";
               rel2.to: "sb_vbar_a2";
               image.normal: "arrow_down.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
         part {
            name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 1.0;
               rel1 {
                  to: "bg";
                  relative: 0.0 1.0;
                  offset: 1 -2;
               }
               rel2 {
                  to: "bg";
                  relative: 0.0 1.0;
                  offset: -1 -2;
                  to_x: "sb_vbar";
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               rel1 {
                  to: "bg";
                  relative: 0.0  1.0;
                  offset: 0    -1;
               }
               rel2 {
                  to: "bg";
                  relative: 0.0  1.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part {
            name: "sb_hbar_base";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -2   0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 1   -1;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "sb_hbar_runner";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 99999 2;
               rel1.to: "sb_hbar_base";
               rel1.offset: 0 1;
               rel2.to: "sb_hbar_base";
               image {
                  normal: "sb_runnerh.png";
                  border: 4 4 0 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_hbar_p1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "sb_hbar_a1";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "e.dragable.hbar";
               }
            }
         }
         part {
            name: "sb_hbar_p2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "e.dragable.hbar";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to: "sb_hbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.hbar";
            clip_to: "sb_hbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_hbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_hbar_over1";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_over2";
            clip_to: "sb_hbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.hbar";
               rel2.to: "e.dragable.hbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_hbar_a1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 0.0  1.0;
                  offset: 0   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a1_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a1";
               rel2.to: "sb_hbar_a1";
               image.normal: "arrow_left.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 0;
               rel2.offset: -2 -1;
            }
         }
         part {
            name: "sb_hbar_a2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 1.0  0.0;
                  offset: -1    0;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 1.0  1.0;
                  offset: -1   -1;
               }
            }
         }
         part {
            name: "sb_hbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_hbar_a2";
               rel2.to: "sb_hbar_a2";
               image.normal: "arrow_right.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 1 0;
               rel2.offset: 0 -1;
            }
         }
      }
      programs {
         program {
            name: "sb_vbar_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_hbar";
         }
         program {
            name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_hbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: DRAG_VAL_STEP -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a1_arrow";
         }
         program {
            name: "sb_hbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: DRAG_VAL_STEP 1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a2_arrow";
         }
         program {
            name: "sb_hbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p2";
            action: DRAG_VAL_PAGE  1.0 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.hbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.hbar";
         }
         program {
            name: "sb_hbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.hbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.hbar";
         }
      }
   }
   /* e/widgets/ilist is used in the Module Config Dialog for the module list */
   group {
      name: "e/widgets/ilist";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_1.png" COMP;
         image: "ilist_item_shadow.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_base";
               image {
                  normal: "ilist_1.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "e.swallow.icon";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "e.swallow.end";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -5    4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5   -5;
               }
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
      }
   }
   group {
      name: "e/widgets/ilist_odd";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_2.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_odd_base";
               image {
                  normal: "ilist_2.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "e.swallow.icon";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item_odd";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color_class: "ilist_item_selected";
            }
         }
         part {
            name: "e.swallow.end";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -5    4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5   -5;
               }
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
      }
   }
   group {
      name: "e/widgets/ilist_header";
      data.item: "stacking" "above";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_header_1.png" COMP;
         image: "ilist_item_shadow.png" COMP;
      }
      parts {
         part {
            name: "base_sh";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               // aspect: 6.4 6.4;
               // aspect_preference: HORIZONTAL;
               align: 0.0 0.0;
               min: 0 10;
               rel1 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -1 0;
               }
               image {
                  normal: "ilist_item_shadow.png";
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_header_base";
               image {
                  normal: "ilist_header_1.png";
                  border: 2 2 2 2;
               }
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "e.swallow.icon";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item_header";
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
      }
   }
   group {
      name: "e/widgets/ilist_header_odd";
      data.item: "stacking" "below";
      data.item: "selectraise" "on";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "ilist_header_2.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "ilist_item_header_odd_base";
               image {
                  normal: "ilist_header_2.png";
                  border: 2 2 2 2;
               }
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -5 -5;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               image {
                  normal: "bt_sm_base1.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: -2 -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
               }
            }
         }
         part {
            name: "e.swallow.icon";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 16 16;
               rel1 {
                  to_x: "e.swallow.icon";
                  relative: 1.0  0.0;
                  offset: 4 4;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -5 -5;
               }
               color_class: "ilist_item_header_odd";
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "ilist_item";
               }
            }
         }
         part {
            name: "fg1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.relative: 1.0 0.5;
               rel2.to: "bg";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "fg2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "fg1";
            target: "fg2";
            target: "e.text.label";
            transition: LINEAR 0.1;
         }
      }
   }
   group {
      name: "e/widgets/ilist/toggle_end";
      images {
         image: "icon_active.png" COMP;
      }
      parts {
         part {
            name: "icon";
            type: IMAGE;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 4    4;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 4   -5;
               }
               image.normal: "icon_active.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
         }
      }
      programs {
         program {
            signal: "e,state,checked";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon";
            transition: LINEAR 0.1;
         }
         program {
            signal: "e,state,unchecked";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon";
            transition: LINEAR 0.1;
         }
      }
   }
   /* e/widgets/entry is used in the Wallpaper Picture file selector */
   group {
      name: "e/widgets/entry";
      // min: 12 12;
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2  -2;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.swallow.text";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: 2 2;
                  to: "base";
               }
               rel2 {
                  offset: -3 -3;
                  to: "base";
               }
            }
         }
         part {
            name: "overlay";
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "overlay";
            target: "base";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "overlay";
            target: "base";
         }
      }
   }
   group {
      name: "e/widgets/entry/text";
      parts {
         part {
            name: "e.text.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               color_class: "entry_text";
               text {
                  text: "";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.0;
                  text_class: "entry";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "entry_text_disabled";
            }
         }
      }
      programs {
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "e.text.text";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "e.text.text";
         }
      }
   }
   group {
      name: "e/widgets/entry/cursor";
      min: 1 0;
      parts {
         part {
            name: "cursor";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.offset: 1 0;
               rel2.offset: 0 -1;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 255;
            }
         }
      }
      programs {
         program {
            name: "on_cursor_show";
            signal: "e,action,show,cursor";
            source: "e";
            action: ACTION_STOP;
            target: "cursor_show";
            target: "cursor_hide";
            target: "cursor_show_timer";
            target: "cursor_hide_timer";
            after: "cursor_show";
         }
         program {
            name: "cursor_show";
            action: STATE_SET "visible" 0.0;
            target: "cursor";
            after: "cursor_show_timer";
         }
         program {
            name: "cursor_hide";
            action: STATE_SET "default" 0.0;
            target: "cursor";
            transition: SINUSOIDAL 0.2;
            after: "cursor_hide_timer";
         }
         program {
            name: "cursor_show_timer";
            in: 0.55 0.0;
            after: "cursor_hide";
         }
         program {
            name: "cursor_hide_timer";
            in: 0.2 0.0;
            after: "cursor_show";
         }
      }
   }
   group {
      name: "e/widgets/entry/selection";
      data.item: "on_foreground" "1";
      parts {
         part {
            name: "selection";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.offset: 2 0;
               rel2.offset: 1 -1;
               color: 164 164 164 100;
            }
         }
      }
   }
   /* e/widgets/preview is used in the Theme Selector to preview themes */
   group {
      name: "e/widgets/preview";
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.swallow.content";
               rel2.to: "e.swallow.content";
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clip";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
         part {
            name: "border";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
      }
   }
   /* e/widgets/deskpreview is used in the Wallpaper
      selector dialog to preview wallpapers.         */
   group {
      name: "e/widgets/deskpreview/desk";
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.swallow.content";
               rel2.to: "e.swallow.content";
            }
         }
         part {
            name: "e.swallow.content";
            clip_to: "clip";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel2.offset: -2 -2;
            }
         }
         part {
            name: "border";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "e.event.menu";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
   }
   /* color_well & gradpreview are used to display the color
      and the gradient in the Wallpaper Gradient config dialog. */
   group {
      name: "e/widgets/color_well";
      alias: "e/widgets/gradpreview";
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.swallow.content";
               rel2.to: "e.swallow.content";
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "content_clip";
            description {
               state: "default" 0.0;
               rel1.offset: 4  4;
               rel2.offset: -5  -5;
            }
         }
         part {
            name: "border";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.content";
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.content";
                  offset: 0 0;
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
      }
      programs {
         program {
            name: "send_click";
            signal: "mouse,clicked,1";
            source: "border";
            action: SIGNAL_EMIT "e,action,click" "";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "content_clip";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "content_clip";
         }
      }
   }
   /* Used in the color selector widget in Wallpaper Gradient dialog */
   group {
      name: "e/widgets/spectrum";
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.swallow.content";
               rel2.to: "e.swallow.content";
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "content_clip";
            description {
               state: "default" 0.0;
               rel1.offset: 4  4;
               rel2.offset: -5  -5;
            }
         }
         part {
            name: "border";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.content";
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.content";
                  offset: 0 0;
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "e.dragable.cursor";
            type: RECT;
            dragable {
               confine: "e.swallow.content";
               x: 1 1 0;
               y: 1 1 0;
            }
            description {
               state: "default" 0.0;
               min: 1 1;
               max: 1 1;
               fixed: 1 1;
               visible: 0;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.5 0.5;
                  offset: 0 0;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 0.5 0.5;
                  offset: 0 0;
               }
            }
         }
         part {
            name: "cursor_x";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "e.dragable.cursor";
                  to_y: "e.swallow.content";
               }
               rel2 {
                  to_x: "e.dragable.cursor";
                  to_y: "e.swallow.content";
               }
               color: 255 255 255 150;
            }
         }
         part {
            name: "cursor_y";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  to_x: "e.swallow.content";
                  to_y: "e.dragable.cursor";
               }
               rel2 {
                  to_x: "e.swallow.content";
                  to_y: "e.dragable.cursor";
               }
               color: 255 255 255 150;
            }
         }
      }
   }
   /* Used to display RGB/HSV values via sliders
      in Wallpaper Gradient Dialog               */
   group {
      name: "e/widgets/cslider";
      images.image: "inset_sunk.png" COMP;
      parts {
         part {
            name: "content_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.swallow.content";
               rel2.to: "e.swallow.content";
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "content_clip";
            description {
               state: "default" 0.0;
               min: 50 20;
               rel1.offset: 4    4;
               rel2.offset: -5    -5;
            }
            description {
               state: "vertical" 0.0;
               inherit: "default" 0.0;
               min: 20 50;
            }
         }
         part {
            name: "border";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.swallow.content";
                  offset: -1 -1;
               }
               rel2 {
                  to: "e.swallow.content";
                  offset: 0 0;
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "e.dragable.cursor";
            type: RECT;
            clip_to: "content_clip";
            dragable {
               confine: "e.swallow.content";
               x: 1 1 0;
               y: -1 1 0;
            }
            description {
               state: "default" 0.0;
               min: 1 24;
               max: 1 9999;
               fixed: 1 1;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.5 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 0.5 1.0;
                  offset: 0 -1;
               }
               color: 255 255 255 150;
            }
            description {
               state: "vertical" 0.0;
               min: 24 1;
               max: 9999 1;
               fixed: 1 1;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0 0.5 ;
                  offset: 0 0;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0 0.5;
                  offset: -1 0;
               }
               color: 255 255 255 150;
            }
         }
      }
      programs {
         program {
            name: "go_vertical";
            signal: "e,state,direction,v";
            source: "e";
            action: STATE_SET "vertical" 0.0;
            target: "e.dragable.cursor";
            target: "e.swallow.content";
         }
      }
   }
   /* e/widgets/slider* is used in the Virtual Desktops Config dialog */
   group {
      name: "e/widgets/slider_vertical";
      images {
         image: "slider.png" COMP;
         image: "slider_clicked.png" COMP;
         image: "sb_runnerv.png" COMP;
         image: "inset_sunk.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               min: 22 0;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  to_y: "label";
                  relative: 1.0  0.0;
                  offset: -3   -1;
               }
            }
         }
         part {
            name: "runner";
            mouse_events: 0;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "base";
               rel2.to: "base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "label_base";
            clip_to: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1.to: "label";
               rel1.offset: 1 1;
               rel2.to: "label";
               rel2.offset: -2 -2;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "label";
            mouse_events: 0;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "active" 0.0;
               rel1 {
                  to: "e.text.label";
                  offset: -4  -2;
               }
               rel2 {
                  to: "e.text.label";
                  offset: 3  1;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "active" 0.0;
               align: 0.5 1.0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 7    -8;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -8  -8;
               }
               color_class: "slider_text";
               text {
                  text: "0.0";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "slider";
               }
            }
         }
         part {
            name: "sld_p1";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.slider";
               }
            }
         }
         part {
            name: "sld_p2";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.slider";
               }
            }
         }
         part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: 0 5;
               }
               rel2 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: -1 -6;
               }
            }
         }
         part {
            name: "e.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: -1 1 0;
               confine: "base";
            }
            description {
               state: "default" 0.0;
               min: 11 11;
               fixed: 1 1;
               rel1 {
                  relative: 0.5  0.5;
                  offset: -1    0;
                  to: "base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: -1    -1;
                  to: "base";
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "button";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 22 22;
               fixed: 1 1;
               rel1.to: "e.dragable.slider";
               rel2.to: "e.dragable.slider";
               image.normal: "slider.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "slider_clicked.png";
            }
         }
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "sld_p1_down";
            signal: "mouse,down,1";
            source: "sld_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.slider";
         }
         program {
            name: "sld_p2_down";
            signal: "mouse,down,1";
            source: "sld_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.slider";
         }
         program {
            name: "button_down";
            signal: "mouse,down,1";
            source: "e.dragable.slider";
            action: STATE_SET "clicked" 0.0;
            target: "button";
         }
         program {
            name: "button_up";
            signal: "mouse,up,1";
            source: "e.dragable.slider";
            action: STATE_SET "default" 0.0;
            target: "button";
         }
         program {
            name: "show_label";
            signal: "e,action,show,label";
            source: "e";
            action: STATE_SET "active" 0.0;
            target: "base";
            target: "label";
            target: "label_base";
            target: "e.text.label";
         }
         program {
            name: "hide_label";
            signal: "e,action,hide,label";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "label";
            target: "label_base";
            target: "e.text.label";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "clip";
            target: "event";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clip";
            target: "event";
         }
      }
   }
   group {
      name: "e/widgets/slider_horizontal";
      images {
         image: "slider.png" COMP;
         image: "slider_clicked.png" COMP;
         image: "sb_runnerh.png" COMP;
         image: "inset_sunk.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               min: 0 22;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  to_x: "label";
                  relative: 0.0  1.0;
                  offset: -1   -3;
               }
            }
         }
         part {
            name: "runner";
            mouse_events: 0;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               max: 99999 3;
               rel1.to: "base";
               rel2.to: "base";
               image {
                  normal: "sb_runnerh.png";
                  border: 4 4 0 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "label_base";
            clip_to: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
               visible: 0;
               rel1.to: "label";
               rel1.offset: 1 1;
               rel2.to: "label";
               rel2.offset: -2 -2;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "label";
            mouse_events: 0;
            clip_to: "clip";
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "active" 0.0;
               min: 20 0;
               rel1 {
                  to: "e.text.label";
                  offset: -4 -2;
               }
               rel2 {
                  to: "e.text.label";
                  offset: 2   1;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
            }
            description {
               state: "active" 0.0;
               align: 1.0 0.5;
               fixed: 1 0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -8   7;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -8 -8;
               }
               color_class: "slider_text";
               text {
                  text: "0.0";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "slider";
               }
            }
         }
         part {
            name: "sld_p1";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel2 {
                  relative: 0.0 1.0;
                  to: "e.dragable.slider";
               }
            }
         }
         part {
            name: "sld_p2";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "e.dragable.slider";
               }
            }
         }
         part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: 5 0;
               }
               rel2 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: -6 -1;
               }
            }
         }
         part {
            name: "e.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "base";
            }
            description {
               state: "default" 0.0;
               min: 11 11;
               fixed: 1 1;
               rel1 {
                  relative: 0.5  0.5;
                  to: "base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "base";
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "slider";
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            description {
               state: "default" 0.0;
               min: 22 22;
               fixed: 1 1;
               rel1.to: "e.dragable.slider";
               rel2.to: "e.dragable.slider";
               image.normal: "slider.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "slider_clicked.png";
            }
         }
         part {
            name: "clip";
            type: RECT;
            description {
               state: "default" 0.0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "event";
            type: RECT;
            mouse_events: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "sld_p1_down";
            signal: "mouse,down,1";
            source: "sld_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "e.dragable.slider";
         }
         program {
            name: "sld_p2_down";
            signal: "mouse,down,1";
            source: "sld_p2";
            action: DRAG_VAL_PAGE  1.0 0.0;
            target: "e.dragable.slider";
         }
         program {
            name: "sld_down";
            signal: "mouse,down,1";
            source: "e.dragable.slider";
            action: STATE_SET "clicked" 0.0;
            target: "slider";
         }
         program {
            name: "sld_up";
            signal: "mouse,up,1";
            source: "e.dragable.slider";
            action: STATE_SET "default" 0.0;
            target: "slider";
         }
         program {
            name: "show_label";
            signal: "e,action,show,label";
            source: "e";
            action: STATE_SET "active" 0.0;
            target: "base";
            target: "label";
            target: "label_base";
            target: "e.text.label";
         }
         program {
            name: "hide_label";
            signal: "e,action,hide,label";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "base";
            target: "label";
            target: "label_base";
            target: "e.text.label";
         }
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "clip";
            target: "event";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clip";
            target: "event";
         }
      }
   }
   /* e/widgets/frame is used in the Config Dialog
      to outline the content                       */
   group {
      name: "e/widgets/frame";
      images {
         image: "frame_1.png" COMP;
         image: "frame_2.png" COMP;
         image: "dia_grad.png" COMP;
      }
      parts {
         part {
            name: "base0";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "frame_base";
               image.normal: "dia_grad.png";
               rel1.to: "over";
               rel2.to: "over";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "frame_2.png";
                  border: 5 5 32 26;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "e.text.label";
                  relative: 0.0 1.0;
                  offset: 8 2;
               }
               rel2.offset: -9 -9;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 6 6;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -7 6;
               }
               color: 0 0 0 64;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  max: 1 1;
                  align: 0.0 0.0;
                  text_class: "frame";
               }
            }
         }
         part {
            name: "over";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
               image {
                  normal: "frame_1.png";
                  border: 2 2 28 22;
                  middle: 0;
               }
               fill.smooth : 0;
            }
         }
      }
   }
   group {
      name: "e/widgets/label";
      parts {
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.offset: 2 2;
               rel2.offset: -3 -3;
               color_class: "label_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "label";
               }
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color_class: "label_text_disabled";
            }
         }
      }
      programs {
         program {
            name: "disable";
            signal: "e,state,disabled";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "e.text.label";
         }
         program {
            name: "enable";
            signal: "e,state,enabled";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "e.text.label";
         }
      }
   }
   /* e/widgets/fontpreview is used in the Font Config dialog */
   group {
      name: "e/widgets/fontpreview";
      parts {
         part {
            name: "e.fontpreview.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               color_class: "entry_text";
               rel1.offset: 6 6;
               rel2.offset: -7 -7;
               text {
                  text: "The quick brown fox jumped over YA MUM!";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "_e_font_preview";
               }
            }
         }
      }
   }
   /* e/widgets/textblock is used in the description
      of modules in Module Config dialog             */
   group {
      name: "e/widgets/textblock";
      styles {
         style {
            name: "textblock_style";
            base: "font=Sans font_size=10 align=left color=#000 style=shadow shadow_color=#ffffff80 wrap=word";
            tag: "title" "+ font=Sans:style=Bold font_size=12 style=soft_shadow color=#fff shadow_color=#00000021";
            tag: "hilight" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333333be glow_color=#0000005a";
            tag: "urgent" "+ font=Sans:style=Bold style=glow color=#fff glow2_color=#333 glow_color=#b01010";
            tag: "b" "+ font=Sans:style=Bold";
            tag: "br" "\n";
         }
      }
      parts {
         part {
            name: "e.textblock.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
               text {
                  style: "textblock_style";
                  min: 1 1;
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: DESKLOCK ***/

   group {
      name: "e/desklock/background";
      images {
         image: "vgrad_dark.png" COMP;
         image: "grill_dark_tiny_pattern.png" COMP;
      }
      parts {
         part {
            name: "background_image";
            description {
               state: "default" 0.0;
               image.normal: "vgrad_dark.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 1.0;
                     offset: 36 0;
                  }
               }
            }
         }
         part {
            name: "grill";
            description {
               state: "default" 0.0;
               image.normal: "grill_dark_tiny_pattern.png";
               fill {
                  size {
                     relative: 0 0;
                     offset: 144 144;
                  }
               }
            }
         }
         part {
            name: "e.swallow.login_box";
            type: SWALLOW;
            description {
               state: "default" 0.0;
            }
         }
      }
   }
   group {
      name: "e/desklock/login_box";
      images {
         image: "logo_white_128.png" COMP;
         image: "inset_sunk.png" COMP;
      }
      parts {
         part {
            name: "logo";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 64 64;
               max: 64 64;
               image.normal: "logo_white_128.png";
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            effect: SOFT_SHADOW;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 8;
                  to_y: "logo";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 8;
                  to_y: "logo";
               }
               color: 224 224 224 255;
               color3: 0 0 0 32;
               text {
                  text: "Enter Password";
                  font: "Sans:style=Bold";
                  size: 10;
                  align: 0.5 0.5;
                  min: 1 1;
                  text_class: "desklock_title";
               }
            }
         }
         part {
            name: "pulse_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "passwd_border";
               rel2.to: "passwd_border";
            }
            description {
               state: "pulse" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "error";
            type: RECT;
            mouse_events: 0;
            clip_to: "error_clip";
            description {
               state: "default" 0.0;
               rel1.to: "passwd_border";
               rel2.to: "passwd_border";
               color: 255 255 255 255;
            }
         }
         part {
            name: "error_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "pulse_clip";
            description {
               state: "default" 0.0;
               rel1.to: "passwd_border";
               rel2.to: "passwd_border";
               color: 255 255 255 255;
            }
            description {
               state: "invalid" 0.0;
               inherit: "default" 0.0;
               color: 255 128 128 255;
               /*FIXME: Document how this works */
            }
         }
         part {
            name: "passwd_entry_clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "pulse_clip";
            description {
               state: "default" 0.0;
               visible: 1;
               rel1 {
                  offset: 6 3;
                  to: "passwd_border";
               }
               rel2 {
                  offset: -7 -4;
                  to: "passwd_border";
               }
            }
         }
         part {
            name: "e.text.password";
            type: TEXT;
            clip_to: "passwd_entry_clip";
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
                  to: "passwd_entry_clip";
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 0;
                  to: "passwd_entry_clip";
               }
               color: 0 0 0 255;
               text {
                  text: "****";
                  font: "Sans:style=Bold";
                  size: 16;
                  align: 0.0 0.5;
                  min: 1 1;
                  text_class: "desklock_passwd";
               }
            }
         }
         part {
            name: "cursor";
            type: RECT;
            mouse_events: 0;
            clip_to: "passwd_entry_clip";
            description {
               state: "default" 0.0;
               min: 1 16;
               max: 1 16;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 0.0;
                  offset: 0 -3;
                  to: "e.text.password";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: 1 1;
                  to: "e.text.password";
               }
               color: 0 0 0 255;
            }
         }
         part {
            name: "passwd_border";
            mouse_events: 0;
            clip_to: "error_clip";
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  offset: -80 2;
                  to_y: "e.text.title";
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 79 20;
                  to_y: "e.text.title";
               }
               image {
                  normal: "inset_sunk.png";
                  middle: 0;
                  border: 7 7 7 7;
               }
               fill.smooth: 0;
            }
            description {
               state: "checking" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
      }
      programs {
         program {
            name: "pulse.1";
            signal: "e,state,checking";
            source: "e.desklock";
            action: STATE_SET "pulse" 0.0;
            target: "pulse_clip";
            transition: SINUSOIDAL 0.5;
            after: "pulse.2";
         }
         program {
            name: "pulse.2";
            action: STATE_SET "default" 0.0;
            target: "pulse_clip";
            transition: SINUSOIDAL 0.5;
            after: "pulse.1";
         }
         program {
            name: "pulse.stop";
            signal: "e,state,invalid";
            source: "e.desklock";
            action: ACTION_STOP;
            target: "pulse.1";
            target: "pulse.2";
            after: "pulse.reset";
         }
         program {
            name: "pulse.reset";
            action: STATE_SET "default" 0.0;
            target: "pulse_clip";
            transition: SINUSOIDAL 0.5;
         }
         program {
            name: "go_invalid";
            signal: "e,state,invalid";
            source: "e.desklock";
            action: STATE_SET "invalid" 0.0;
            target: "error_clip";
            transition: DECELERATE 0.5;
         }
         program {
            name: "stop_invalid";
            action: STATE_SET "default" 0.0;
            target: "error_clip";
            transition: DECELERATE 1.5;
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** GADMAN ***/

   group {
      name: "e/gadman/popup";
      images.image: "base_bg.png" COMP;
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               image {
                  normal: "base_bg.png";
                  border: 2 2 2 2;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 3 3;
               rel2.offset: -4 -4;
            }
         }
      }
   }
   group {
      name: "e/gadman/full_bg";
      parts {
         part {
            name: "bg";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
            description {
               state: "visible" 0.0;
               color: 0 0 0 128;
            }
         }
         part {
            name: "custom_bg";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               color: 255 255 255 200;
            }
         }
         part {
            name: "e.swallow.bg";
            type: SWALLOW;
            clip_to: "custom_bg";
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "grabber";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "show";
            signal: "e,state,visibility,show";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.4;
            target: "bg";
         }
         program {
            name: "show_now";
            signal: "e,state,visibility,show,now";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.0;
            target: "bg";
         }
         program {
            name: "hide";
            signal: "e,state,visibility,hide";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.4;
            target: "bg";
            after: "hide_stop";
         }
         program {
            name: "hide_now";
            signal: "e,state,visibility,hide,now";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "bg";
            after: "hide_stop";
         }
         program {
            name: "show_custom";
            signal: "e,state,visibility,show,custom";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.4;
            target: "custom_bg";
         }
         program {
            name: "show_custom_now";
            signal: "e,state,visibility,show,custom,now";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.0;
            target: "custom_bg";
         }
         program {
            name: "hide_custom";
            signal: "e,state,visibility,hide,custom";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.4;
            target: "custom_bg";
            after: "hide_stop";
         }
         program {
            name: "hide_custom_now";
            signal: "e,state,visibility,hide,custom,now";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "custom_bg";
            after: "hide_stop";
         }
         program {
            name: "hide_stop";
            action: SIGNAL_EMIT "e,action,hide,stop" "";
         }
      }
   }
   group {
      name: "e/gadman/frame";
      images.image: "inset_raised.png" COMP;
      parts {
         part {
            name: "bg_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "overlay";
               rel2.to: "overlay";
               color: 255 255 255 255;
            }
            description {
               state: "plain" 0.0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "items_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "overlay";
                  offset: 4  4;
               }
               rel2 {
                  to: "overlay";
                  offset: -5  -5;
               }
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "items_clip";
            description {
               state: "default" 0.0;
               rel1.offset: 4  4;
               rel2.offset: -5  -5;
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
               color: 255 255 255 0;
            }
         }
         part {
            name: "overlay";
            mouse_events: 0;
            clip_to: "bg_clip";
            description {
               state: "default" 0.0;
               image {
                  normal: "inset_raised.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth: 0;
               color: 255 255 255 255;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            name: "inset";
            signal: "e,state,visibility,inset";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg_clip";
         }
         program {
            name: "plain";
            signal: "e,state,visibility,plain";
            source: "e";
            action: STATE_SET "plain" 0.0;
            target: "bg_clip";
         }
         program {
            name: "hide";
            signal: "e,state,visibility,hide";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            transition: ACCELERATE 0.4;
            target: "items_clip";
            target: "overlay";
            target: "e.swallow.content";
         }
         program {
            name: "hide_now";
            signal: "e,state,visibility,hide,now";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            transition: LINEAR 0.0;
            target: "items_clip";
            target: "overlay";
            target: "e.swallow.content";
         }
         program {
            name: "show";
            signal: "e,state,visibility,show";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.4;
            target: "items_clip";
            target: "overlay";
            target: "e.swallow.content";
         }
         program {
            name: "show_now";
            signal: "e,state,visibility,show,now";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "items_clip";
            target: "overlay";
            target: "e.swallow.content";
         }
      }
   }
   group {
      name: "e/gadman/control";
      images {
         image: "gadman_frame.png" COMP;
         image: "gadman_border.png" COMP;
         image: "gadman_top.png" COMP;
         image: "gadman_bottom.png" COMP;
         image: "gadman_left.png" COMP;
         image: "gadman_right.png" COMP;
      }
      parts {
         part {
            name: "hclip";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 1;
               rel1.offset: -85 -85;
               rel2.offset: 74 74;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible : 0;
            }
         }
         part {
            name: "vclip";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 1;
               rel1.offset: -85 -85;
               rel2.offset: 84 84;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible : 0;
            }
         }
         part {
            name: "overlay";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "border";
                  offset: 4 4;
               }
               rel2 {
                  to: "border";
                  offset: -5 -5;
               }
               image.normal: "gadman_frame.png";
               fill.size.relative: 0 0;
               fill.size.offset: 24 24;
            }
         }
         part {
            name: "left_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 12 24;
               rel1 {
                  relative: 0.0 0.5;
                  offset: 3 0;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: 3 -1;
               }
               image.normal: "gadman_left.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.5;
                  offset: -32 -12;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: -18 11;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.5;
                  offset: -24 -6;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: -10 5;
               }
            }
         }
         part {
            name: "left_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 12 24;
               rel1 {
                  relative: 0.0 0.5;
                  offset: 3 0;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: 3 -1;
               }
               image.normal: "gadman_left.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.5;
                  offset: -32 -12;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: -18 11;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.5;
                  offset: -24 -6;
               }
               rel2 {
                  relative: 0.0 0.5;
                  offset: -10 5;
               }
            }
         }
         part {
            name: "right_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 12 24;
               rel1 {
                  relative: 1.0 0.5;
                  offset: -3 0;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -3 -1;
               }
               image.normal: "gadman_right.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  offset: 32 -12;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: 18 11;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  offset: 24 -6;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: 10 5;
               }
            }
         }
         part {
            name: "right_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 12 24;
               rel1 {
                  relative: 1.0 0.5;
                  offset: -3 0;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -3 -1;
               }
               image.normal: "gadman_right.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  offset: 32 -12;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: 18 11;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 1.0 0.5;
                  offset: 24 -6;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: 10 5;
               }
            }
         }
         part {
            name: "top_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 24 12;
               rel1 {
                  relative: 0.5 0.0;
                  offset: 0 3;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: -1 3;
               }
               image.normal: "gadman_top.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 0.0;
                  offset: -12 -32;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: 11 -18;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 0.0;
                  offset: -6 -24;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: 5 -9;
               }
            }
         }
         part {
            name: "top_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 24 12;
               rel1 {
                  relative: 0.5 0.0;
                  offset: 0 3;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: -1 3;
               }
               image.normal: "gadman_top.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 0.0;
                  offset: -12 -32;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: 11 -18;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 0.0;
                  offset: -6 -24;
               }
               rel2 {
                  relative: 0.5 0.0;
                  offset: 5 -9;
               }
            }
         }
         part {
            name: "bottom_arrow1";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 24 12;
               rel1 {
                  relative: 0.5 1.0;
                  offset: 0 -3;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: -1 -3;
               }
               image.normal: "gadman_bottom.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  offset: -12 18;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 11 31;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  offset: -6 10;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 5 24;
               }
            }
         }
         part {
            name: "bottom_arrow2";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               max: 24 12;
               rel1 {
                  relative: 0.5 1.0;
                  offset: 0 -3;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: -1 -3;
               }
               image.normal: "gadman_bottom.png";
            }
            description {
               state: "1" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  offset: -12 18;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 11 31;
               }
            }
            description {
               state: "2" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.5 1.0;
                  offset: -6 10;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: 5 24;
               }
            }
         }
         part {
            name: "v1";
            mouse_events: 1;
            clip_to: "vclip";
            description {
               state: "default" 0.0;
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 9;
            }
         }
         part {
            name: "v2";
            mouse_events: 1;
            clip_to: "vclip";
            description {
               state: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -8;
            }
         }
         part {
            name: "h1";
            mouse_events: 1;
            clip_to: "hclip";
            description {
               state: "default" 0.0;
               rel2.relative: 0.0 1.0;
               rel2.offset: 9 -1;
            }
         }
         part {
            name: "h2";
            mouse_events: 1;
            clip_to: "hclip";
            description {
               state: "default" 0.0;
               rel1.relative: 1.0 0.0;
               rel1.offset: -8 0;
            }
         }
         part {
            name: "border";
            mouse_events: 1;
            repeat_events: 1;
            description {
               state: "default" 0.0;
               image {
                  normal: "gadman_border.png";
                  border: 10 10 10 10;
                  middle: 0;
               }
               fill.smooth: 0;
            }
         }
      }
      programs {
         program {
            name: "api_hsize_on";
            signal: "e,state,hsize,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "hclip";
         }
         program {
            name: "api_hsize_off";
            signal: "e,state,hsize,off";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "hclip";
         }
         program {
            name: "api_vsize_on";
            signal: "e,state,vsize,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "vclip";
         }
         program {
            name: "api_vsize_off";
            signal: "e,state,vsize,off";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "vclip";
         }
         /*
         program {
            name: "api_move_on";
            signal: "e,state,move,on";
            source: "e";
         }
         program {
            name: "api_move_off";
            signal: "e,state,move,off";
            source: "e";
         }
         program {
            name: "api_active";
            signal: "e,state,focused";
            source: "e";
         }
         program {
            name: "api_inactive";
            signal: "e,state,unfocused";
            source: "e";
         }
         */
         // MOVE PROGRAMS
         program {
            name: "mv_down";
            signal: "mouse,down,1";
            source: "overlay";
            action: SIGNAL_EMIT "e,action,move,start" "";
         }
         program {
            name: "mv_up";
            signal: "mouse,up,1";
            source: "overlay";
            action: SIGNAL_EMIT "e,action,move,stop" "";
         }
         program {
            name: "mv_move";
            signal: "mouse,move";
            source: "overlay";
            action: SIGNAL_EMIT "e,action,move,go" "";
         }
         program {
            name: "h1_down1";
            signal: "mouse,down,1";
            source: "h1";
            action: STATE_SET "clicked" 0.0;
            target: "h1";
         }
         program {
            name: "h1_up1";
            signal: "mouse,up,1";
            source: "h1";
            action: STATE_SET "default" 0.0;
            target: "h1";
         }
         program {
            name: "h1_down2";
            signal: "mouse,down,1";
            source: "h1";
            action: SIGNAL_EMIT "e,action,resize,left,start" "";
         }
         program {
            name: "h1_up2";
            signal: "mouse,up,1";
            source: "h1";
            action: SIGNAL_EMIT "e,action,resize,left,stop" "";
         }
         program {
            name: "h1_move";
            signal: "mouse,move";
            source: "h1";
            action: SIGNAL_EMIT "e,action,resize,left,go" "";
         }
         program {
            name: "h2_down1";
            signal: "mouse,down,1";
            source: "h2";
            action: STATE_SET "clicked" 0.0;
            target: "h2";
         }
         program {
            name: "h2_up1";
            signal: "mouse,up,1";
            source: "h2";
            action: STATE_SET "default" 0.0;
            target: "h2";
         }
         program {
            name: "h2_down2";
            signal: "mouse,down,1";
            source: "h2";
            action: SIGNAL_EMIT "e,action,resize,right,start" "";
         }
         program {
            name: "h2_up2";
            signal: "mouse,up,1";
            source: "h2";
            action: SIGNAL_EMIT "e,action,resize,right,stop" "";
         }
         program {
            name: "h2_move";
            signal: "mouse,move";
            source: "h2";
            action: SIGNAL_EMIT "e,action,resize,right,go" "";
         }
         program {
            name: "v1_down1";
            signal: "mouse,down,1";
            source: "v1";
            action: STATE_SET "clicked" 0.0;
            target: "v1";
         }
         program {
            name: "v1_up1";
            signal: "mouse,up,1";
            source: "v1";
            action: STATE_SET "default" 0.0;
            target: "v1";
         }
         program {
            name: "v1_down2";
            signal: "mouse,down,1";
            source: "v1";
            action: SIGNAL_EMIT "e,action,resize,up,start" "";
         }
         program {
            name: "v1_up2";
            signal: "mouse,up,1";
            source: "v1";
            action: SIGNAL_EMIT "e,action,resize,up,stop" "";
         }
         program {
            name: "v1_move";
            signal: "mouse,move";
            source: "v1";
            action: SIGNAL_EMIT "e,action,resize,up,go" "";
         }
         program {
            name: "v2_down1";
            signal: "mouse,down,1";
            source: "v2";
            action: STATE_SET "clicked" 0.0;
            target: "v2";
         }
         program {
            name: "v2_up1";
            signal: "mouse,up,1";
            source: "v2";
            action: STATE_SET "default" 0.0;
            target: "v2";
         }
         program {
            name: "v2_down2";
            signal: "mouse,down,1";
            source: "v2";
            action: SIGNAL_EMIT "e,action,resize,down,start" "";
         }
         program {
            name: "v2_up2";
            signal: "mouse,up,1";
            source: "v2";
            action: SIGNAL_EMIT "e,action,resize,down,stop" "";
         }
         program {
            name: "v2_move";
            signal: "mouse,move";
            source: "v2";
            action: SIGNAL_EMIT "e,action,resize,down,go" "";
         }
         // LEFT ARROW
         program {
            name: "start_left1";
            signal: "mouse,in";
            source: "h1";
            after: "left1_1";
         }
         program {
            name: "start_left2";
            signal: "mouse,in";
            source: "h1";
            in: 0.4 0.0;
            after: "left2_1";
         }
         program {
            name: "left1_1";
            action: STATE_SET "1" 0.0;
            target: "left_arrow1";
            transition: LINEAR 0.4;
            after: "left1_2";
         }
         program {
            name: "left1_2";
            action: STATE_SET "2" 0.0;
            target: "left_arrow1";
            transition: LINEAR 0.4;
            after: "left1_r";
         }
         program {
            name: "left1_r";
            action: STATE_SET "default" 0.0;
            target: "left_arrow1";
            after: "left1_1";
         }
         program {
            name: "left2_1";
            action: STATE_SET "1" 0.0;
            target: "left_arrow2";
            transition: LINEAR 0.4;
            after: "left2_2";
         }
         program {
            name: "left2_2";
            action: STATE_SET "2" 0.0;
            target: "left_arrow2";
            transition: LINEAR 0.4;
            after: "left2_r";
         }
         program {
            name: "left2_r";
            action: STATE_SET "default" 0.0;
            target: "left_arrow2";
            after: "left2_1";
         }
         program {
            name: "stop_left1";
            signal: "mouse,out";
            source: "h1";
            action: ACTION_STOP;
            target: "left1_1";
            target: "left1_2";
            target: "left1_r";
            target: "left2_1";
            target: "left2_2";
            target: "left2_r";
            target: "start_left2";
            after: "stop_left2";
         }
         program {
            name: "stop_left2";
            action: STATE_SET "default" 0.0;
            target: "left_arrow1";
            target: "left_arrow2";
         }
         // RIGHT ARROW
         program {
            name: "start_right1";
            signal: "mouse,in";
            source: "h2";
            after: "right1_1";
         }
         program {
            name: "start_right2";
            signal: "mouse,in";
            source: "h2";
            in: 0.4 0.0;
            after: "right2_1";
         }
         program {
            name: "right1_1";
            action: STATE_SET "1" 0.0;
            target: "right_arrow1";
            transition: LINEAR 0.4;
            after: "right1_2";
         }
         program {
            name: "right1_2";
            action: STATE_SET "2" 0.0;
            target: "right_arrow1";
            transition: LINEAR 0.4;
            after: "right1_r";
         }
         program {
            name: "right1_r";
            action: STATE_SET "default" 0.0;
            target: "right_arrow1";
            after: "right1_1";
         }
         program {
            name: "right2_1";
            action: STATE_SET "1" 0.0;
            target: "right_arrow2";
            transition: LINEAR 0.4;
            after: "right2_2";
         }
         program {
            name: "right2_2";
            action: STATE_SET "2" 0.0;
            target: "right_arrow2";
            transition: LINEAR 0.4;
            after: "right2_r";
         }
         program {
            name: "right2_r";
            action: STATE_SET "default" 0.0;
            target: "right_arrow2";
            after: "right2_1";
         }
         program {
            name: "stop_right1";
            signal: "mouse,out";
            source: "h2";
            action: ACTION_STOP;
            target: "right1_1";
            target: "right1_2";
            target: "right1_r";
            target: "right2_1";
            target: "right2_2";
            target: "right2_r";
            target: "start_right2";
            after: "stop_right2";
         }
         program {
            name: "stop_right2";
            action: STATE_SET "default" 0.0;
            target: "right_arrow1";
            target: "right_arrow2";
         }
         // TOP ARROW
         program {
            name: "start_top1";
            signal: "mouse,in";
            source: "v1";
            after: "top1_1";
         }
         program {
            name: "start_top2";
            signal: "mouse,in";
            source: "v1";
            in: 0.4 0.0;
            after: "top2_1";
         }
         program {
            name: "top1_1";
            action: STATE_SET "1" 0.0;
            target: "top_arrow1";
            transition: LINEAR 0.4;
            after: "top1_2";
         }
         program {
            name: "top1_2";
            action: STATE_SET "2" 0.0;
            target: "top_arrow1";
            transition: LINEAR 0.4;
            after: "top1_r";
         }
         program {
            name: "top1_r";
            action: STATE_SET "default" 0.0;
            target: "top_arrow1";
            after: "top1_1";
         }
         program {
            name: "top2_1";
            action: STATE_SET "1" 0.0;
            target: "top_arrow2";
            transition: LINEAR 0.4;
            after: "top2_2";
         }
         program {
            name: "top2_2";
            action: STATE_SET "2" 0.0;
            target: "top_arrow2";
            transition: LINEAR 0.4;
            after: "top2_r";
         }
         program {
            name: "top2_r";
            action: STATE_SET "default" 0.0;
            target: "top_arrow2";
            after: "top2_1";
         }
         program {
            name: "stop_top1";
            signal: "mouse,out";
            source: "v1";
            action: ACTION_STOP;
            target: "top1_1";
            target: "top1_2";
            target: "top1_r";
            target: "top2_1";
            target: "top2_2";
            target: "top2_r";
            target: "start_top2";
            after: "stop_top2";
         }
         program {
            name: "stop_top2";
            action: STATE_SET "default" 0.0;
            target: "top_arrow1";
            target: "top_arrow2";
         }
         // BOTTOM ARROW
         program {
            name: "start_bottom1";
            signal: "mouse,in";
            source: "v2";
            after: "bottom1_1";
         }
         program {
            name: "start_bottom2";
            signal: "mouse,in";
            source: "v2";
            in: 0.4 0.0;
            after: "bottom2_1";
         }
         program {
            name: "bottom1_1";
            action: STATE_SET "1" 0.0;
            target: "bottom_arrow1";
            transition: LINEAR 0.4;
            after: "bottom1_2";
         }
         program {
            name: "bottom1_2";
            action: STATE_SET "2" 0.0;
            target: "bottom_arrow1";
            transition: LINEAR 0.4;
            after: "bottom1_r";
         }
         program {
            name: "bottom1_r";
            action: STATE_SET "default" 0.0;
            target: "bottom_arrow1";
            after: "bottom1_1";
         }
         program {
            name: "bottom2_1";
            action: STATE_SET "1" 0.0;
            target: "bottom_arrow2";
            transition: LINEAR 0.4;
            after: "bottom2_2";
         }
         program {
            name: "bottom2_2";
            action: STATE_SET "2" 0.0;
            target: "bottom_arrow2";
            transition: LINEAR 0.4;
            after: "bottom2_r";
         }
         program {
            name: "bottom2_r";
            action: STATE_SET "default" 0.0;
            target: "bottom_arrow2";
            after: "bottom2_1";
         }
         program {
            name: "stop_bottom1";
            signal: "mouse,out";
            source: "v2";
            action: ACTION_STOP;
            target: "bottom1_1";
            target: "bottom1_2";
            target: "bottom1_r";
            target: "bottom2_1";
            target: "bottom2_2";
            target: "bottom2_r";
            target: "start_bottom2";
            after: "stop_bottom2";
         }
         program {
            name: "stop_bottom2";
            action: STATE_SET "default" 0.0;
            target: "bottom_arrow1";
            target: "bottom_arrow2";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: WIZARD ***/

   group {
      name: "e/wizard/extra";
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
      }
   }
   group {
      name: "e/wizard/main";
      /* images used */
      images {
         image: "exq-bglight.png" COMP;
         image: "exq-logo.png" COMP;
         image: "exq-dot.png" COMP;
         image: "exq-dot-glow.png" COMP;
         image: "exq-vgrad.png" COMP;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
         part {
            name: "content";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_y: "e.text.title";
                  relative: 0.2 1.0;
                  offset: 8 8;
               }
               rel2 {
                  to_y: "logo";
                  relative: 0.8 (143/217);
                  offset: -9 -9;
               }
            }
         }
         part {
            name: "swallow_center";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "content";
                  relative: 0.5 1.0;
               }
               rel2 {
                  to: "content";
                  relative: 0.5 1.0;
               }
            }
         }
         part {
            name: "swallow_mirror";
            type: PROXY;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               source: "e.swallow.content";
               rel1 {
                  to: "content";
               }
               rel2 {
                  to: "content";
               }
               perspective {
                  zplane: 0;
                  focal: 1000;
               }
               color: 255 255 255 64;
               map {
                  on: 1;
                  smooth: 0;
                  alpha: 1;
                  rotation {
                     center: "swallow_center";
                     x: 180;
                  }
               }
            }
         }
         part {
            name: "mirror_fade";
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "content";
                  relative: 0.0 1.0;
               }
               image {
                  normal: "exq-vgrad.png";
               }
               fill.smooth: 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "light";
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               rel1.relative: 0.1 0.8;
               rel2.relative: 0.9 1.2;
               aspect: (380/180) (380/180);
               aspect_preference: HORIZONTAL;
               max: 380 180;
               image.normal: "exq-bglight.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "content";
               }
               rel2 {
                  to: "content";
               }
            }
         }
         part {
            name: "logoclip";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "logo";
            clip_to: "logoclip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               rel1.relative: 0.2 0.6;
               rel2.relative: 0.8 1.0;
               aspect: (121/217) (121/217);
               aspect_preference: BOTH;
               max: 121 217;
               image.normal: "exq-logo.png";
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.05 0.05;
               }
               rel2 {
                  relative: 0.95 0.10;
               }
               color: 255 255 255 0;
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  min: 0 1;
                  text_class: "init_title";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p0-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: -0.5 0.7;
               }
               rel2 {
                  to: "logo";
                  relative: -0.5 0.7;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: -0.5 0.6;
               rel2.relative: -0.5 0.6;
            }
         }
         part {
            name: "p0-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p0-0";
               rel2.to: "p0-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p0-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 0.0 0.8;
               }
               rel2 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 1.0 0.8;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p0-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part {
            name: "p1-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 0.0 0.7;
               }
               rel2 {
                  to: "logo";
                  relative: 0.0 0.7;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 0.0 0.6;
               rel2.relative: 0.0 0.6;
            }
         }
         part {
            name: "p1-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p1-0";
               rel2.to: "p1-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p1-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 0.0 0.8;
               }
               rel2 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 1.0 0.8;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p1-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part {
            name: "p2-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 0.5 0.7;
               }
               rel2 {
                  to: "logo";
                  relative: 0.5 0.7;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 0.5 0.6;
               rel2.relative: 0.5 0.6;
            }
         }
         part {
            name: "p2-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p2-0";
               rel2.to: "p2-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p2-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 0.0 0.8;
               }
               rel2 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 1.0 0.8;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p2-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part {
            name: "p3-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 1.0 0.7;
               }
               rel2 {
                  to: "logo";
                  relative: 1.0 0.7;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 1.0 0.6;
               rel2.relative: 1.0 0.6;
            }
         }
         part {
            name: "p3-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p3-0";
               rel2.to: "p3-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p3-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 0.0 0.8;
               }
               rel2 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 1.0 0.8;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p3-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part {
            name: "p4-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 1.5 0.7;
               }
               rel2 {
                  to: "logo";
                  relative: 1.5 0.7;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 1.5 0.6;
               rel2.relative: 1.5 0.6;
            }
         }
         part {
            name: "p4-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p4-0";
               rel2.to: "p4-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p4-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 0.0 0.8;
               }
               rel2 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 1.0 0.8;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p4-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.0;
               rel2.relative: 1.0 1.0;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: GLOW;
            mouse_events: 1;
            scale: 1;
            clip_to: "bdis";
            description {
               state: "default" 0.0;
               min: 64 32;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.5  0.95;
               }
               rel2 {
                  relative: 0.5  0.95;
               }
               color: 180 180 180 255;
               color2: 255 255 255 24;
               color3: 255 255 255 6;
               text {
                  text: "Next";
                  font: "Sans:style=Bold";
                  size: 16;
                  min: 1 1;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               color2: 255 255 255 40;
               color3: 255 255 255 10;
            }
         }
         part {
            name: "arrow";
            type: TEXT;
            effect: GLOW;
            scale: 1;
            clip_to: "bdis";
            description {
               state: "default" 0.0;
               min: 32 32;
               align: 0.0 0.5;
               rel1 {
                  to: "e.text.label";
                  relative: 1.0  0.0;
               }
               rel2 {
                  to: "e.text.label";
                  relative: 1.0  1.0;
               }
               color: 255 255 255 255;
               color2: 255 255 255 40;
               color3: 255 255 255 10;
               text {
                  text: ">";
                  font: "Sans:style=Bold";
                  size: 16;
                  min: 1 1;
               }
            }
            description {
               state: "go" 0.0;
               inherit: "default" 0.0;
               color: 180 180 180 0;
               color2: 255 255 255 0;
               color3: 255 255 255 0;
               rel1.relative: 2.0 0.0;
               rel2.relative: 2.0 1.0;
            }
         }
         part {
            name: "block";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               visible: 0;
               color: 0 0 0 0;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 0 0 255 128;
            }
         }
         part {
            name: "bdis";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 64;
            }
         }
      }
      programs {
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "e.text.label";
            action: STATE_SET "clicked" 0.0;
            target: "e.text.label";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "e.text.label";
            action: STATE_SET "default" 0.0;
            target: "e.text.label";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "e.text.label";
            action: SIGNAL_EMIT "e,action,next" "";
            after: "button_go";
         }
         program {
            name: "button_go";
            action: STATE_SET "go" 0.0;
            transition: ACCELERATE 0.5;
            target: "arrow";
            after: "button_go2";
         }
         program {
            name: "button_go2";
            action: STATE_SET "default" 0.0;
            target: "arrow";
         }
         program {
            name: "button_enable";
            signal: "e,state,next,enable";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "block";
            target: "bdis";
         }
         program {
            name: "button_disable";
            signal: "e,state,next,disable";
            source: "e";
            action: STATE_SET "disabled" 0.0;
            target: "block";
            target: "bdis";
         }
         program {
            name: "show1";
            signal: "show";
            source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "light";
         }
         program {
            name: "show2";
            signal: "show";
            source: "";
            in: 0.1 0.0;
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.4;
            target: "logoclip";
            target: "e.text.title";
         }
         program {
            name: "show3";
            signal: "show";
            source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.2;
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
            after: "pulsate1";
            after: "pulsate1.2";
            after: "pulsate2";
            after: "pulsate2.2";
            after: "pulsate3";
            after: "pulsate3.2";
            after: "pulsate4";
            after: "pulsate4.2";
            after: "pulsate5";
            after: "pulsate5.2";
            after: "ready";
         }
         program {
            name: "ready";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 2.0;
            target: "logoclip";
         }
         program {
            name: "pulsate1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate1.1";
            target: "p0-1";
         }
         program {
            name: "pulsate1.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate1";
            target: "p0-1";
         }
         program {
            name: "pulsate1.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate1.2.1";
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
         }
         program {
            name: "pulsate1.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate1.2";
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
         }
         program {
            name: "pulsate2";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate2.1";
            target: "p1-1";
         }
         program {
            name: "pulsate2.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate2";
            target: "p1-1";
         }
         program {
            name: "pulsate2.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate2.2.1";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
         }
         program {
            name: "pulsate2.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate2.2";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
         }
         program {
            name: "pulsate3";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate3.1";
            target: "p2-1";
         }
         program {
            name: "pulsate3.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate3";
            target: "p2-1";
         }
         program {
            name: "pulsate3.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate3.2.1";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
         }
         program {
            name: "pulsate3.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate3.2";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
         }
         program {
            name: "pulsate4";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate4.1";
            target: "p3-1";
         }
         program {
            name: "pulsate4.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate4";
            target: "p3-1";
         }
         program {
            name: "pulsate4.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate4.2.1";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
         }
         program {
            name: "pulsate4.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate4.2";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
         }
         program {
            name: "pulsate5";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate5.1";
            target: "p4-1";
         }
         program {
            name: "pulsate5.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate5";
            target: "p4-1";
         }
         program {
            name: "pulsate5.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate5.2.1";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
         }
         program {
            name: "pulsate5.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate5.2";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
/*** ABOUT E ***/

   group {
      name: "e/widgets/about/main";
      images {
         image: "vgrad_dark.png" COMP;
         image: "about_top.png" COMP;
         image: "about_mid.png" COMP;
         image: "about_bot.png" COMP;
         image: "dia_botshad.png" COMP;
         image: "topsh.png" COMP;
         image: "logo_white_128.png" COMP;
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
      // data.item: "borderless" "1";
      // data.item: "shaped" "1";
      styles {
         style {
            name: "about_style";
            base: "font=Sans:style=Bold font_size=10 align=center text_class=tb_plain color=#e0e0e0ff style=soft_shadow shadow_color=#00000020 wrap=word";
            tag: "hilight" "+ font=Sans:style=Bold text_class=tb_light color=#f00 style=soft_shadow";
            tag: "title" "+ font_size=12 font=Sans:style=Bold text_class=tb_big style=soft_shadow color=#fff shadow_color=#00000020";
            tag: "/title" "- \n \n";
            tag: "br" "\n";
         }
      }
      min: 300 240;
      max: 640 640;
      parts {
         part {
            name: "sizer";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 300 240;
               visible: 0;
            }
         }
         part {
            name: "about_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "top";
                  relative: 0.0 0.0;
                  offset: 6 0;
               }
               rel2 {
                  to: "top";
                  relative: 1.0 1.0;
                  offset: -7 -7;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "authors_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "bot";
                  relative: 0.0 0.0;
                  offset: 6 6;
               }
               rel2 {
                  to: "bot";
                  relative: 1.0 1.0;
                  offset: -7 -1;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "background_image";
            description {
               state: "default" 0.0;
               image.normal: "vgrad_dark.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0 1.0;
                     offset: 36 0;
                  }
               }
            }
         }
         part {
            name: "e.textblock.about";
            type: TEXTBLOCK;
            mouse_events: 0;
            clip_to: "about_clip";
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.0;
               max: 10000 10000;
               min: 160 0;
               rel1 {
                  to: "top";
                  relative: 0.0 1.0;
                  offset: 32 -17;
               }
               rel2 {
                  to: "top";
                  relative: 1.0 1.0;
                  offset: -33 -17;
               }
               text {
                  style: "about_style";
                  min: 0 1;
               }
            }
            description {
               state: "up" 0.0;
               inherit: "default" 0.0;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 32 0;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -33 -1;
               }
            }
         }
         part {
            name: "e.textblock.authors";
            type: TEXTBLOCK;
            mouse_events: 0;
            clip_to: "authors_clip";
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 0.0;
               max: 10000 10000;
               min: 160 0;
               rel1 {
                  to: "bot";
                  relative: 0.0 1.0;
                  offset: 32 0;
               }
               rel2 {
                  to: "bot";
                  relative: 1.0 1.0;
                  offset: -33 0;
               }
               text {
                  style: "about_style";
                  min: 0 1;
               }
            }
            description {
               state: "up" 0.0;
               inherit: "default" 0.0;
               align: 0.5 1.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 32 16;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -33 16;
               }
            }
         }
         part {
            name: "top";
            description {
               state: "default" 0.0;
               image.normal: "about_top.png";
               image.middle: 0;
               image.border: 28 28 0 28;
               rel2.to_y: "e.text.title";
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 6;
               fill.smooth: 0;
            }
         }
         part {
            name: "bot";
            description {
               state: "default" 0.0;
               image.normal: "about_bot.png";
               image.middle: 0;
               image.border: 28 28 28 0;
               rel1.to_y: "e.text.title";
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -5;
               fill.smooth: 0;
            }
         }
         part {
            name: "mid";
            description {
               state: "default" 0.0;
               image.normal: "about_mid.png";
               rel1 {
                  to: "top";
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  to: "bot";
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 0.5;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "logo";
                  relative: 0.0 0.5;
                  offset: 11 -1;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 1.0 0.5;
                  text_class: "about_title";
               }
            }
         }
         part {
            name: "e.text.version";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               align: 0.0 0.5;
               rel1 {
                  to_x: "logo";
                  relative: 1.0 0.5;
                  offset: -12 0;
               }
               rel2 {
                  relative: 1.0 0.5;
                  offset: -1 -1;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.0 0.5;
                  text_class: "about_version";
               }
            }
         }
         part {
            name: "shadow";
            scale: 1;
            description {
               state: "default" 0.0;
               image.normal: "topsh.png";
               align: 0.0 0.0;
               min: 1 16;
               max: 99999 16;
               fill.smooth: 0;
            }
         }
         part {
            name: "shadow2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -4;
               image.normal: "dia_botshad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "logo";
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               image.normal: "logo_white_128.png";
               rel1 {
                  to: "top";
                  relative: 0.5 1.0;
                  offset: 0 -30;
               }
               rel2 {
                  to: "bot";
                  relative: 0.5 0.0;
                  offset: -1 29;
               }
            }
         }
         part {
            name: "button_image";
            mouse_events: 1;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.5 0.98;
               rel1.offset: 0 -1;
               rel2.relative: 0.5 0.98;
               rel2.offset: 0 -1;
               min: 64 32;
               max: 64 32;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "button_image";
                  relative: 0.0  0.0;
                  offset: 3    3;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "button_text";
               text {
                  text: "Close";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "button";
               }
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
         }
         part {
            name: "over3";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 12 12 12 12;
               }
               fill.smooth : 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "showa";
            signal: "show";
            source: "";
            action: STATE_SET "up" 0.0;
            transition: LINEAR 45.0;
            target: "e.textblock.about";
            after: "showa2";
         }
         program {
            name: "showa2";
            action: STATE_SET "default" 0.0;
            target: "e.textblock.about";
            after: "showa";
         }
         program {
            name: "showb";
            signal: "show";
            source: "";
            action: STATE_SET "up" 0.0;
            transition: LINEAR 45.0;
            target: "e.textblock.authors";
            after: "showb2";
         }
         program {
            name: "showb2";
            action: STATE_SET "default" 0.0;
            target: "e.textblock.authors";
            after: "showb";
         }
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,close" "";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** THEME ABOUT ***/

   group {
      name: "e/theme/about";
      images {
         image: "silk.png" LOSSY 90;
         image: "topsh.png" COMP;
         image: "bnw.png" COMP;
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
      }
      styles {
         style {
            name: "theme_about_style";
            base: "font=Sans:style=Bold font_size=10 align=center color=#e0e0e0ff style=soft_shadow shadow_color=#0000001f wrap=word";
            tag: "br" "\n";
         }
      }
      // data.item: "borderless" "1";
      // data.item: "shaped" "1";
      min: 300 240;
      max: 640 640;
      parts {
         part {
            name: "background_image";
            description {
               state: "default" 0.0;
               image.normal: "silk.png";
               aspect: 1.0 1.0;
               aspect_preference: NONE;
            }
         }
         part {
            name: "shadow";
            scale: 1;
            description {
               state: "default" 0.0;
               image.normal: "topsh.png";
               align: 0.0 0.0;
               min: 1 16;
               max: 99999 16;
               fill.smooth: 0;
            }
         }
         part {
            name: "logo";
            description {
               state: "default" 0.0;
               image.normal: "bnw.png";
               align: 0.5 0.05;
               min: 230 110;
               max: 460 220;
               aspect: 2.090909091 2.090909091;
               aspect_preference: HORIZONTAL;
            }
         }
         part {
            name: "about";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "logo";
                  relative: 0.0 1.0;
                  offset: 8 0;
               }
               rel2 {
                  to_y: "button_image";
                  offset: -9 -19;
                  relative: 1.0 0.0;
               }
               text {
                  style: "theme_about_style";
                  min: 1 1;
                  text:
                            "Smooth as silk<br>"
                            "The default theme for<br>"
                            "Enlightenment<br>"
                            ;
               }
            }
         }
         part {
            name: "button_image";
            mouse_events: 1;
            scale: 1;
            description {
               state: "default" 0.0;
               fixed: 1 1;
               align: 0.5 1.0;
               rel1.relative: 0.5 0.98;
               rel1.offset: 0 -1;
               rel2.relative: 0.5 0.98;
               rel2.offset: 0 -1;
               min: 64 32;
               max: 64 32;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "button_image";
                  relative: 0.0  0.0;
                  offset: 3    3;
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "button_text";
               text {
                  text: "Close";
                  font: "Sans";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "button";
               }
            }
         }
         part {
            name: "over1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
         }
         part {
            name: "over2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
         }
         part {
            name: "over3";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 12 12 12 12;
               }
               fill.smooth : 0;
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program {
            name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program {
            name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,close" "";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** ICONS ***/

   #define ICON(NAME, FILE, SIZE)                     \
   group {                                            \
      name: "e/icons/"NAME ;                          \
      max: SIZE SIZE;                                 \
      parts {                                         \
         part {                                       \
            name: "icon";                             \
            repeat_events: 1;                        \
            description {                             \
               state: "default" 0.0;                  \
               aspect: 1.0 1.0;                       \
               aspect_preference: BOTH;               \
               image.image: FILE COMP;                \
               image.normal: FILE ;                   \
            }                                         \
         }                                            \
      }                                               \
   }

   #define ICONMIME(NAME, FILE, SIZE) ICON("mimetypes/"NAME, FILE, SIZE)
   /* FreeDesktop.Org Icons
    * http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html
    *
    * In the comment you can find the old e icon name.
    *
    * Icons marked with *** are not mentioned in the spec, but we still try to
    * follow the naming convention.
    *
    * TO ADD A NEW ICON:
    * 1. Search for a name in the spec OR
    * 2. Search for a name in kde (oxygen) and gnome (tango - human) icon set OR
    * 3. Try to follow the naming convention
    */
   //Standard Action Icons
   ICON("help-about","logo_black_128.png",64)                      // "enlightenment/about"
   ICON("list-add","icon_add.png",64)                              // "widget/add"
   ICON("list-remove","icon_del.png",64)                           // "widget/del"
   ICON("go-up","icon_up_arrow.png",64)                            // "widget/up_arrow" "widget/up_dir"
   ICON("go-down","icon_down_arrow.png",64)                        // "widget/down_arrow"
   ICON("go-next","icon_right_arrow.png",64)                       // "widget/new_dialog"
   ICON("go-previous","icon_left_arrow.png",64)                    // none
   ICON("bookmark-new","icon_add_fav.png",64)                      // "widget/add_fav"
   ICON("edit-swap","icon_swap.png",64)                     // *** // "widget/swap"
   ICON("edit-copy","icon_efm_copy.png",16)                        // EFMBUTTON("copy"
   ICON("edit-cut","icon_efm_cut.png",16)                          // EFMBUTTON("cut"
   ICON("edit-paste","icon_efm_paste.png",16)                      // EFMBUTTON("paste"
   ICON("edit-delete","icon_efm_delete.png",16)                    // EFMBUTTON("delete"
   ICON("edit-rename","icon_efm_rename.png",16)                    // EFMBUTTON("rename"
   ICON("edit-select-all","icon_efm_select.png",16)                // EFMBUTTON("select"
   ICON("document-open","icon_efm_open.png",16)                    // "widget/open" EFMBUTTON("open") EFMBUTTON("new")
   ICON("document-new","icon_new.png",64)                          // "widget/new"
   ICON("document-properties","icon_efm_properties.png",16)        // EFMBUTTON("properties"
   ICON("folder-new","icon_efm_new_dir.png",16)                    // EFMBUTTON("new_dir"
   ICON("view-sort","icon_efm_sort.png",16)                 // *** // EFMBUTTON("sort",
   ICON("view-order","icon_efm_sort.png",16)                // *** // EFMBUTTON("ordering"
   ICON("view-hidden-files","icon_efm_view.png",16)         // *** // EFMBUTTON("hidden_files"
   ICON("configure","icon_config.png",64)                          // "widget/config"
   ICON("system-run","icon_run.png",64)                            // "enlightenment/run"
   ICON("system-shutdown","icon_halt.png",128)                     // "enlightenment/halt"
   ICON("system-restart","icon_reboot.png",128)                    // "enlightenment/reboot"
   ICON("system-suspend","icon_suspend.png",128)                   // "enlightenment/suspend"
   ICON("system-suspend-hibernate","icon_hibernate.png",128)       // "enlightenment/hibernate"
   ICON("system-log-out","icon_logout.png",128)                    // "enlightenment/logout"
   ICON("system-lock-screen","icon_desklock_menu.png",128)         // "enlightenment/desklock_menu"
   ICON("window-close","icon_close.png",64)                        // "widget/close"
   ICON("dialog-ok-apply","icon_check.png",64)                     // "enlightenment/check"
   ICON("transform-scale","icon_resize.png",64)                    // "widget/resize"
   ICON("transform-move","icon_autoscroll.png",64)                 // "enlightenment/autoscroll"
   ICON("view-refresh","icon_efm_refresh.png",16)                  // EFMBUTTON("refresh"
   ICON("view-inherit","icon_dummy.png",64)                 // *** // EFMBUTTON("inherit"
   ICON("screenshot","icon_screenshot.png",64)                     // dunno
   //Standard Status Icons
   ICON("dialog-warning","icon_warning.png",128)                   // "enlightenment/warning"
   ICON("dialog-error","icon_warning.png",128)                     // "enlightenment/error"
   ICON("dialog-ask","icon_dummy.png",64)                          // "enlightenment/unknown"
   ICON("unknown","icon_dummy.png",64)                      // *** // "enlightenment/unknown"
   //Standard Application Icons
   ICON("preferences-desktop","icon_desktops.png",64)                         // "enlightenment/desktops"
   ICON("preferences-desktop-theme","icon_theme.png",64)                      // "enlightenment/themes"
   ICON("preferences-desktop-wallpaper","icon_wallpaper.png",64)              // "enlightenment/background"
   ICON("preferences-desktop-color","icon_colors.png",64)                     // "enlightenment/colors"
   ICON("preferences-desktop-font","icon_fonts.png",64)                       // "enlightenment/fonts"
   ICON("preferences-desktop-screensaver","icon_screensaver.png",64)          // "enlightenment/screensaver"
   ICON("preferences-desktop-display","icon_screen_setup.png",64)             // "enlightenment/screen_setup"
   ICON("preferences-desktop-keyboard","icon_keys.png",64)                    // "enlightenment/keys"
   ICON("preferences-desktop-keyboard-shortcuts","icon_keys.png",64)           // "enlightenment/keys"
   ICON("preferences-desktop-pointer","icon_mouse.png",64)             // *** // "enlightenment/mouse"
   ICON("preferences-desktop-mouse","icon_mouse_clean.png",64)                // "enlightenment/mouse_clean"
   ICON("preferences-desktop-mouse-left","icon_mouse_left.png",64)     // *** // "enlightenment/mouse_left"
   ICON("preferences-desktop-mouse-right","icon_mouse_right.png",64)   // *** // "enlightenment/mouse_right"
   ICON("preferences-desktop-mouse-middle","icon_mouse_middle.png",64) // *** // "enlightenment/mouse_middle"
   ICON("preferences-desktop-mouse-wheel","icon_mouse_wheel.png",64)   // *** // "enlightenment/mouse_wheel"
   ICON("preferences-desktop-mouse-extra","icon_mouse_extra.png",64)   // *** // "enlightenment/mouse_extra"
   ICON("preferences-desktop-locale","icon_intl.png",64)                      // "enlightenment/intl"
   ICON("preferences-desktop-mixer","icon_mixer.png",64)                      // "enlightenment/mixer"
   ICON("preferences-desktop-shelf","icon_shelf.png",64)                        // *** // "enlightenment/shelf"
   ICON("preferences-desktop-shelf-bottom-desk","icon_shelf_bottom_desk.png",64)// *** // "enlightenment/shelf_bottom_desk"
   ICON("preferences-desktop-shelf-custom","icon_shelf_custom.png",64)          // *** // "enlightenment/shelf_custom"
   ICON("preferences-desktop-shelf-dock","icon_shelf_dock.png",64)              // *** // "enlightenment/shelf_dock"
   ICON("preferences-desktop-shelf-menu-bar","icon_shelf_menu_bar.png",64)      // *** // "enlightenment/shelf_menu_bar"
   ICON("preferences-desktop-shelf-panel","icon_shelf_panel.png",64)            // *** // "enlightenment/shelf_panel"
   ICON("preferences-desktop-shelf-top-desk","icon_shelf_top_desk.png",64)      // *** // "enlightenment/shelf_top_desk"
   ICON("preferences-desktop-window-remember","icon_window_remembers.png",64)   // *** // "enlightenment/window_remembers"
   ICON("preferences-position-bottom","icon_shelf_bottom.png",64)               // *** // "enlightenment/shelf_position_bottom"
   ICON("preferences-position-bottom-left","icon_shelf_bottom_left.png",64)     // *** // "enlightenment/shelf_position_bottom_left"
   ICON("preferences-position-bottom-right","icon_shelf_bottom_right.png",64)   // *** // "enlightenment/shelf_position_bottom_right"
   ICON("preferences-position-top","icon_shelf_top.png",64)                     // *** // "enlightenment/shelf_position_top"
   ICON("preferences-position-top-left","icon_shelf_top_left.png",64)           // *** // "enlightenment/shelf_position_top_left"
   ICON("preferences-position-top-right","icon_shelf_top_right.png",64)         // *** // "enlightenment/shelf_position_top_right"
   ICON("preferences-position-left","icon_shelf_left.png",64)                   // *** // "enlightenment/shelf_position_left"
   ICON("preferences-position-left-top","icon_shelf_left_top.png",64)           // *** // "enlightenment/shelf_position_left_top"
   ICON("preferences-position-left-bottom","icon_shelf_left_bottom.png",64)     // *** // "enlightenment/shelf_position_left_bottom"
   ICON("preferences-position-right","icon_shelf_right.png",64)                 // *** // "enlightenment/shelf_position_right"
   ICON("preferences-position-right-top","icon_shelf_right_top.png",64)         // *** // "enlightenment/shelf_position_right_top"
   ICON("preferences-position-right-bottom","icon_shelf_right_bottom.png",64)   // *** // "enlightenment/shelf_position_right_bottom"
   ICON("preferences-window-manipulation","icon_window_manipulation.png",64)    // *** // "enlightenment/window_manipulation"
   ICON("preferences-window-maximize","icon_window_manipulation.png",64)        // *** // "enlightenment/window_maximize"
   ICON("preferences-window-stacking","icon_winlist.png",64)                    // *** // "enlightenment/window_stacking"
   ICON("preferences-window-geometry","icon_window_geometry.png",64)            // *** // "enlightenment/window_geometry"
   ICON("preferences-windows-lost","icon_lost_windows.png",64)                  // *** // "enlightenment/lost_windows"
   ICON("preferences-gradient","icon_gradient.png",64)           // *** // "enlightenment/gradient"
   ICON("preferences-focus","icon_window_focus.png",64)          // *** // "enlightenment/focus"
   ICON("preferences-engine","icon_engine.png",64)               // *** // "enlightenment/engine"
   ICON("preferences-dialogs","icon_dummy.png",64)               // *** // "enlightenment/dialogs"
   ICON("preferences-interaction","icon_interaction.png",64)     // *** // "enlightenment/interaction"
   ICON("preferences-imc","icon_imc.png",64)                     // *** // "enlightenment/imc"
   ICON("preferences-system-lock-screen","icon_desklock.png",64) // *** // "enlightenment/desklock"
   ICON("preferences-icon-theme","icon_icon_theme.png",64)       // *** // "enlightenment/icon_theme"
   ICON("preferences-transitions","icon_transitions.png",64)     // *** // "enlightenment/transitions"
   ICON("preferences-toolbar","icon_toolbar.png",64)             // *** // "enlightenment/toolbar"
   ICON("preferences-profiles","icon_profiles.png",64)           // *** // "enlightenment/profiles"
   ICON("preferences-startup","icon_startup.png",64)             // *** // "enlightenment/startup"
   ICON("preferences-winlist","icon_winlist.png",64)             // *** // "enlightenment/winlist"
   ICON("preferences-menus","icon_menus.png",64)                 // *** // "enlightenment/menus"
   ICON("preferences-menu-settings","icon_menu_settings.png",64) // *** // "enlightenment/menu_settings"
   ICON("preferences-advanced","icon_advanced.png",64)           // *** // "enlightenment/advanced"
   ICON("preferences-behavior","icon_behavior.png",64)           // *** // "enlightenment/behavior"
   ICON("preferences-look","icon_look.png",64)                   // *** // "enlightenment/look"
   ICON("preferences-utils","icon_gadget.png",64)                // *** // "enlightenment/utils"
   ICON("preferences-extensions","icon_extensions.png",64)       // *** // "enlightenment/extensions"
   ICON("preferences-file-icons","icon_file_icons.png",64)       // *** // "enlightenment/file_icons"
   ICON("preferences-pager","icon_pager.png",64)                 // *** // "enlightenment/pager"
   ICON("preferences-scale","icon_scale.png",64)                 // *** // "enlightenment/scale"
   ICON("preferences-directories","icon_directories.png",64)     // *** // "enlightenment/directories"
   ICON("preferences-screen-normal","icon_screen_normal.png",64) // *** // "enlightenment/screen_normal"
   ICON("preferences-screen-around","icon_screen_around.png",64) // *** // "enlightenment/screen_around"
   ICON("preferences-screen-left","icon_screen_left.png",64)     // *** // "enlightenment/screen_left"
   ICON("preferences-screen-right","icon_screen_right.png",64)   // *** // "enlightenment/screen_right"
   ICON("preferences-screen-vflip","icon_screen_vflip.png",64)   // *** // "enlightenment/screen_vflip"
   ICON("preferences-screen-hflip","icon_screen_hflip.png",64)   // *** // "enlightenment/screen_hflip"
   ICON("preferences-applications","icon_applications.png",64)                 // *** // "enlightenment/applications"
   ICON("preferences-applications-add","icon_applications_new.png",64)         // *** // "enlightenment/add_application"
   ICON("preferences-applications-ibar","icon_applications_ibar.png",64)       // *** // "enlightenment/ibar_applications"
   ICON("preferences-applications-restart","icon_applications_restart.png",64) // *** // "enlightenment/restart_applications"
   ICON("preferences-applications-startup","icon_applications_startup.png",64) // *** // "enlightenment/startup_applications"
   ICON("preferences-desktop-default-applications","icon_advanced.png",64)
   ICON("preferences-preferences","icon_config.png",64)                             // "enlightenment/configuration" "enlightenment/settings"
   ICON("preferences-plugin","icon_modules.png",64)                                   // "enlightenment/modules"
   ICON("preferences-system","icon_configuration.png",64)                             // "enlightenment/configuration" "enlightenment/settings"
   ICON("preferences-system-windows","icon_windows.png",64)                           // "enlightenment/windows" "enlightenment/showhide"
   ICON("preferences-system-performance","icon_performance.png",64)                   // "enlightenment/performance"
   ICON("preferences-system-power-management","icon_power_management.png",64)         // "enlightenment/power_management"
   ICON("preferences-system-screen-resolution","icon_screen_resolution.png",64)// *** // "enlightenment/screen_resolution"
   ICON("preferences-illume","icon_illume.png",64)
   ICON("system-file-manager","icon_efm_folder.png",64)                               // "enlightenment/fileman"
   ICON("application-exit","icon_logout.png",64)                                      // "enlightenment/exit"
   ICON("enlightenment","logo_white_128.png",64)                               // *** // "enlightenment/e"
   //Standard Module Category Icons 
   ICON("modules-utils","icon_gadget.png",64)
   ICON("modules-system","icon_gadget.png",64)
   ICON("modules-look","icon_look.png",64)
   ICON("modules-files","icon_efm_folder.png",64)
   ICON("modules-launcher","icon_run.png",64)
   ICON("modules-core","logo_white_128.png",64)
   ICON("modules-mobile","icon_globe.png",64)
   ICON("modules-settings","icon_config.png",64)
   //Standard Emblem Icons
   ICON("emblem-symbolic-link","icon_dummy.png",64)                // EFMBUTTON("symlink")
   //Standard Place Icons
   ICON("folder","icon_efm_folder.png",64)                         // "fileman/folder"
   ICON("user-home","icon_efm_home.png",64)                        // "fileman/home"
   ICON("user-temp","icon_efm_tmp.png",64)                  // *** // "fileman/tmp"
   ICON("user-desktop","icon_efm_desktop.png",64)                  // "fileman/desktop"
   ICON("user-bookmarks","icon_favorites.png",64)                  // "enlightenment/favorites"
   ICON("folder-image","icon_wallpaper.png",64)                    // "enlightenment/picture"
   ICON("network-website","icon_globe.png",64)                     // "enlightenment/website"
   ICON("system","icon_system.png",64)                      // *** // "enlightenment/system"
   //Standard Device Icons
   ICON("computer","icon_efm_root.png", 64)                        // "fileman/root"
   ICON("drive-harddisk","icon_efm_hdd.png", 128)                  // "fileman/hd" "fileman/hdd"
   ICON("drive-optical","icon_efm_cd.png", 128)                    // "fileman/??"
   ICON("media-flash","icon_efm_flash.png", 128)                   // "fileman/??"
   ICON("drive-removable-media","icon_efm_usbmedia.png", 128);
   ICON("media-eject","icon_efm_eject.png", 64)
   /* End of FreeDesktop.Org icons */
   //E Specific icons
   ICON("everything-launch","icon_advanced.png",64)
   ICON("everything-clipboard","icon_evry_clipboard.png", 256)
   //EFM Mime icons
   ICONMIME("inode/chardevice","icon_efm_file.png",128)
   ICONMIME("inode/blockdevice","icon_efm_file.png",128)
   ICONMIME("inode/directory-locked","icon_efm_file.png",128)
   ICONMIME("inode/directory","icon_efm_folder.png",128)
   ICONMIME("inode/fifo","icon_efm_file.png",128)
   ICONMIME("inode/socket","icon_efm_file.png",128)

   // Window Border menu icons //
   #define BORDERICON(NAME, FILE)                     \
   group {                                            \
      name: "e/widgets/border/default/"NAME ;         \
      max: 64 64;                                     \
      parts {                                         \
         part {                                       \
            name: "icon";                             \
            mouse_events: 0;                         \
            description {                             \
               state: "default" 0.0;                  \
               aspect: 1.0 1.0;                       \
               aspect_preference: BOTH;               \
               image.image: FILE COMP;                \
               image.normal: FILE ;                   \
            }                                         \
         }                                            \
      }                                               \
   }

   BORDERICON("basic","icon_border_more.png")
   BORDERICON("close","icon_border_close.png")
   BORDERICON("kill","icon_border_kill.png")
   BORDERICON("stacking","icon_border_stack_norm.png")
   BORDERICON("stack_on_top","icon_border_stack_top.png")
   BORDERICON("stack_normal","icon_border_stack_norm.png")
   BORDERICON("stack_below","icon_border_stack_bot.png")
   BORDERICON("move_icon", "icon_win_move.png")
   BORDERICON("resize_icon", "icon_win_resize.png");
   BORDERICON("maximize","icon_border_maximize.png")
   BORDERICON("fullscreen","icon_border_maximize.png")
   BORDERICON("minimize","icon_border_minimize.png")
   BORDERICON("stick","icon_border_pin.png")
   BORDERICON("sendto","icon_border_sendto.png")
   BORDERICON("skip","icon_border_skip.png")
   BORDERICON("skip_pager","icon_border_pager.png")
   BORDERICON("skip_taskbar","icon_border_skip.png")
   BORDERICON("skip_winlist","icon_border_skip.png")
   BORDERICON("borderless","icon_border_border.png")
   BORDERICON("remember","icon_border_remember.png")
   BORDERICON("shade","icon_border_shaded.png")
   BORDERICON("locks","icon_border_lock.png")
   BORDERICON("locks_user","icon_border_lock.png")
   BORDERICON("locks_application","icon_border_lock.png")
   BORDERICON("properties","icon_border_properties.png")

   // EFM icons //
   /* #define EFMICON(NAME, FILE, SIZE)                    \
    * group { name: "e/icons/fileman/"NAME;                \
    *    max: SIZE SIZE;                                  \
    *    parts {                                           \
    *       part { name: "icon";                           \
    *     mouse_events: 0;                              \
    *     description { state: "default" 0.0;            \
    *        aspect: 1.0 1.0;                            \
    *        aspect_preference: BOTH;                    \
    *        image.image: FILE COMP;                     \
    *        image.normal: FILE ;                        \
    *     }                                              \
    *       }                                              \
    *    }                                                 \
    * } */
   //EFMICON("folder","icon_efm_folder.png", 128)
   //EFMICON("chrdev","icon_efm_file.png", 128)
   //EFMICON("blkdev","icon_efm_file.png", 128)
   //EFMICON("fifo","icon_efm_file.png", 128)
   //EFMICON("socket","icon_efm_file.png", 128)
   //EFMICON("executable","icon_efm_file.png", 128)
   //EFMICON("home","icon_efm_home.png", 128)
   //EFMICON("root","icon_efm_root.png", 128)
   //EFMICON("tmp","icon_efm_tmp.png", 128)
   //EFMICON("desktop","icon_efm_desktop.png", 128)
   //EFMICON("hdd","icon_efm_hdd.png", 128)
   //EFMICON("hd","icon_efm_hdd.png", 128)
   
   
   // EFM Mime type icons //

   #define MIMEICON(NAME, FILE, SIZE)                 \
   group {                                            \
      name: "e/icons/fileman/mime/"NAME;              \
      max: SIZE SIZE;                                \
      parts {                                         \
         part {                                       \
            name: "icon";                             \
            mouse_events: 0;                         \
            description {                             \
               state: "default" 0.0;                  \
               aspect: 1.0 1.0;                       \
               aspect_preference: BOTH;               \
               image.image: FILE COMP;                \
               image.normal: FILE ;                   \
            }                                         \
         }                                            \
      }                                               \
   }

   MIMEICON("application/pdf","icon_mime_pdf.png", 128);
   MIMEICON("application/x-deb","icon_mime_deb.png", 128);
   MIMEICON("application/x-bzip","icon_mime_package.png", 128);
   MIMEICON("application/zip","icon_mime_package.png", 128);
   MIMEICON("application/x-gzip","icon_mime_package.png", 128);
   MIMEICON("application/x-bzip-compressed-tar","icon_mime_package.png", 128);
   MIMEICON("application/x-bzip2-compressed-tar","icon_mime_package.png",128);
   MIMEICON("application/x-compressed-tar","icon_mime_package.png",128);
   MIMEICON("application/x-tar","icon_mime_package.png", 128);
   MIMEICON("application/x-rar","icon_mime_package.png", 128);
   MIMEICON("inode/chardevice","icon_efm_file.png", 128);
   MIMEICON("inode/blockdevice","icon_efm_file.png", 128);
   MIMEICON("inode/fifo","icon_efm_file.png", 128);
   MIMEICON("inode/socket","icon_efm_file.png", 128);
   MIMEICON("inode/directory","icon_efm_folder.png", 128);
   MIMEICON("inode/file","icon_efm_file.png", 128);
   MIMEICON("application/octet-stream","icon_efm_file.png", 128);
   MIMEICON("application/x-executable","icon_mime_executable_generic.png", 128);
   MIMEICON("application/x-ms-dos-executable","icon_mime_executable_generic.png", 128);
   MIMEICON("application/x-7z-compressed","icon_mime_package.png", 128);
   MIMEICON("application/vnd.ms-cab-compressed","icon_mime_package.png", 128);
   
   // Dynamic MIME Icons //
   #define MIMEBASE(MIME, FILE, NAME, SIZE)           \
   group {                                            \
      name: "e/icons/fileman/mime/"MIME;              \
      max: SIZE SIZE;                                \
      parts {                                         \
         part {                                       \
            name: "base";                             \
            mouse_events: 0;                          \
            description {                             \
               state: "default" 0.0;                  \
               aspect: 1.0 1.0;                       \
               aspect_preference: BOTH;               \
               image.image: FILE COMP;                \
               image.normal: FILE;                    \
            }                                         \
         }                                            \
         part {                                       \
            name: "name";                             \
            type: TEXT;                               \
            mouse_events: 0;                          \
            description {                             \
               state: "default" 0.0;                  \
               rel1.relative: 0.2444 0.6797;          \
               rel2.relative: 0.7478 0.8894;          \
               color: 245 245 245 255;                \
               text {                                 \
                  text: NAME;                       \
                  font: "Sans:style=Bold";          \
                  size: 4;                          \
                  fit: 1 1;                         \
                  min: 1 1;                         \
                  align: 0.5 0.0;                   \
               }                                      \
            }                                         \
         }                                            \
      }                                               \
   }

   MIMEBASE("video/mpeg","icon_mime_video_generic.png", ".MPEG", 128);
   MIMEBASE("application/ogg","icon_mime_video_generic.png", ".OGG", 128);
   MIMEBASE("video/x-theora+ogg","icon_mime_video_generic.png", ".OGG", 128);
   MIMEBASE("video/x-msvideo","icon_mime_video_generic.png", ".AVI", 128);
   MIMEBASE("video/ogg","icon_mime_video_generic.png", ".OGG", 128);
   MIMEBASE("video/mp4","icon_mime_video_generic.png", ".MP4", 128);
   MIMEBASE("video/quicktime","icon_mime_video_generic.png", ".MOV", 128);
   MIMEBASE("video/x-matroska","icon_mime_video_generic.png", ".MKV", 128);
   MIMEBASE("video/x-flv","icon_mime_video_generic.png", ".FLV", 128);
   MIMEBASE("application/vnd.rn-realmedia","icon_mime_video_generic.png", ".REAL", 128);
   MIMEBASE("video/x-ms-wmv","icon_mime_video_generic.png", ".WMV", 128);
   MIMEBASE("image/png","icon_mime_image_generic.png", ".PNG", 128);
   MIMEBASE("image/jpeg","icon_mime_image_generic.png", ".JPEG", 128);
   MIMEBASE("image/gif","icon_mime_image_generic.png", ".GIF", 128);
   MIMEBASE("image/bmp","icon_mime_image_generic.png", ".BMP", 128);
   MIMEBASE("application/x-xcf","icon_mime_image_generic.png", ".XCF", 128);
   MIMEBASE("application/x-cbz","icon_mime_image_generic.png", ".CBZ", 128);
   MIMEBASE("application/x-cbr","icon_mime_image_generic.png", ".CBR", 128);
   MIMEBASE("audio/mpeg","icon_mime_audio_generic.png", ".MP3", 128);
   MIMEBASE("audio/x-wav","icon_mime_audio_generic.png", ".WAV", 128);
   MIMEBASE("audio/x-flac","icon_mime_audio_generic.png", ".FLAC", 128);
   MIMEBASE("audio/x-musepack","icon_mime_audio_generic.png", ".MPC", 128);
   MIMEBASE("audio/x-vorbis+ogg","icon_mime_audio_generic.png", ".OGG", 128);
   MIMEBASE("application/x-audacity-project","icon_mime_audio_generic.png", ".AUP", 128);
   MIMEBASE("audio/x-ms-wma","icon_mime_audio_generic.png", ".WMA", 128);
   MIMEBASE("text/css","icon_mime_text_generic.png", ".CSS", 128);
   MIMEBASE("text/html","icon_mime_text_generic.png", ".HTML", 128);
   MIMEBASE("text/x-csrc","icon_mime_text_generic.png", ".C", 128);
   MIMEBASE("text/x-chdr","icon_mime_text_generic.png", ".H", 128);
   MIMEBASE("text/x-c++src","icon_mime_text_generic.png", ".C++", 128);
   MIMEBASE("text/x-csharp","icon_mime_text_generic.png", ".C#", 128);
   MIMEBASE("text/x-patch","icon_mime_text_generic.png", ".PATCH", 128);
   MIMEBASE("text/plain","icon_mime_text_generic.png", ".TXT", 128);
   MIMEBASE("application/x-msword","icon_mime_text_generic.png", ".DOC", 128);
   MIMEBASE("application/vnd.ms-powerpoint","icon_mime_text_generic.png", ".PPT", 128);
   MIMEBASE("application/vnd.ms-excel","icon_mime_text_generic.png", ".XLS", 128);
   MIMEBASE("application/x-abiword","icon_mime_text_generic.png", ".ABW", 128);
   MIMEBASE("application/vnd.scribus","icon_mime_text_generic.png", ".SLA", 128);
   MIMEBASE("text/x-python","icon_mime_text_generic.png", ".PY", 128);
   MIMEBASE("application/x-awk","icon_mime_text_generic.png", ".AWK", 128);
   MIMEBASE("application/x-lyx","icon_mime_text_generic.png", ".LYX", 128);
   MIMEBASE("application/vnd.oasis.opendocument.spreadsheet","icon_mime_text_generic.png", ".ODS", 128);
   MIMEBASE("application/vnd.oasis.opendocument.text","icon_mime_text_generic.png", ".ODT", 128);
   MIMEBASE("application/vnd.oasis.opendocument.presentation","icon_mime_text_generic.png", ".ODP", 128);
   MIMEBASE("application/x-object","icon_efm_file.png", "", 128);
   MIMEBASE("application/x-shellscript","icon_applications.png", "", 128);
   MIMEBASE("application/x-font-ttf","icon_mime_font_generic.png", ".TTF", 128);
   MIMEBASE("application/x-font-pcf","icon_mime_font_generic.png", ".PCF", 128);
   MIMEBASE("application/x-font-bdf","icon_mime_font_generic.png", ".BDF", 128);

   // Custom icons with actions or specific behaviours
   images {
      image: "icon_wallpaper_center_flat.png" COMP;
      image: "icon_wallpaper_center.png" COMP;
      image: "icon_wallpaper_screen.png" COMP;
      image: "icon_wallpaper_grad_screen.png" COMP;
   }
   group {
      name: "e/icons/enlightenment/wallpaper_stretch";
      max: 24 24;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               image {
                  normal: "icon_wallpaper_center_flat.png";
                  border: 5 5 5 5;
               }
            }
         }
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/wallpaper_tile";
      max: 24 24;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               image {
                  normal: "icon_wallpaper_center_flat.png";
                  border: 5 5 5 5;
               }
               fill {
                  size {
                     relative: 0.33 0.33;
                  }
               }
            }
         }
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/wallpaper_center";
      max: 24 24;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               rel1.relative: 0.125 0.125;
               rel2.relative: 0.875 0.875;
               image {
                  normal: "icon_wallpaper_center.png";
                  border: 5 5 5 5;
               }
            }
         }
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/wallpaper_scale_aspect_in";
      max: 24 24;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.5 1.5;
               aspect_preference: BOTH;
               rel1.to: "screen";
               rel2.to: "screen";
               image {
                  normal: "icon_wallpaper_center.png";
                  border: 5 5 5 5;
               }
            }
         }
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/wallpaper_scale_aspect_out";
      max: 24 24;
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.5 1.5;
               aspect_preference: NONE;
               image {
                  normal: "icon_wallpaper_center.png";
                  border: 5 5 5 5;
               }
            }
         }
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/gradient_h";
      max: 24 24;
      parts {
#if 0
         part {
            name: "bg";
            type: GRADIENT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               gradient {
                  spectrum: "black_to_trans";
                  rel1.relative: 0 0.5;
                  rel1.offset: 0 0;
                  rel2.relative: 1 0.5;
                  rel2.offset: -1 0;
               }
            }
         }
#endif
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_grad_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/gradient_v";
      max: 24 24;
      parts {
#if 0
         part {
            name: "bg";
            type: GRADIENT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               gradient.spectrum: "black_to_trans";
            }
         }
#endif
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_grad_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/gradient_du";
      max: 24 24;
      parts {
#if 0
         part {
            name: "bg";
            type: GRADIENT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               gradient {
                  spectrum: "black_to_trans";
                  rel1.relative: 0 1;
                  rel1.offset: 0 -1;
                  rel2.relative: 1 0;
                  rel2.offset: -1 0;
               }
            }
         }
#endif
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_grad_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/gradient_dd";
      max: 24 24;
      parts {
#if 0
         part {
            name: "bg";
            type: GRADIENT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               gradient {
                  spectrum: "black_to_trans";
                  rel1.relative: 0 0;
                  rel1.offset: 0 0;
                  rel2.relative: 1 1;
                  rel2.offset: -1 -1;
               }
            }
         }
#endif
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_grad_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }
   group {
      name: "e/icons/enlightenment/gradient_rad";
      max: 24 24;
      parts {
#if 0
         part {
            name: "bg";
            type: GRADIENT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "screen";
               rel2.to: "screen";
               gradient {
                  spectrum: "black_to_trans";
                  type: "radial";
               }
               fill {
                  origin.relative: 0.5 0.5;
               }
            }
         }
#endif
         part {
            name: "screen";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image {
                  normal: "icon_wallpaper_grad_screen.png";
                  border: 2 2 2 2;
               }
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** INIT SPLASH ***/

   /* this first group is used for the primary screen (or only screen) so in
    * a multi-monitor setup whichever is first (screen 0) will get this
    * splash on it */

   group {
      name: "e/init/splash";
      /* images used */
      images {
         image: "exq-bglight.png" COMP;
         image: "exq-logo.png" COMP;
         image: "exq-dot.png" COMP;
         image: "exq-dot-glow.png" COMP;
      }
      script {
         public is_ready;
         public do_end;
      }
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
         part {
            name: "light";
            description {
               state: "default" 0.0;
               align: 0.5 0.222222222;
               rel1.relative: 0.104166667 0.515625;
               rel2.relative: 0.895833333 0.796875;
               aspect: 2.111111111 2.111111111;
               aspect_preference: HORIZONTAL;
               max: 380 180;
               image.normal: "exq-bglight.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "logoclip";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "logo";
            clip_to: "logoclip";
            description {
               state: "default" 0.0;
               align: 0.5 0.774193548;
               rel1.relative: 0.272916667 0.315625;
               rel2.relative: 0.727083333 0.6546875;
               aspect: 0.557603687 0.557603687;
               aspect_preference: BOTH;
               max: 121 217;
               image.normal: "exq-logo.png";
            }
         }
         part {
            name: "e.text.title";
            type: TEXT;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to_y: "logo";
                  relative: 0.05 -0.4;
               }
               rel2 {
                  to_y: "logo";
                  relative: 0.95 -0.2;
               }
               color: 255 255 255 0;
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  // fit: 0 1;
                  text_class: "init_title";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.text.status";
            type: TEXT;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "e.text.title";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "e.text.title";
                  relative: 1.0 1.5;
               }
               color: 255 255 255 0;
               text {
                  font: "Sans";
                  size: 10;
                  // fit: 0 1;
                  text_class: "init_text";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 128;
            }
         }
         part {
            name: "e.text.version";
            type: TEXT;
            effect: SOFT_SHADOW;
            description {
               state: "default" 0.0;
               align: 1.0 1.0;
               rel1 {
                  relative: 1.0 1.0;
                  offset: -2  -2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -2  -2;
               }
               color: 255 255 255 64;
               color3: 0 0 0 32;
               text {
                  text: "0.17.0";
                  font: "Sans";
                  size: 8;
                  min: 1 1;
                  align: 0.0 0.0;
                  text_class: "init_version";
               }
            }
         }
         part {
            name: "p0-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: -0.5 0.9;
               }
               rel2 {
                  to: "logo";
                  relative: -0.5 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: -0.5 0.8;
               rel2.relative: -0.5 0.8;
            }
         }
         part {
            name: "p0-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p0-0";
               rel2.to: "p0-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p0-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p0-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 0.0 1.1;
               }
               rel2 {
                  to_x: "p0-0";
                  to_y: "logo";
                  relative: 1.0 1.1;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.2;
               rel2.relative: 1.0 1.2;
            }
         }
         part {
            name: "p1-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 0.0 0.9;
               }
               rel2 {
                  to: "logo";
                  relative: 0.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 0.0 0.8;
               rel2.relative: 0.0 0.8;
            }
         }
         part {
            name: "p1-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p1-0";
               rel2.to: "p1-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p1-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p1-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 0.0 1.1;
               }
               rel2 {
                  to_x: "p1-0";
                  to_y: "logo";
                  relative: 1.0 1.1;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.2;
               rel2.relative: 1.0 1.2;
            }
         }
         part {
            name: "p2-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 0.5 0.9;
               }
               rel2 {
                  to: "logo";
                  relative: 0.5 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 0.5 0.8;
               rel2.relative: 0.5 0.8;
            }
         }
         part {
            name: "p2-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p2-0";
               rel2.to: "p2-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p2-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p2-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 0.0 1.1;
               }
               rel2 {
                  to_x: "p2-0";
                  to_y: "logo";
                  relative: 1.0 1.1;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.2;
               rel2.relative: 1.0 1.2;
            }
         }
         part {
            name: "p3-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 1.0 0.9;
               }
               rel2 {
                  to: "logo";
                  relative: 1.0 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 1.0 0.8;
               rel2.relative: 1.0 0.8;
            }
         }
         part {
            name: "p3-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p3-0";
               rel2.to: "p3-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p3-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p3-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 0.0 1.1;
               }
               rel2 {
                  to_x: "p3-0";
                  to_y: "logo";
                  relative: 1.0 1.1;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.2;
               rel2.relative: 1.0 1.2;
            }
         }
         part {
            name: "p4-0";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to: "logo";
                  relative: 1.5 0.9;
               }
               rel2 {
                  to: "logo";
                  relative: 1.5 0.9;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               rel1.relative: 1.5 0.8;
               rel2.relative: 1.5 0.8;
            }
         }
         part {
            name: "p4-1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               rel1.to: "p4-0";
               rel2.to: "p4-0";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "p4-0.1";
            description {
               state: "default" 0.0;
               image.normal: "exq-dot-glow.png";
               color: 255 255 255 0;
               min: 22 11;
               max: 22 11;
               rel1 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 1.0 1.0;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
            }
         }
         part {
            name: "p4-0.2";
            description {
               state: "default" 0.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 0.0 1.1;
               }
               rel2 {
                  to_x: "p4-0";
                  to_y: "logo";
                  relative: 1.0 1.1;
               }
               image.normal: "exq-dot.png";
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 16;
            }
            description {
               state: "visible2" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 4;
               rel1.relative: 0.0 1.2;
               rel2.relative: 1.0 1.2;
            }
         }
      }
      programs {
         program {
            name: "init";
            signal: "load";
            source: "";
            script {
               set_int(is_ready, 0);
               set_int(do_end, 0);
            }
         }
         program {
            name: "show1";
            signal: "show";
            source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "light";
         }
         program {
            name: "show2";
            signal: "show";
            source: "";
            in: 0.1 0.0;
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.4;
            target: "logoclip";
            target: "e.text.title";
         }
         program {
            name: "show3";
            signal: "show";
            source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.2;
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
            target: "e.text.status";
            after: "pulsate1";
            after: "pulsate1.2";
            after: "pulsate2";
            after: "pulsate2.2";
            after: "pulsate3";
            after: "pulsate3.2";
            after: "pulsate4";
            after: "pulsate4.2";
            after: "pulsate5";
            after: "pulsate5.2";
            after: "ready";
         }
         program {
            name: "pulsate1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate1.1";
            target: "p0-1";
         }
         program {
            name: "pulsate1.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate1";
            target: "p0-1";
         }
         program {
            name: "pulsate1.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate1.2.1";
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
         }
         program {
            name: "pulsate1.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate1.2";
            target: "p0-0";
            target: "p0-0.1";
            target: "p0-0.2";
         }
         program {
            name: "pulsate2";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate2.1";
            target: "p1-1";
         }
         program {
            name: "pulsate2.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate2";
            target: "p1-1";
         }
         program {
            name: "pulsate2.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate2.2.1";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
         }
         program {
            name: "pulsate2.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate2.2";
            target: "p1-0";
            target: "p1-0.1";
            target: "p1-0.2";
         }
         program {
            name: "pulsate3";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate3.1";
            target: "p2-1";
         }
         program {
            name: "pulsate3.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate3";
            target: "p2-1";
         }
         program {
            name: "pulsate3.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate3.2.1";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
         }
         program {
            name: "pulsate3.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate3.2";
            target: "p2-0";
            target: "p2-0.1";
            target: "p2-0.2";
         }
         program {
            name: "pulsate4";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate4.1";
            target: "p3-1";
         }
         program {
            name: "pulsate4.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate4";
            target: "p3-1";
         }
         program {
            name: "pulsate4.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate4.2.1";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
         }
         program {
            name: "pulsate4.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate4.2";
            target: "p3-0";
            target: "p3-0.1";
            target: "p3-0.2";
         }
         program {
            name: "pulsate5";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.5;
            in: 0.2 0.2;
            after: "pulsate5.1";
            target: "p4-1";
         }
         program {
            name: "pulsate5.1";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            after: "pulsate5";
            target: "p4-1";
         }
         program {
            name: "pulsate5.2";
            action: STATE_SET "visible2" 0.0;
            transition: SINUSOIDAL 0.6;
            in: 0.2 0.2;
            after: "pulsate5.2.1";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
         }
         program {
            name: "pulsate5.2.1";
            action: STATE_SET "visible" 0.0;
            transition: SINUSOIDAL 0.7;
            after: "pulsate5.2";
            target: "p4-0";
            target: "p4-0.1";
            target: "p4-0.2";
         }
         program {
            name: "exit1";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 2.0;
            target: "light";
            target: "logoclip";
            after: "exit4";
         }
         program {
            name: "exit4";
            action: SIGNAL_EMIT "e,state,done_ok" "e";
         }
         program {
            name: "ready";
            script {
               new val;
               val = get_int(do_end);
               if (val == 1)
                  run_program(PROGRAM:"exit1"); 
               else
                  set_int(is_ready, 1);
            }
         }
         program {
            name: "done1";
            /* when e tells the splash screen it is done
             * starting up, the init splash gets this signal */
            signal: "e,state,done";
            source: "e";
            script {
               new val;
               val = get_int(is_ready);
               if (val == 1)
                  run_program(PROGRAM:"exit1"); 
               else
                  set_int(do_end, 1);
            }
         }
      }
   }
   /* this group is used for other screens/xinerama zones etc. other than
    * the primary as only the primary shows the full splash - this just
    * shows the below image. it can animate etc. but not display status
    * etc. */
   group {
      name: "e/init/extra_screen";
      parts {
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
            }
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** WALLPAPER MAIN DIALOG ***/

   group {
      name: "e/conf/wallpaper/main/window";
      images {
         image: "dia_grad.png" COMP;
         image: "dia_topshad.png" COMP;
         image: "dia_botshad.png" COMP;
         image: "dia_botshad.png" COMP;
         image: "topsh.png" COMP;
         image: "wp-bot1.png" COMP;
         image: "wp-bot2.png" COMP;
         image: "wp-tb1.png" COMP;
         image: "wp-tb2.png" COMP;
         image: "wp-tb3.png" COMP;
         image: "wp-tbs.png" COMP;
         image: "big_arrow_up.png" COMP;
         image: "busy-1.png" COMP;
         image: "busy-2.png" COMP;
         image: "busy-3.png" COMP;
         image: "busy-4.png" COMP;
         image: "busy-5.png" COMP;
         image: "busy-6.png" COMP;
         image: "busy-7.png" COMP;
         image: "busy-8.png" COMP;
         image: "busy-9.png" COMP;
      }
      parts {
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               image.normal: "dia_grad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "e.swallow.preview";
            type: SWALLOW;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part {
            name: "e.swallow.list";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2   2;
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -3  6;
                  to_y: "bot1";
               }
            }
         }
         part {
            name: "bot1";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_y: "e.swallow.buttons";
                  relative: 0.0 0.0;
                  offset: 0 -15;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "wp-bot1.png";
                  border: 0 0 21 0;
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 32 0;
                  }
               }
            }
         }
         part {
            name: "e.text.filename";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 1.0;
               rel1 {
                  to: "bot2";
                  relative: 0.0 1.0;
                  offset: 2 -11;
               }
               rel2 {
                  to: "bot2";
                  relative: 1.0 1.0;
                  offset: -3 -11;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 1.0;
               }
            }
         }
         part {
            name: "e.swallow.buttons";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 1.0 1.0;
               fixed: 0 1;
               rel1 {
                  to_y: "bot2";
                  relative: 1.0 0.0;
                  offset: -5   1;
               }
               rel2 {
                  to_y: "bot2";
                  relative: 1.0 0.0;
                  offset: -5  1;
               }
            }
         }
         part {
            name: "tbs";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
               image.normal: "wp-tbs.png";
               fill.smooth: 0;
            }
            description {
               state: "out" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "tb1";
                  relative: 0.0 0.0;
                  offset: 0 -100;
               }
               rel2 {
                  to_x: "tb3";
                  relative: 1.0 1.0;
                  offset: 200 -1;
               }
            }
         }
         part {
            name: "cover";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "out" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "tb1";
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "tb2";
                  to_y: "aup";
                  relative: 0.0 0.0;
                  offset: 0 -6;
               }
               rel2 {
                  to_x: "aup";
                  to_y: "tb2";
                  relative: 1.0 0.0;
                  offset: 15 -1;
               }
               image {
                  normal: "wp-tb1.png";
                  border: 2 11 3 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "tb2";
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "e.swallow.extras";
                  to_y: "e.swallow.extras";
                  relative: 0.0 0.0;
                  offset: -4 -7;
               }
               rel2 {
                  to_x: "e.swallow.extras";
                  to_y: "e.swallow.extras";
                  relative: 1.0 1.0;
                  offset: -10 3;
               }
               image {
                  normal: "wp-tb2.png";
                  border: 2 2 4 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "tb3";
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 1.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  to_x: "e.swallow.extras";
                  to_y: "tb2";
                  relative: 1.0 1.0;
                  offset: 18 -1;
               }
               image {
                  normal: "wp-tb3.png";
                  border: 10 12 4 0;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "e.swallow.extras";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               align: 0.0 0.0;
               fixed: 0 1;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 4 0;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 0;
               }
            }
            description {
               state: "out" 0.0;
               inherit: "default" 0.0;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 4 -10;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -10;
               }
            }
         }
         part {
            name: "aup";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 1.0;
               min: 22 22;
               max: 22 22;
               rel1 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 0.0 0.0;
                  offset: 5 -5;
               }
               rel2 {
                  to_x: "tb2";
                  to_y: "tb2";
                  relative: 0.0 0.0;
                  offset: 5 -3;
               }
               image.normal: "big_arrow_up.png";
            }
         }
         part {
            name: "ain";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "aup";
               rel2.to: "aup";
               color: 0 0 0 0;
            }
         }
         part {
            name: "aout";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to: "aup";
               rel2.to: "aup";
               color: 0 0 0 0;
            }
            description {
               state: "out" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "bot2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color_class: "dialog_base";
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -16;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "wp-bot2.png";
               }
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 32 0;
                  }
               }
            }
         }
         part {
            name: "shadow1";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               image.normal: "topsh.png";
               align: 0.0 0.0;
               min: 1 16;
               max: 99999 16;
               fill.smooth: 0;
            }
         }
         part {
            name: "shadow2";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.relative: 0.0 1.0;
               rel1.offset: 0 -4;
               image.normal: "dia_botshad.png";
               fill {
                  smooth: 0;
                  size {
                     relative: 0.0 1.0;
                     offset: 64 0;
                  }
               }
            }
         }
         part {
            name: "busy_clip";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.text.busy_label";
            type: TEXT;
            effect: SOFT_SHADOW;
            clip_to: "busy_clip";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               rel1 {
                  to: "busy";
                  relative: 0.0 1.0;
                  offset: 0 4;
               }
               rel2 {
                  to: "busy";
                  relative: 1.0 1.0;
                  offset: -1 4;
               }
               color: 255 255 255 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.0;
               }
            }
         }
         part {
            name: "busy";
            mouse_events: 0;
            clip_to: "busy_clip";
            description {
               state: "default" 0.0;
               min: 32 32;
               max: 32 32;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1 {
                  relative: 0.5 0.5;
                  offset: 0 0;
               }
               rel2 {
                  relative: 0.5 0.5;
                  offset: -1 1;
               }
               image {
                  normal: "busy-9.png";
                  tween: "busy-1.png";
                  tween: "busy-2.png";
                  tween: "busy-3.png";
                  tween: "busy-4.png";
                  tween: "busy-5.png";
                  tween: "busy-6.png";
                  tween: "busy-7.png";
                  tween: "busy-8.png";
               }
            }
         }
      }
      programs {
         program {
            name: "send_click";
            signal: "mouse,up,1";
            source: "events";
            action: SIGNAL_EMIT "e,action,click" "e";
         }
         program {
            name: "outb";
            signal: "mouse,down,1";
            source: "aout";
            action: SIGNAL_EMIT "e,action,panel,show" "e";
         }
         program {
            name: "out";
            signal: "e,action,panel,show";
            source: "e";
            action: STATE_SET "out" 0.0;
            target: "aout";
            target: "cover";
            after: "out2";
         }
         program {
            name: "out2";
            action: STATE_SET "out" 0.0;
            target: "e.swallow.extras";
            target: "tbs";
            transition: DECELERATE 0.5;
         }
         program {
            name: "in0";
            signal: "mouse,down,1";
            source: "cover";
            action: STATE_SET "default" 0.0;
            target: "aout";
            target: "cover";
            after: "in2";
         }
         program {
            name: "inb";
            signal: "mouse,down,1";
            source: "ain";
            action: SIGNAL_EMIT "e,action,panel,hide" "e";
         }
         program {
            name: "in";
            signal: "e,action,panel,hide";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "aout";
            after: "in2";
         }
         program {
            name: "in2";
            action: STATE_SET "default" 0.0;
            target: "e.swallow.extras";
            target: "tbs";
            target: "cover";
            transition: DECELERATE 1.0;
         }
         program {
            name: "busy1";
            signal: "e,state,busy,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 1.0;
            target: "busy_clip";
         }
         program {
            name: "busy_anim";
            signal: "e,state,busy,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3333;
            target: "busy";
            after: "busy_anim";
         }
         program {
            name: "busy2";
            signal: "e,state,busy,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 1.0;
            target: "busy_clip";
            after: "busy3";
         }
         program {
            name: "busy3";
            action: ACTION_STOP;
            target: "busy_anim";
         }
      }
   }
   group {
      name: "e/conf/wallpaper/main/mini";
      images {
         image: "e17_mini_button_shadow2.png" COMP;
         image: "glow.png" COMP;
      }
      parts {
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -3 -3;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               fill {
                  smooth: 0;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "glow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  offset: -10 -10;
               }
               rel2 {
                  to: "icon_box";
                  offset: 9 9;
               }
               fill.smooth: 0;
               image {
                  normal: "glow.png";
                  border: 10 10 10 10;
               }
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_zoom";
                  relative: 0.0 0.0;
                  offset: 4   4;
               }
               rel2 {
                  to: "icon_zoom";
                  relative: 1.0 1.0;
                  offset: -5  -5;
               }
               color: 255 255 255 255;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_zoom";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.2 -0.2;
               rel2.relative: 1.2 1.2;
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.05 -0.05;
               rel2.relative: 1.05 1.05;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: 2   2;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -3  -3;
               }
            }
         }
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.2;
            target: "glow";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
            target: "glow";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon_zoom";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon_zoom";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.3;
         }
         program {
            name: "thumb_ungen";
            signal: "e,action,thumb,ungen";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            target: "glow";
            after: "thumb_gen2";
         }
      }
   }
   group {
      name: "e/conf/wallpaper/main/mini-theme";
      images {
         image: "e17_mini_button_shadow2.png" COMP;
         image: "theme-label.png" COMP;
         image: "glow.png" COMP;
      }
      parts {
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -3 -3;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               fill {
                  smooth: 0;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "glow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_box";
                  offset: -10 -10;
               }
               rel2 {
                  to: "icon_box";
                  offset: 9 9;
               }
               fill.smooth: 0;
               image {
                  normal: "glow.png";
                  border: 10 10 10 10;
               }
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_zoom";
                  relative: 0.0 0.0;
                  offset: 4   4;
               }
               rel2 {
                  to: "icon_zoom";
                  relative: 1.0 1.0;
                  offset: -5  -5;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_zoom";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.2 -0.2;
               rel2.relative: 1.2 1.2;
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.05 -0.05;
               rel2.relative: 1.05 1.05;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: 2   2;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -3  -3;
               }
            }
         }
         part {
            name: "theme";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               aspect: 1.709677419 1.709677419;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.6 0.6;
                  offset: -1   -1;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0 1.0;
                  offset: -1  -1;
               }
               image.normal: "theme-label.png";
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.2;
            target: "glow";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
            target: "glow";
         }
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            target: "theme";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon_zoom";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon_zoom";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.3;
         }
         program {
            name: "thumb_ungen";
            signal: "e,action,thumb,ungen";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            target: "theme";
            target: "glow";
            after: "thumb_gen2";
         }
      }
   }
   group {
      name: "e/conf/wallpaper/main/mini-remote";
      images {
         image: "e17_mini_button_shadow2.png" COMP;
      }
      parts {
         part {
            name: "icon_box_shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -3 -3;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 4 4;
               }
               fill {
                  smooth: 0;
               }
               image {
                  normal: "e17_mini_button_shadow2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_box";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               align: 0.5 0.5;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: -1 -1;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 0 0;
               }
               color: 0 0 0 64;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  to: "icon_zoom";
                  relative: 0.0 0.0;
                  offset: 4   4;
               }
               rel2 {
                  to: "icon_zoom";
                  relative: 1.0 1.0;
                  offset: -5  -5;
               }
               color: 200 0 0 255;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "icon_zoom";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
            }
            description {
               state: "min" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.5 0.5;
               rel2.relative: 0.5 0.5;
            }
            description {
               state: "max" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.2 -0.2;
               rel2.relative: 1.2 1.2;
            }
            description {
               state: "max2" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.05 -0.05;
               rel2.relative: 1.05 1.05;
            }
         }
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: 2   2;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -3  -3;
               }
            }
         }
         part {
            name: "events";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program {
            name: "thumb_gen";
            signal: "e,action,thumb,gen";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            after: "thumb_gen2";
         }
         program {
            name: "thumb_gen2";
            action: STATE_SET "min" 0.0;
            target: "icon_zoom";
            after: "thumb_gen3";
         }
         program {
            name: "thumb_gen3";
            action: STATE_SET "max" 0.0;
            target: "icon_zoom";
            transition: DECELERATE 0.2;
            after: "thumb_gen4";
         }
         program {
            name: "thumb_gen4";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.1;
            after: "thumb_gen5";
         }
         program {
            name: "thumb_gen5";
            action: STATE_SET "max2" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.2;
            after: "thumb_gen6";
         }
         program {
            name: "thumb_gen6";
            action: STATE_SET "default" 0.0;
            target: "icon_zoom";
            transition: SINUSOIDAL 0.3;
         }
         program {
            name: "thumb_ungen";
            signal: "e,action,thumb,ungen";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "icon_box_shadow";
            target: "icon_box";
            target: "base";
            target: "icon_zoom";
            target: "e.swallow.content";
            target: "events";
            after: "thumb_gen2";
         }
      }
   }
   group {
      name: "e/conf/wallpaper/main/scrollframe";
      images {
         image: "arrow_up.png" COMP;
         image: "arrow_down.png" COMP;
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {
         //    part { name: "clipper";
         //       type: RECT;
         //       mouse_events: 0;
         //       description { state: "default" 0.0;
         //       }
         //    }
         part {
            name: "e.swallow.content";
            // clip_to: "clipper";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  1.0;
                  offset: -1   -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part {
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               max: 0 99999;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "sb_vbar_base";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1    0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "sb_vbar_runner";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "sb_vbar_base";
               rel1.offset: 1 0;
               rel2.to: "sb_vbar_base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_vbar_p1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.vbar";
               }
            }
         }
         part {
            name: "sb_vbar_p2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.vbar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.vbar";
            clip_to: "sb_vbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar_base";
            }
            description {
               state: "default" 0.0;
               min: 17 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: 0    0;
                  to: "sb_vbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_vbar_over1";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_over2";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            }
         }
         part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a1_arrow";
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a1";
               rel2.to: "sb_vbar_a1";
               image.normal: "arrow_up.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 -1;
               rel2.offset: -1 -2;
            }
         }
         part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 17 17;
               align: 0.5 1.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 9 9;
               rel1.to: "sb_vbar_a2";
               rel2.to: "sb_vbar_a2";
               image.normal: "arrow_down.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 1;
               rel2.offset: -1 0;
            }
         }
      }
      programs {
         program {
            name: "sb_vbar_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
         program {
            name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
         program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.vbar";
         }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: EVERYTHING ***/
///////////////////////////////////////////////////////////////////////////////

   group {
      name: "e/modules/everything/list";
      parts {
         part {
            name: "list_frame";
            type: RECT;
            description {
               state: "default" 0.0;
               visible: 0;
            }
         }
         part {
            name: "base";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "list_frame";
                  to_y: "input_base";
               }
               rel2 {
                  to_x: "list_frame";
                  to_y: "input_base";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  to: "list_frame";
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "input_base";
            type: RECT;
            description {
               state: "default" 0.0;
              rel1 {
              to_x: "base";
              }

              rel2 {
                  relative: 1.0 0.0;
               to_x: "base";
               offset: -1 1;
              }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               rel2.offset: -1 28;
            }
         }
         part {
            name: "list_win_bg";
            type: RECT;
            description {
               state: "default" 0.0;
               rel1.to_x: "base";
               rel1.to_y: "input_base";

               rel2.to: "base";
               /* rel2.offset: -1 -3; */
               color: 245 245 245 255;
            }
         }
         part {
            name: "bar_base";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "base";
                  offset: 0 -26;
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "base";
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "bar_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "bar_base";
                  offset: 2 2;
               }
               rel2 {
                  to: "bar_base";
                  offset: -2 -2;
               }
            }
            description {
               state: "faded" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
            }
         }
         part {
            name: "bar_bg";
            clip_to: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 32 25;
               max: 9999 25;
               fixed: 1 1;
               rel1 {
                  offset: -1 2;
                  to: "bar_base";
               }
               rel2 {
                  offset: -1 -3;
                  to: "bar_base";
               }
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.bar";
            clip_to: "bar_clip";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "bar_clip";
               rel1.offset: -1 0;
               rel2.to: "bar_clip";
               rel2.offset: -1 -1;
            }
         }
         part {
            name: "bar_over2";
            clip_to: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bar_bg";
               rel1.offset: -1 -2;
               rel2.to: "bar_bg";
               rel2.offset: 1 1;
               image {
                  normal: "bt_dis_shine.png";
                  border: 4 4 4 4;
               }
               color: 255 255 255 235;
            }
         }
         part {
            name: "bar_over1";
            clip_to: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bar_bg";
               rel1.offset: 0 -2;
               rel2.to: "bar_bg";
               rel2.offset: 1 -1;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
               color: 255 255 255 128;
            }
         }
         part {
            name: "input_bg";
            clip_to: "input_base";
            description {
               state: "default" 0.0;
               fixed: 1 1;
               min: 32 32;
               max: 9999 32;
               rel1 {
                  offset: -1 0;
                  to: "input_base";
               }
               rel2 {
                  /* offset: 1 0; */
                  to: "input_base";
               }
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
               color: 235 235 235 255;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            effect: SHADOW;
            scale: 1;
            clip_to: "input_base";
            description {
               state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.5;
               rel1 {
                  offset: 10  8;
                  to: "input_bg";
               }
               rel2 {
                  to: "input_bg";
                  relative: 0.0 1.0;
                  offset: 10  -4;

               }
               color: 60 60 60 255;
               color3: 255 255 255 68;
               text {
                  font: "Sans:style=Bold";
                  size: 11;
                  align: 0.0 0.5;
                  min: 1 1;
                  text_class: "fileman_typebuf";
               }
            }
         }
         part {
            name: "cursor";
            /* type: RECT; */
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 10 10;
               max: 10 10;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  relative: 1.0  0.0;
                  offset: -2    -2;
                  to: "e.text.label";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -2    -1;
                  to: "e.text.label";
               }
               image {
               normal: "icon_right_arrow.png";
               }

               color: 20 20 20 250;
            }
            description {
               state: "faded" 0.0;
               inherit: "default" 0.0;
               color: 20 20 20 100;
            }
         }
         part {
            name: "list_clip";
            type: RECT;
            clip_to: "base";
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 2 0;
                  to: "base";
               }
               rel2 {
                  relative: 1.0 0.0;
                  offset: -3  0;
                  to_y: "bar_base";
                  to_x: "base";
               }
            }
         }
         part {
            name: "list_bg";
            clip_to: "base";
            description {
               state: "default" 0.0;
               image.normal: "vgrad_light.png";
               rel1 {
                  to: "list_clip";
                  offset: 0 0;
               }
               rel2 {
                  to: "list_clip";
                  offset: 0  0;
               }
               fill.smooth: 0;
               color: 240 240 240 255;
            }
         }
         part {
            name: "e.swallow.list";
            type: SWALLOW;
            clip_to: "list_clip";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 32 170;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 3;
                  to: "list_clip";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1  -1;
                  to: "list_clip";
               }
            }
            description {
               state: "default" 1.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: -1.0 0.0;
               }
               rel2 {
                  relative: 0.0 1.0;
               }
            }
         }
         part {
            name: "e.swallow.list2";
            type: SWALLOW;
            clip_to: "list_clip";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 32 170;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 0.0;
                  offset: 0 3;
                  to: "list_clip";
               }
               rel2 {
                  relative: 2.0 1.0;
                  offset: -1  -1;
                  to: "list_clip";
               }
            }
            description {
               state: "default" 1.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
               }
            }
         }
         part {
            name: "list_over";
            clip_to: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: -1 -1;
                  to: "list_bg";
               }
               rel2 {
                  offset: -1 -1;
                  to: "list_bg";
               }
               image {
                  normal: "inset_sunk.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
               /* color: 200 200 200 255; */
            }
         }
         part {
            name: "box";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "input_base";
               offset: 1 0;
               }
               rel2 {
                  to: "base";
               offset: -2 -1;
               }
               image {
                  normal: "everything_box.png";
                  border: 4 4 4 4;
                  middle: 0;
               }
               fill.smooth : 1;
            }
         }
      }
      programs {
         program {
            name: "blink_off";
            signal: "show";
            source: "";
            action: STATE_SET "faded" 0.0;
            transition: SINUSOIDAL 0.6;
            target: "cursor";
            after: "blink_on";
         }
         program {
            name: "blink_on";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.35;
            target: "cursor";
            after: "blink_off";
         }
        program {
            name: "show_list";
            signal: "e,state,list_show";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "base";
         }
         program {
            name: "hide_list";
            signal: "e,state,list_hide";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.08;
            target: "base";
         }
         program {
            name: "show_entry";
            signal: "e,state,entry_show";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "input_base";
         }
         program {
            name: "hide_entry";
            signal: "e,state,entry_hide";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.08;
            target: "input_base";
         }
         program {
            name: "update_list";
            signal: "e,signal,update";
            source: "e";
            action: STATE_SET "faded" 0.0;
            /* transition: SINUSOIDAL 0.5; */
            target: "bar_clip";
            after: "update_list2";
         }
         program {
            name: "update_list2";
            action: STATE_SET "default" 0.0;
            /* transition: SINUSOIDAL 0.15; */
            target: "bar_clip";
         }

         program {
            name: "slide_left";
            signal: "e,action,slide,left";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "e.swallow.list";
            target: "e.swallow.list2";
            after: "slide_left2";
         }
         program {
            name: "slide_left2";
            action: STATE_SET "default" 1.0;
            transition: ACCELERATE 0.15;
            target: "e.swallow.list";
            target: "e.swallow.list2";
            after: "left_end";
         }
         program { name: "left_end";
            action: SIGNAL_EMIT "e,action,slide,left,finished" "";
         }
         program {
            name: "slide_right";
            signal: "e,action,slide,right";
            source: "e";
            action: STATE_SET "default" 1.0;
            target: "e.swallow.list";
            target: "e.swallow.list2";
            after: "slide_right2";
         }
         program {
            name: "slide_right2";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.15;
            target: "e.swallow.list";
            target: "e.swallow.list2";
            after: "right_end";
         }
         program { name: "right_end";
            action: SIGNAL_EMIT "e,action,slide,right,finished" "";
         }
         program {
            name: "slide_default";
            signal: "e,action,slide,default";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "e.swallow.list";
            target: "e.swallow.list2";
         }
      }
   }
   group {
      name: "e/modules/everything/main";
      images {
         image: "inset_sunk.png" COMP;
         image: "everything_box.png" COMP;
         image: "everything_item_bg.png" COMP;
         image: "vgrad_dark.png" COMP;
         image: "bt_dis_hilight.png" COMP;
         image: "bt_dis_shine.png" COMP;
         image: "bt_dis_base.png" COMP;
         image: "bt_base2.png" COMP;
         image: "outline.png" COMP;
         image: "icon_left_arrow.png" COMP;
         image: "icon_right_arrow.png" COMP;
         image: "toolbar_sel.png" COMP;
         image: "icon_right_arrow.png" COMP;
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {

         /*************** top ***************/
         part {
            name: "win";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 286 48;
               rel2.relative: 1.0 0.0;
               rel2.offset: -1 48;
            }
         }
         part {
            name: "list";
            source: "e/modules/everything/list";
            type: GROUP;
            description {
               state: "default" 0.0;
               visible: 1;
               min: 300 155;
               rel1 {
                  to_y: "frame";
                  offset: -1 -3;
                  relative: 0.0 1.0;
              }
              rel2 {
                 offset: 0 -1;
               }
            }
         }
         part {
            name: "bar_base";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "frame";
               }
               rel2 {
                  to: "frame";
               }
            }
         }
         part {
            name: "bar_bg";
            clip_to: "bar_base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               /* min: 32 50;
                * max: 9999 50; */
               fixed: 1 1;
               rel1 {
                  offset: -2 -1;
                  to: "bar_base";
               }
               rel2 {
                  offset: 1 0;
                  to: "bar_base";
               }
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "frame";
            mouse_events: 0;;
            description {
               state: "default" 0.0;
               rel1.to: "win";
               rel2.to: "win";
               image {
                  normal: "everything_box.png";
                  border: 4 4 4 4;
                  middle: 0;
               }
               fill.smooth : 1;
              color: 215 215 215 255;
            }
         }
         part {
            name: "selector_frame";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  to: "frame";
               }
               rel2 {
                  offset: -2 -1;
                  to: "frame";
               }
            }
         }
         part {
            name: "subject_selector";
            type: GROUP;
            source: "e/modules/everything/selector_item";
            clip_to: "selector_frame";
            description {
               state: "default" 0.0;
               /* visible: 0; */
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 2;
                  to: "selector_frame";
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: -1 -1;
                  to_y: "selector_frame";
               }
            }
            description {
               state: "wide" 0;
               inherit: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: -0.5 0.0;
                  offset: 0 2;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 0 -1;
               }
            }
         }
         part {
            name: "action_selector";
            type: GROUP;
            source: "e/modules/everything/selector_item";
            clip_to: "selector_frame";
            description {
               state: "default" 0.0;
               /* visible: 0; */
               rel1 {
                  relative: 0.5 0.0;
                  offset: 0 2;
                  to: "selector_frame";
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
                  to: "selector_frame";
               }
            }
            description {
               state: "wide" 0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 2;
               }
               rel2 {
                  relative: 0.5 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "object_selector";
            type: GROUP;
            source: "e/modules/everything/selector_item";
            clip_to: "selector_frame";
            description {
               state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: 0 2;
                  to: "selector_frame";
               }
               rel2 {
                  relative: 1.5 1.0;
                  offset: -1 -1;
                  to: "selector_frame";
               }
            }
            description {
               state: "wide" 0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  relative: 0.5 0.0;
                  offset: 0 2;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }

         part {
            name: "bar_over2";
            clip_to: "bar_base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bar_bg";
               rel1.offset: -2 -2;
               rel2.to: "bar_bg";
               rel2.offset: 1 2;
               image {
                  normal: "bt_dis_shine.png";
                  border: 4 4 4 4;
               }
            }
         }
         part {
            name: "bar_over1";
            clip_to: "bar_base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bar_bg";
               rel1.offset: -2 -2;
               rel2.to: "bar_bg";
               rel2.offset: 1 2;
               rel2.relative: 1.0 0.45;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
               color: 255 255 255 235;
            }
         }
      }
      programs {
         program {
            name: "object_selector_hide";
            signal: "e,state,object_selector_hide";
            source: "e";
            action: STATE_SET "default" 0.00;
            transition: SINUSOIDAL 0.15;
            target: "object_selector";
            target: "subject_selector";
            target: "action_selector";
         }
         program {
            name: "object_selector_show";
            signal: "e,state,object_selector_show";
            source: "e";
            action: STATE_SET "wide" 0.00;
            transition: SINUSOIDAL 0.2;
            target: "object_selector";
            target: "subject_selector";
            target: "action_selector";
         }
      }
   }
   group {
      name: "e/modules/everything/selector_item";
      parts {
         part {
            name: "clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 200 200 200 20;
               image {
                  normal: "toolbar_sel.png";
                  border: 3 3 2 2;
               }
               fill.smooth: 1;
               rel1.offset: 0 -1;
               rel2.offset: 2 -1;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 200 200 200 255;
            }
         }
         part {
            name: "inner_clip";
            type: RECT;
            clip_to: "clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.offset: 6   2;
               rel2.offset: -5   -5;
            }
         }
         part {
            name: "icon_clip";
            type: RECT;
            clip_to: "inner_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
            }
            description {
               state: "faded" 0.0;
               color: 255 255 255 120;
            }
         }
         part {
            name: "e.swallow.icons";
            type: SWALLOW;
            clip_to: "icon_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 50 44;
               max: 50 44;
               aspect: 1.0 1.0;
               align: 0.0 0.5;
               aspect_preference: VERTICAL;
               rel1 {
                  offset: 5   5;
               }
               rel2 {
                  offset: -1  -8;
               }
            }
         }
         part {
            name: "e.swallow.thumb";
            type: SWALLOW;
            clip_to: "icon_clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 50 44;
               max: 50 44;
               aspect: 1.0 1.0;
               align: 0.0 0.5;
               aspect_preference: VERTICAL;
               rel1 {
                  offset: 5   5;
               }
               rel2 {
                  offset: -1  -8;
               }
            }
         }

         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 1.0;
               fixed: 0 1;
               rel1.to: "e.swallow.icons";
               rel1.relative: 1.0 0.0;
               rel2.to: "clip";
               rel1.offset: 2 3;
               rel2.offset: -6 -7;
               /* visible: 0; */
               color: 24 24 24 255;
               text {
                  font: "Sans:style=Bold";
                  size: 9;
                  min: 0 1;
                  align: 0.0 1.0;
                  text_class: "fileman_typebuf";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 255;
               /* visible: 1; */
            }
         }
         part {
            name: "e.text.plugin";
            type: TEXT;
            clip_to: "inner_clip";
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               align: 1.0 0.0;
               rel1 {
                  offset: 6 6;
                  /* to_x: "e.swallow.icons"; */
               }
               rel2.offset: -10 -1;
               color: 20 20 20 255;
               color3: 0 0 0 0;
               text {
                  font: "Sans";
                  size: 9;
                  min: 0 1;
                  align: 1.0 0.0;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;

               color: 240 240 240 255;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            transition: SINUSOIDAL 0.1;
            /* target: "border";
             * target: "border_bg"; */
            target: "bg";
            target: "e.text.label";
            target: "e.text.plugin";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.2;
            /* target: "border";
             * target: "border_bg"; */
            target: "bg";
            target: "e.text.label";
            target: "e.text.plugin";
         }
         program {
            name: "update";
            signal: "e,signal,update";
            source: "e";
            action: STATE_SET "faded" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_clip";
            after: "show_icon";
         }
         program {
            name: "show_icon";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.3;
            target: "icon_clip";
         }
         program {
            name: "thumb_show";
            signal: "e,action,thumb,show";
            source: "e";
            action: STATE_SET "faded" 0.0;
            /* transition: SINUSOIDAL 0.05; */
            target: "icon_clip";
            after: "thumb_show2";
         }
         program {
            name: "thumb_show2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "icon_clip";
         }
      }
   }

   group {
      name: "e/modules/everything/tab_item";
      min: 50 10;
      parts {
         part {
            name: "clip";
	    type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
            rel1.relative: 0.05 0.0;
            rel2.relative: 0.95 1.0;
            }
         }
         part {
            name: "label2";
            type: TEXT;
            scale: 1;
            clip_to: "clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 1;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               color: 0 0 0 255;
               text {
                  font: "Sans:style";
                  text_source: "e.text.label";
                  size: 10;
                  min: 0 1;
                  align: 0.5 0.5;
	          text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 10 10 10 0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 200 200 200 20;
               image {
                  normal: "toolbar_sel.png";
                  border: 2 2 0 0;
               }
               fill.smooth: 1;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 200 200 200 255;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 1;
               rel1.to: "clip";
               rel2.to: "clip";
               rel1.offset: 5 3;
               rel2.offset: -6 -1;
               visible: 0;
               color: 245 245 245 255;
               text {
                  font: "Sans:style=Bold";
                  size: 9;
                  min: 0 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
         }
      }
   }

   group {
      name: "e/modules/everything/tab_item/back";
      min: 50 10;
      parts {
         part {
            name: "clip";
	    type: RECT;
	    mouse_events: 0;
            description {
               state: "default" 0.0;
            rel1.relative: 0.05 0.0;
            rel2.relative: 0.95 1.0;
            }
         }
         part {
            name: "label2";
            type: TEXT;
            scale: 1;
            clip_to: "clip";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 1;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
               color: 0 0 0 255;
               text {
                  font: "Sans:style";
                  text_source: "e.text.label";
                  size: 10;
                  min: 0 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 10 10 10 0;
               visible: 0;
            }
         }
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 40;
               image {
                  normal: "toolbar_sel.png";
                  border: 2 2 0 0;
               }
               fill.smooth: 1;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 245 245 245 250;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            mouse_events: 0;
            clip_to: "clip";
            scale: 1;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.5;
               fixed: 0 1;
               rel1.to: "clip";
               rel2.to: "clip";
               rel1.offset: 5 3;
               rel2.offset: -6 -1;
               visible: 0;
               color: 245 245 245 255;
               text {
                  font: "Sans:style=Bold";
                  size: 9;
                  min: 0 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_active";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
            transition: LINEAR 0.1;
         }
         program {
            name: "go_passive";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "e.text.label";
            target: "label2";
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
/*** EVERYTHING THUMB VIEW ***/

   group {
      name: "e/modules/everything/thumbview/item/thumb";
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: -1 -3;
               }
               rel2 {
                  to: "base";
                  offset: 0 2;
               }
               fill.smooth: 0;
               image {
                  normal: "everything_item_bg.png";
                  border: 5 5 5 5;
               }
               color: 255 255 255 10;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 190;
            }
         }
         part {
            name: "outline";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "outline.png";
                  border: 5 5 5 5;
               }
               color: 0 0 0 30;
            }
            description {
            state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 220;
            }

         }
         part {
            name: "bg_mark";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "bg";
               rel2.to: "bg";
               fill.smooth: 0;
               image {
                  normal: "everything_item_bg.png";
                  border: 5 5 5 5;
               }
            color: 255 255 255 0;
            }
            description {
               state: "marked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 60;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0   4;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -5  -5;
               }
               color: 255 255 255 255;
            }
         }
         part {
            name: "clip";
            mouse_events: 0;
            type: RECT;
            /* clip_to: "base"; */
            description {
               state: "default" 0.0;
               rel1.to: "base";
               rel2.to: "base";
               color: 225 225 225 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.icon";
            clip_to: "clip";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: 4   0;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: -3  -11;
               }
            }
         }
         part {
            name: "e.swallow.thumb";
            clip_to: "clip";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1 {
                  to: "base";
                  offset: 6   6;
               }
               rel2 {
                  to: "base";
                  offset: -5  -20;
               }
            }
         }
         part {
            name: "arrow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 12 12;
               max: 12 12;
               /* aspect_preference: */
               visible: 0;
               align: 1.0 0.0;
               rel1 {
                  to: "base";
                  relative: 1.0 0.0;
                  offset: -3 2;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 0.0;
                  offset: -3 2;
               }
               image {
                  normal: "icon_right_arrow.png";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            clip_to: "base";
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1 {
                  offset: 2 -12;
                  relative: 0.0 1.0;
               }
               rel2.offset: -2 -4;
               color3: 20 20 20 60;
               color: 255 255 255 255;
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.5 0.0;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
	       inherit: "default" 0.0;
               rel1 {
                  offset: 2 -12;
                  relative: 0.0 1.0;
               }
               rel2.offset: -2 -4;
               color: 250 250 250 255;
               color3: 20 20 20 40;
            }
         }
         
         part {
            name: "over_clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               visible: 1;
            }
            description {
               state: "hidden" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.5  -0.5;
               rel2.relative: 1.5  1.5;
               color: 255 255 255 0;
               visible: 1;
            }
            description {
               state: "huge" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 0;
               rel1.relative: -1.5 -1.5;
               rel2.relative: 2.5  2.5;
               visible: 1;
            }
         }

         part {
            name: "over";
            type: PROXY;
            mouse_events: 0;
            clip_to: "over_clip";
            description {
               state: "default" 0.0;
               source: "e.swallow.icon";
               rel1.to: "over_clip";
               rel2.to: "over_clip";
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part {
            name: "over2";
            type: PROXY;
            mouse_events: 0;
            clip_to: "over_clip";
            description {
               state: "default" 0.0;
               source: "e.swallow.thumb";
               rel1.to: "over_clip";
               rel2.to: "over_clip";
               visible: 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "outline";
            target: "e.text.label";
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "bg";
            target: "outline";
            target: "e.text.label";
         }
         program {
            name: "mark";
            signal: "e,state,marked";
            source: "e";
            action: STATE_SET "marked" 0.0;
            target: "bg_mark";
            transition: ACCELERATE 0.15;
         }
         program {
            name: "unmark";
            signal: "e,state,unmarked";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "bg_mark";
         }
         program {
            name: "arrow_show";
            signal: "e,state,browseable";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "arrow";
         }
         program {
            name: "thumb_show_delayed";
            signal: "e,action,thumb,show_delayed";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clip";
            after: "thumb_show2";
         }
         program {
            name: "thumb_show";
            signal: "e,action,thumb,show";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "clip";
         }
         program {
            name: "thumb_show2";
            action: STATE_SET "visible" 0.0;
	    transition: DECELERATE 0.1;
            target: "clip";
         }
	 program {
            name: "go_big";
            action: STATE_SET "visible" 0.0;
            target: "over_clip";
            target: "over";
            target: "over2";
            after: "go_big2";
	 }

	 program {
            name: "go_big2";
            action: STATE_SET "huge" 0.0;
            transition: DECELERATE 0.4;
            target: "over_clip";
            after: "go_big3";
	 }

	 program {
            name: "go_big3";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.2;
            target: "over_clip";
            target: "over";
            target: "over2";
	 }
	 program {
            name: "action_go";
            signal: "e,action,go";
            source: "e";
            action: ACTION_STOP;
            target: "go_big";
            target: "go_big2";
            target: "go_big3";
            after: "go_big";
	 }
      }
   }
   group {
      name: "e/modules/everything/thumbview/item/list";
      parts {
         part {
            name: "bg";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
                  to: "base";
                  offset: -1 -1;
               }
               rel2 {
                  to: "base";
                  offset: -2 2;
               }
               fill.smooth: 0;
               image {
                  normal: "everything_item_bg.png";
                  border: 5 5 5 5;
               }
               color: 0 0 0 10;
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 190;
            }
         }
         part {
            name: "outline";
	    mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
               image {
                  normal: "outline.png";
                  border: 5 5 5 5;
               }
               color: 0 0 0 30;
            }
             description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 220;
            }
         }
         part {
            name: "bg_mark";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               visible: 0;
               rel1.to: "bg";
               rel2.to: "bg";
               fill.smooth: 0;
               color: 255 255 255 0;
               image {
                  normal: "everything_item_bg.png";
                  border: 5 5 5 5;
               }
            }
            description {
               state: "marked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 60;
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0   3;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -5  -4;
               }
            }
         }
         part {
            name: "clip";
            mouse_events: 0;
            type: RECT;
            clip_to: "base";
            description {
               state: "default" 0.0;
               color: 225 225 225 0;
               rel1 {
                  to: "base";
                  relative: 0.0 0.0;
                  offset: 2   2;
               }
               rel2 {
                  to: "base";
                  relative: 0.0 1.0;
                  offset: 40   -1;
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part {
            name: "e.swallow.icon";
            clip_to: "clip";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "clip";
               rel2.to: "clip";
            }
         }
         part {
            name: "e.swallow.thumb";
            clip_to: "clip";
            type: SWALLOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               rel1.to: "clip";
               rel2.to: "clip";
            }
         }
         part {
            name: "arrow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.0 0.5;
                min: 16 16;
                max: 16 16;
                visible: 0;
               rel1 {
                  to: "base";
                  relative: 1.0 0.0;
                  offset: -21  6;
               }
               rel2 {
                  to: "base";
                  relative: 1.0 1.0;
                  offset: 1 -7;
               }
               image {
                  normal: "icon_right_arrow.png";
               }
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               rel1 {
                  to: "base";
                  relative: 1.0 0.0;
                  offset: -21  6;
               }
            }
         }
         part {
            name: "e.text.label";
            type: TEXT;
            clip_to: "base";
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 255;
               color3: 255 255 255 30;
               rel1 {
                  to_x: "clip";
                  to_y: "base";
                  offset: 5 2;
		  relative: 1.0 0.0;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -1;
                  to_x: "arrow";
	          to_y: "spacer";
               }
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.0;
                  text_class: "fileman_icon";
               }
            }
            description {
               state: "selected" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
               color3: 20 20 20 30;
            }
         }
         part {
            name: "e.text.detail";
            type: TEXT;
            clip_to: "base";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 1;
               color: 80 80 80 255;
               rel1 {
                  to_x: "clip";
                  to_y: "base";
                  offset: 5 6;
                  relative: 1.0 0.5;
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 4 -4;
                  to_y: "base";
                  to_x: "arrow";
               }
               text {
                  font: "Sans";
                  size: 8;
                  min: 0 1;
                  align: 0.0 0.0;
                  text_class: "fileman_icon";
               }
            }
            description {
	        state: "selected" 0.0;
                inherit: "default" 0.0;
                color: 200 200 200 255;
            }
         }
         part {
            name: "spacer";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
	       visible: 0;
	       rel1.to: "base";
	       rel1.relative: 0.0 1.0;
	       rel2.to: "base";
            }
            description {
               state: "detail" 0.0;
	       inherit: "default" 0.0;
	       rel1.to: "e.text.detail";
	       rel2.to: "e.text.detail";
            }
	 }
         part {
            name: "event";
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "sel";
            signal: "e,state,selected";
            source: "e";
            action: STATE_SET "selected" 0.0;
            target: "bg";
            target: "outline";
	    target: "e.text.label";
	    target: "e.text.detail";
            transition: ACCELERATE 0.0;
         }
         program {
            name: "unsel";
            signal: "e,state,unselected";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "bg";
            target: "outline";
	    target: "e.text.label";
	    target: "e.text.detail";
         }
         program {
            name: "mark";
            signal: "e,state,marked";
            source: "e";
            action: STATE_SET "marked" 0.0;
            target: "bg_mark";
            transition: ACCELERATE 0.15;
         }
         program {
            name: "unmark";
            signal: "e,state,unmarked";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.2;
            target: "bg_mark";
         }
         program {
            name: "arrow_show";
            signal: "e,state,browseable";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "arrow";
         }
         program {
            name: "thumb_show_delayed";
            signal: "e,action,thumb,show_delayed";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "clip";
            transition: DECELERATE 0.1;
         }
         program {
            name: "thumb_show";
            signal: "e,action,thumb,show";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "clip";
         }
         program {
            name: "detail_show";
            signal: "e,state,detail,show";
            source: "e";
            action: STATE_SET "detail" 0.0;
            /* transition: ACCELERATE 0.08; */
            target: "spacer";
         }
         program {
            name: "detail_hide";
            signal: "e,state,detail,hide";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "spacer";
         }
      }
   }
   
   group {
      name: "e/modules/everything/thumbview/main/window";
      parts {
         part {
            name: "clip";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 0;
            }
          description {
               state: "visible" 0.0;
               color: 255 255 255 255;
            }
        }
        part {
            name: "e.swallow.list";
            type: SWALLOW;
          clip_to: "clip";
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 6   1;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -3  -3;
               }
            }
         }
         part {
            name: "left_arrow";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               image.normal: "icon_left_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               min: 32 32;
               max: 32 32;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "right_arrow";
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               image.normal: "icon_right_arrow.png";
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 1.0 0.5;
               min: 32 32;
               max: 32 32;
               color: 255 255 255 0;
            }
            description {
               state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part {
            name: "event";
            repeat_events: 1;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program {
            name: "go_into_show";
            signal: "e,action,show,into";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.5;
            target: "right_arrow";
         }
         program {
            name: "go_into_hide";
            signal: "e,action,hide,into";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "right_arrow";
            transition: LINEAR 0.5;
         }
         program {
            name: "go_back_show";
            signal: "e,action,show,back";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.5;
            target: "left_arrow";
         }
         program {
            name: "go_back_hide";
            signal: "e,action,hide,back";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "left_arrow";
            transition: LINEAR 0.5;
         }
         program {
            name: "hiding";
            signal: "e,action,hide,list";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "clip";
            transition: LINEAR 0.25;
         }
         program {
            name: "showing";
            signal: "e,action,show,list";
            source: "e";
            action: STATE_SET "visible" 0.0;
            target: "clip";
            transition: LINEAR 0.15;
         }
      }
   }
   group {
      name: "e/modules/everything/thumbview/main/scrollframe";
      images {
         image: "bt_sm_base1.png" COMP;
         image: "bt_sm_base2.png" COMP;
         image: "bt_sm_shine.png" COMP;
         image: "bt_sm_hilight.png" COMP;
         image: "sb_runnerv.png" COMP;
      }
      parts {
         part {
            name: "e.swallow.content";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.offset: 0 0;
               rel2 {
                  relative: 0.0  1.0;
                  offset: 2   -1;
                  to_x: "sb_vbar";
               }
            }
         }
         part {
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 9 17;
               align: 1.0 0.0;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
            description {
               state: "hidden" 0.0;
               visible: 0;
               max: 0 99999;
               rel1 {
                  relative: 1.0 0.0;
                  offset: -1 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
         part {
            name: "sb_vbar_base";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0  1.0;
                  offset: 0    -1;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0  0.0;
                  offset: -1    0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "sb_vbar_runner";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               max: 3 99999;
               rel1.to: "sb_vbar_base";
               rel1.offset: -2 0;
               rel2.to: "sb_vbar_base";
               image {
                  normal: "sb_runnerv.png";
                  border: 0 0 4 4;
               }
               fill.smooth: 0;
            }
         }
         part {
            name: "sb_vbar_p1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "sb_vbar_a1";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "e.dragable.vbar";
               }
            }
         }
         part {
            name: "sb_vbar_p2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 1.0;
                  to: "e.dragable.vbar";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to: "sb_vbar_a2";
               }
            }
         }
         part {
            name: "e.dragable.vbar";
            clip_to: "sb_vbar";
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar_base";
            }
            description {
               state: "default" 0.0;
               min: 9 17;
               rel1 {
                  relative: 0.5  0.5;
                  offset: -1    0;
                  to: "sb_vbar_base";
               }
               rel2 {
                  relative: 0.5  0.5;
                  offset: -1    0;
                  to: "sb_vbar_base";
               }
               image {
                  normal: "bt_sm_base2.png";
                  border: 6 6 6 6;
               }
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_sm_base1.png";
            }
         }
         part {
            name: "sb_vbar_over1";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.relative: 1.0 0.5;
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_hilight.png";
                  border: 6 6 6 0;
               }
            color: 180 180 180 255;
            }
         }
         part {
            name: "sb_vbar_over2";
            clip_to: "sb_vbar";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1.to: "e.dragable.vbar";
               rel2.to: "e.dragable.vbar";
               image {
                  normal: "bt_sm_shine.png";
                  border: 6 6 6 0;
               }
            color: 180 180 180 255;
            }
         }
         part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 9 17;
               align: 0.5 0.0;
               /* aspect: 1.0 1.0; */
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
         part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 9 17;
               align: 0.5 1.0;
               /* aspect: 1.0 1.0; */
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 0    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
      }
      programs {
         program {
            name: "sb_vbar_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
         }
         program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE  0.0 1.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            target: "e.dragable.vbar";
         }
         program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            target: "e.dragable.vbar";
         }
      }
   }

   group {
      name: "e/modules/everything/textblock";
      styles {
         style {
            name: "everything_textblock_style";
            base: "font=Sans font_size=10 align=left color=#000";
            tag: "hilight" "+ font=Sans:style=Bold color=#0c0c0c";
            tag: "b" "+ font=Sans:style=Bold font_size=9";
            tag: "br" "\n";
            tag: "/title" "- \n \n";
         }
      }
      parts {
         part {
            name: "e.textblock.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description {
               state: "default" 0.0;
               rel1.offset: 4 4;
               rel2.offset: -5 -5;
               text {
                  style: "everything_textblock_style";
                  min: 1 1;
               }
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
/*** MOD: CONF_COLORS ***/

   group {
      name: "e/modules/conf_colors/preview/solid";
      parts {
         part {
            name: "e.rect";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               color_class: "color_preview";
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
      }
   }
   group {
      name: "e/modules/conf_colors/preview/text";
      parts {
         part {
            name: "e.text";
            type: TEXT;
            effect: OUTLINE_SOFT_SHADOW;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               color2: 255 255 255 255;
               color3: 255 255 255 255;
               color_class: "color_preview";
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               text {
                  font: "Sans:style=Bold";
                  size: 16;
                  text: "Aa";
                  min: 1 1;
               }
            }
         }
      }
   }
   group {
      name: "e/modules/conf_colors/preview/unknown";
      parts {
         part {
            name: "c1";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               color_class: "color_preview_c1";
               rel1 {
                  relative: 0.0 0.0;
                  offset: 0 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -7 -1;
               }
            }
         }
         part {
            name: "c2";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               color_class: "color_preview_c2";
               rel1 {
                  relative: 1.0 0.0;
                  offset: -6 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -4 -1;
               }
            }
         }
         part {
            name: "c3";
            type: RECT;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               color: 255 255 255 255;
               color_class: "color_preview_c3";
               rel1 {
                  relative: 1.0 0.0;
                  offset: -3 0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
            }
         }
      }
   }

/////////////////////////////////////////////////////////////////////////////
/*** MOD: CONF ***/

	group {
		name: "e/modules/conf/main";
		images {
                        image: "icon_configuration.png" COMP;
			image: "bt_base1.png" COMP;
			image: "bt_base2.png" COMP;
			image: "bt_hilight.png" COMP;
			image: "bt_shine.png" COMP;
			image: "bt_glow.png" COMP;
		}
		min: 16 16;
		max: 128 128;
		parts {
			part {
				name: "button_image";
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.5;
               min: 32 16;
					image {
						normal: "bt_base2.png";
						border: 7 7 7 7;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "bt_base1.png";
				}
				program {
					name: "button_down";
					signal: "mouse,down,1";
					source: "button_image";
					action: STATE_SET "clicked" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_up";
					signal: "mouse,up,1";
					source: "button_image";
					action: STATE_SET "default" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_click";
					signal: "mouse,clicked,1";
					source: "button_image";
					action: SIGNAL_EMIT "e,action,conf" "";
				}
			}
			part {
				name: "icon";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					visible: 1;
					image.normal: "icon_configuration.png";
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset: 3    3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -4   -4;
						to: "button_image";
					}
				}
			}
			part {
				name: "over1";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					rel2.relative: 1.0 0.5;
					image {
						normal: "bt_hilight.png";
						border: 7 7 7 0;
					}
				}
			}
			part {
				name: "over2";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					image {
						normal: "bt_shine.png";
						border: 7 7 7 7;
					}
				}
			}
			part {
				name: "over3";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "bt_glow.png";
						border: 12 12 12 12;
					}
					fill.smooth : 0;
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
/*** MOD: ILLUME-HOME-TOGGLE ***/

	group {
		name: "e/modules/illume_home_toggle/main";
		images.image: "illume-home.png" COMP;
		images {
			image: "bt_base1.png" COMP;
			image: "bt_base2.png" COMP;
			image: "bt_hilight.png" COMP;
			image: "bt_shine.png" COMP;
			image: "bt_glow.png" COMP;
		}
		min: 16 16;
		max: 128 128;
		parts {
			part {
				name: "button_image";
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.5;
               min: 32 16;
					image {
						normal: "bt_base2.png";
						border: 7 7 7 7;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "bt_base1.png";
				}
				program {
					name: "button_down";
					signal: "mouse,down,1";
					source: "button_image";
					action: STATE_SET "clicked" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_up";
					signal: "mouse,up,1";
					source: "button_image";
					action: STATE_SET "default" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_click";
					signal: "mouse,clicked,1";
					source: "button_image";
					action: SIGNAL_EMIT "e,action,home" "";
				}
			}
			part {
				name: "icon";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "illume-home.png";
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset: 3    3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -4   -4;
						to: "button_image";
					}
				}
			}
			part {
				name: "over1";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					rel2.relative: 1.0 0.5;
					image {
						normal: "bt_hilight.png";
						border: 7 7 7 0;
					}
				}
			}
			part {
				name: "over2";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					image {
						normal: "bt_shine.png";
						border: 7 7 7 7;
					}
				}
			}
			part {
				name: "over3";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "bt_glow.png";
						border: 12 12 12 12;
					}
					fill.smooth : 0;
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
/*** MOD: ILLUME-KBD-TOGGLE ***/

	group {
		name: "e/modules/illume_kbd_toggle/main";
		images.image: "illume-kbd.png" COMP;
		images.image: "illume-kbd-on.png" COMP;
		images {
			image: "bt_base1.png" COMP;
			image: "bt_base2.png" COMP;
			image: "bt_hilight.png" COMP;
			image: "bt_shine.png" COMP;
			image: "bt_glow.png" COMP;
		}
		min: 16 16;
		max: 128 128;
		parts {
			part {
				name: "button_image";
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.5;
					min: 32 16;
					image {
						normal: "bt_base2.png";
						border: 7 7 7 7;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "bt_base1.png";
				}
				program {
					name: "button_down";
					signal: "mouse,down,1";
					source: "button_image";
					action: STATE_SET "clicked" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_up";
					signal: "mouse,up,1";
					source: "button_image";
					action: STATE_SET "default" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "enable";
					signal: "mouse,clicked,1";
					source: "button_image";
					action: SIGNAL_EMIT "e,action,vkbd,enable" "";
				}
			}
			part {
				name: "icon";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "illume-kbd.png";
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset: 3    3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -4   -4;
						to: "button_image";
					}
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					image.normal: "illume-kbd-on.png";
				}
				program { name: "state_on";
				   signal: "e,state,vkbd,on";
				   source: "e";
				   action: STATE_SET "on" 0.0;
				   target: "icon";
				   target: "on";
				}
				program { name: "state_off";
				   signal: "e,state,vkbd,off";
				   source: "e";
				   action: STATE_SET "default" 0.0;
				   target: "icon";
				   target: "on";
				}
			}
			part { name: "on";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
					rel1.to: "button_image";
					rel2.to: "button_image";
				}
				description { state: "on" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				program { name: "disable";
					signal: "mouse,clicked,1";
					source: "on";
					action: SIGNAL_EMIT "e,action,vkbd,disable" "";
				}
			}
			part {
				name: "over1";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					rel2.relative: 1.0 0.5;
					image {
						normal: "bt_hilight.png";
						border: 7 7 7 0;
					}
				}
			}
			part {
				name: "over2";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					image {
						normal: "bt_shine.png";
						border: 7 7 7 7;
					}
				}
			}
			part {
				name: "over3";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "bt_glow.png";
						border: 12 12 12 12;
					}
					fill.smooth : 0;
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
/*** MOD: ILLUME-MODE-TOGGLE ***/

	group {
		name: "e/modules/illume_mode_toggle/main";
		images.image: "illume-mode-single.png" COMP;
		images.image: "illume-mode-dual-left.png" COMP;
		images.image: "illume-mode-dual-top.png" COMP;
		images {
			image: "bt_base1.png" COMP;
			image: "bt_base2.png" COMP;
			image: "bt_hilight.png" COMP;
			image: "bt_shine.png" COMP;
			image: "bt_glow.png" COMP;
		}
		min: 16 16;
		max: 128 128;
		parts {
			part {
				name: "button_image";
				mouse_events: 1;
				scale: 1;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 0.5 0.5;
					min: 32 16;
					image {
						normal: "bt_base2.png";
						border: 7 7 7 7;
					}
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					image.normal: "bt_base1.png";
				}
				program {
					name: "button_down";
					signal: "mouse,down,1";
					source: "button_image";
					action: STATE_SET "clicked" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "button_up";
					signal: "mouse,up,1";
					source: "button_image";
					action: STATE_SET "default" 0.0;
					target: "button_image";
					target: "over3";
				}
				program {
					name: "enable";
					signal: "mouse,clicked,1";
					source: "button_image";
					action: SIGNAL_EMIT "e,action,mode,dual,top" "";
				}
			}
			part {
				name: "icon";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					aspect: 1.0 1.0;
					aspect_preference: BOTH;
					image.normal: "illume-mode-single.png";
					rel1 {
						to: "button_image";
						relative: 0.0  0.0;
						offset: 3    3;
					}
					rel2 {
						relative: 1.0  1.0;
						offset: -4   -4;
						to: "button_image";
					}
				}
				description { state: "dual_left" 0.0;
					inherit: "default" 0.0;
					image.normal: "illume-mode-dual-left.png";
				}
				description { state: "dual_top" 0.0;
					inherit: "default" 0.0;
					image.normal: "illume-mode-dual-top.png";
				}
				program { name: "state_single";
				   signal: "e,mode,single";
				   source: "e";
				   action: STATE_SET "default" 0.0;
				   target: "icon";
				   target: "dual_left";
				   target: "dual_top";
				}
				program { name: "state_dual_left";
				   signal: "e,mode,dual,left";
				   source: "e";
				   action: STATE_SET "dual_left" 0.0;
				   target: "icon";
				   target: "dual_left";
				   target: "dual_top";
				}
				program { name: "state_dual_top";
				   signal: "e,mode,dual,top";
				   source: "e";
				   action: STATE_SET "dual_top" 0.0;
				   target: "icon";
				   target: "dual_left";
				   target: "dual_top";
				}
			}
			part { name: "dual_top";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
					rel1.to: "button_image";
					rel2.to: "button_image";
				}
				description { state: "dual_top" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "dual_left" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				program { name: "dual_top";
					signal: "mouse,clicked,1";
					source: "dual_top";
					action: SIGNAL_EMIT "e,action,mode,dual,left" "";
				}
			}
			part { name: "dual_left";
				type: RECT;
				mouse_events: 1;
				description { state: "default" 0.0;
					visible: 0;
					color: 0 0 0 0;
					rel1.to: "button_image";
					rel2.to: "button_image";
				}
				description { state: "dual_top" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
				description { state: "dual_left" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				program { name: "dual_left";
					signal: "mouse,clicked,1";
					source: "dual_left";
					action: SIGNAL_EMIT "e,action,mode,single" "";
				}
			}
			part {
				name: "over1";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					rel2.relative: 1.0 0.5;
					image {
						normal: "bt_hilight.png";
						border: 7 7 7 0;
					}
				}
			}
			part {
				name: "over2";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					image {
						normal: "bt_shine.png";
						border: 7 7 7 7;
					}
				}
			}
			part {
				name: "over3";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1.to: "button_image";
					rel2.to: "button_image";
					visible: 0;
					color: 255 255 255 0;
					image {
						normal: "bt_glow.png";
						border: 12 12 12 12;
					}
					fill.smooth : 0;
				}
				description {
					state: "clicked" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					color: 255 255 255 255;
				}
			}
		}
	}

/////////////////////////////////////////////////////////////////////////////
/*** MOD: COMP ***/

   group { name: "e/modules/comp/preview";
      parts {
         part { name: "e.swallow.preview";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0; }
         }
         part { name: "e.text.label";
            type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 0 1;
               color: 224 224 224 255;
               color3: 0 0 0 32;
               text {
                  font: "Sans:style=Bold";
                  size: 10;
                  min: 1 1;
                  align: 0.5 0.5;
                  text_class: "fileman_icon";
               }
            }
         }
      }
   }

   group { name: "e/comp/default";
      images {
         image: "comp-sh1.png" COMP;
         image: "bt_glow.png" COMP;
      }
      parts {
         part { name: "focus-clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color_class: "comp_focus-out_color";
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color_class: "";
               color: 255 255 255 255;
            }
         }
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            clip_to: "focus-clipper";
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill.smooth: 0;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "shower";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.05  0.05;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.95  0.95;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "shower";
               }
               rel2 {
                  to: "shower";
               }
            }
            description { state: "focus1" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -10 -10;
               rel2.offset: 9   9;
            }
            description { state: "focus2" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 4   4;
               rel2.offset: -5  -5;
            }
            description { state: "focus3" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3  -3;
               rel2.offset: 2   2;
            }
            description { state: "focus4" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 1   1;
               rel2.offset: -2  -2;
            }
         }
         part { name: "glow";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "e.swallow.content";
               rel1.offset: -3 -3;
               rel2.to: "e.swallow.content";
               rel2.offset: 2  2;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 8 8 8 8;
                  middle: 0;
               }
               fill.smooth: 0;
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
               rel1.offset: -23 -22;
               rel2.offset: 22  22;
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.15;
            target: "clipper";
            target: "shower";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.30;
            target: "clipper";
            target: "shower";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
         program { name: "focus";
            signal: "e,state,focus,on";
            source: "e";
            action: STATE_SET "focused" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "focus-clipper";
         }
         program { name: "unfocus";
            signal: "e,state,focus,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "focus-clipper";
         }
         program { name: "focus1";
            signal: "e,state,focus,on";
            source: "e";
            action: STATE_SET "focus1" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.swallow.content";
            after: "focus2";
         }
         program { name: "focus2";
            action: STATE_SET "focus2" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.swallow.content";
            after: "focus3";
         }
         program { name: "focus3";
            action: STATE_SET "focus3" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.swallow.content";
            after: "focus4";
         }
         program { name: "focus4";
            action: STATE_SET "focus4" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.swallow.content";
            after: "focus5";
         }
         program { name: "focus5";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.1;
            target: "e.swallow.content";
         }
         program { name: "urgent-on";
            signal: "e,state,urgent,on";
            source: "e";
            action: STATE_SET "active" 0.0;
            target: "glow";
            after: "urgent2";
         }
         program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: DECELERATE 0.5;
            target: "glow";
            after: "urgent-on";
         }
         program { name: "urgent-off";
            signal: "e,state,urgent,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "glow";
         }
      }
   }
//----
   group { name: "e/comp/none";
      parts {
         part { name: "e.swallow.content";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
         }
      }
      programs {
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
      }
   }
//----
   group { name: "e/comp/still";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
         part { name: "shadow";
            mouse_events: 0;
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill {
                  smooth: 0;
               }
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "focus-clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               color_class: "comp_focus-out_color";
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color_class: "";
               color: 255 255 255 255;
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            mouse_events: 0;
            clip_to: "focus-clipper";
            description { state: "default" 0.0;
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
         program { name: "focus";
            signal: "e,state,focus,on";
            source: "e";
            action: STATE_SET "focused" 0.0;
            transition: SINUSOIDAL 0.2;
            target: "focus-clipper";
         }
         program { name: "unfocus";
            signal: "e,state,focus,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "focus-clipper";
         }
      }
   }
//----
   group { name: "e/comp/popup";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill.smooth: 0;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "shower";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.05  0.05;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.95  0.95;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "shower";
               }
               rel2 {
                  to: "shower";
               }
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.15;
            target: "clipper";
            target: "shower";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.30;
            target: "clipper";
            target: "shower";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
      }
   }
//----
   group { name: "e/comp/menu";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill.smooth: 0;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "shower";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.1  0.0;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.9  0.8;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "shower";
               }
               rel2 {
                  to: "shower";
               }
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.15;
            target: "clipper";
            target: "shower";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.30;
            target: "clipper";
            target: "shower";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
      }
   }
   group { name: "e/comp/everything";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
	part { name: "clipper";
	type: RECT;
	mouse_events: 0;
	clip_to: "clipper2";
	  description { state: "default" 0.0;
	  visible: 0;
	  color: 255 255 255 0;
	    rel1 {
	    relative: -1.0  -1.0;
	    offset: -9999 -9999;
	    }
	    rel2 {
	    relative: 2.0   2.0;
	    offset: 9999  9999;
	    }
	  }
	  description { state: "visible" 0.0;
	  inherit: "default" 0.0;
	  visible: 1;
	  color: 255 255 255 255;
	  }
	  description { state: "big" 0.0;
	  inherit: "default" 0.0;
	  color: 255 255 255 0;
	  }
	}
	part { name: "clipper2";
	type: RECT;
	mouse_events: 0;
	  description { state: "default" 0.0;
	  color: 255 255 255 255;
	  rel1.to: "clipper";
	  rel2.to: "clipper";
	  }
	  description { state: "visible" 0.0;
	  inherit: "default" 0.0;
	  }
	  description { state: "big" 0.0;
	  inherit: "default" 0.0;
	  color: 255 255 255 0;
	  }
	}
	part { name: "shadow";
	mouse_events: 0;
	clip_to: "clipper";
	  description { state: "default" 0.0;
	    image {
	    normal: "comp-sh1.png";
	    border: 18 18 18 18;
	    middle: 0;
	    }
	  fill.smooth: 0;
	    rel1 {
	    to: "e.swallow.content";
	    relative: 0.0  0.0;
	    offset: -16  -14;
	    }
	    rel2 {
	    to: "e.swallow.content";
	    relative: 1.0  1.0;
	    offset: 15   17;
	    }
	  }
	  description { state: "hidden" 0.0;
	  inherit: "default" 0.0;
	  visible: 0;
	  }
	}
	part { name: "shower";
	type: RECT;
	mouse_events: 0;
	  description { state: "default" 0.0;
	  visible: 0;
	    rel1 {
	    relative: 0.05  0.05;
	    offset: 0    0;
	    }
	    rel2 {
	    relative: 0.95  0.95;
	    offset: -1   -1;
	    }
	  }
	  description { state: "visible" 0.0;
	  inherit: "default" 0.0;
	    rel1 {
	    relative: 0.0  0.0;
	    }
	    rel2 {
	    relative: 1.0  1.0;
	    }
	  }
	  description { state: "big" 0.0;
	  inherit: "default" 0.0;
	    rel1 {
	    relative: -0.3  -0.3;
	    }
	    rel2 {
	    relative: 1.3  1.3;
	    }
	  }
	}
	part { name: "e.swallow.content";
	type: SWALLOW;
	clip_to: "clipper";
	mouse_events: 0;
	  description { state: "default" 0.0;
	    rel1 {
	    to: "shower";
	    }
	    rel2 {
	    to: "shower";
	    }
	  }
	}
      }
     programs {
       program { name: "shadow-on";
       signal: "e,state,shadow,on";
       source: "e";
       action: STATE_SET "default" 0.0;
       target: "shadow";
       }
       program { name: "shadow-off";
       signal: "e,state,shadow,off";
       source: "e";
       action: STATE_SET "hidden" 0.0;
       target: "shadow";
       }
       program { name: "show1";
       signal: "e,state,visible,on";
       source: "e";
       action: STATE_SET "visible" 0.0;
       transition: DECELERATE 0.05;
       target: "clipper";
       target: "clipper2";
       target: "shower";
       after: "show2";
       }
       program { name: "show2";
       action: SIGNAL_EMIT "e,action,show,done" "e";
       }
       program { name: "hide1";
       signal: "e,state,visible,off";
       source: "e";
       action: STATE_SET "big" 0.0;
       transition: ACCELERATE 0.25;
       target: "clipper";
       target: "clipper2";
       target: "shower";
       after: "hide2";
       }
       program { name: "hide2";
       action: STATE_SET "default" 0.0;
       target: "clipper";
       target: "clipper2";
       target: "shower";
       after: "hide3";         
       }
       program { name: "hide3";
       action: SIGNAL_EMIT "e,action,hide,done" "e";
       }
     }
   }

   //----
/*
   group { name: "e/comp/slow";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill {
                  smooth: 0;
               }
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.05  0.05;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.95  0.95;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.4;
            target: "clipper";
            target: "e.swallow.content";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.8;
            target: "clipper";
            target: "e.swallow.content";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
      }
   }
//----
   group { name: "e/comp/fast";
      images {
         image: "comp-sh1.png" COMP;
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill {
                  smooth: 0;
               }
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  relative: 0.05  0.05;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.95  0.95;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.1;
            target: "clipper";
            target: "e.swallow.content";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "clipper";
            target: "e.swallow.content";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
      }
   }
//----
   group { name: "e/comp/focus-out-colored";
      images {
         image: "comp-sh1.png" COMP;
         image: "bt_glow.png" COMP;
      }
      parts {
         part { name: "clipper";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               rel1 {
                  relative: -1.0  -1.0;
                  offset: -9999 -9999;
               }
               rel2 {
                  relative: 2.0   2.0;
                  offset: 9999  9999;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "shadow";
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               image {
                  normal: "comp-sh1.png";
                  border: 18 18 18 18;
                  middle: 0;
               }
               fill.smooth: 0;
               rel1 {
                  to: "e.swallow.content";
                  relative: 0.0  0.0;
                  offset: -16  -14;
               }
               rel2 {
                  to: "e.swallow.content";
                  relative: 1.0  1.0;
                  offset: 15   17;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "shower";
            type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  relative: 0.05  0.05;
                  offset: 0    0;
               }
               rel2 {
                  relative: 0.95  0.95;
                  offset: -1   -1;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  relative: 0.0  0.0;
               }
               rel2 {
                  relative: 1.0  1.0;
               }
            }
         }
         part { name: "clipper-content";
            type: RECT;
            clip_to: "clipper";
            mouse_events: 0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "unfocus" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 200;
//               color_class: "comp_focus-out_color";
            }
         }
         part { name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "clipper-content";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1 {
                  to: "shower";
               }
               rel2 {
                  to: "shower";
               }
            }
         }
         part { name: "glow";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "e.swallow.content";
               rel1.offset: -3 -3;
               rel2.to: "e.swallow.content";
               rel2.offset: 2  2;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 8 8 8 8;
                  middle: 0;
               }
               fill.smooth: 0;
            }
            description { state: "active" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 0;
               rel1.offset: -23 -22;
               rel2.offset: 22  22;
            }
         }
      }
      programs {
         program { name: "shadow-on";
            signal: "e,state,shadow,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "shadow";
         }
         program { name: "shadow-off";
            signal: "e,state,shadow,off";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "shadow";
         }
         program { name: "show1";
            signal: "e,state,visible,on";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.15;
            target: "clipper";
            target: "shower";
            after: "show2";
         }
         program { name: "show2";
            action: SIGNAL_EMIT "e,action,show,done" "e";
         }
         program { name: "hide1";
            signal: "e,state,visible,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.30;
            target: "clipper";
            target: "shower";
            after: "hide2";
         }
         program { name: "hide2";
            action: SIGNAL_EMIT "e,action,hide,done" "e";
         }
         program { name: "unfocus";
            signal: "e,state,focus,off";
            source: "e";
            action: STATE_SET "unfocus" 0.0;
            transition: ACCELERATE 0.2;
            target: "clipper-content";
         }
         program { name: "focus";
            signal: "e,state,focus,on";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.2;
            target: "clipper-content";
         }
         program { name: "urgent-on";
            signal: "e,state,urgent,on";
            source: "e";
            action: STATE_SET "active" 0.0;
            target: "glow";
            after: "urgent2";
         }
         program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: DECELERATE 0.5;
            target: "glow";
            after: "urgent-on";
         }
         program { name: "urgent-off";
            signal: "e,state,urgent,off";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "glow";
         }
      }
   }
 */


   group {
   name: "modules/efm_navigation/main";
      
      images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_dis_base.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_dis_hilight.png" COMP;
      image: "bt_dis_shine.png" COMP;
      image: "icon_left_arrow.png" COMP;
      image: "icon_right_arrow.png" COMP;
      image: "icon_up_arrow.png" COMP;
      image: "refresh.png" COMP;
      image: "favorites.png" COMP;
      }

      parts {
	 part {
	 name: "base";
	 type: RECT;
	 mouse_events: 1;

	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
	 part {
	 name: "begin";
	 type: RECT;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    max: 1 1;
	    align: 0.0 0.0;
	    color: 0 0 0 0;
	    }
	 }

#define NAV_BUTTON(NAME, ICON, REL_TO, OFF_X)	\
	 part {					\
	 name: NAME"_bg";			\
	 mouse_events: 1;			\
	 repeat_events: 1;			\
	 type: IMAGE;				\
	    description	{			\
	    state: "default" 0.0;		\
	    min: 28 28;				\
	    max: 28 28;				\
	    aspect: 1.0 1.0;			\
	    aspect_preference: VERTICAL;	\
	    align: 0.0 0.5;			\
	       rel1 {				\
	       to_x: REL_TO;			\
	       relative: 1.0 0.0;		\
	       offset: OFF_X 0;			\
	       }				\
	       image {				\
	       normal: "bt_base2.png";		\
	       border: 7 7 7 7;			\
	       }				\
	    }					\
	    description {			\
	    state: "down" 0.0;			\
	    inherit: "default" 0.0;		\
	    image.normal: "bt_base1.png";	\
	    }					\
	    description	{			\
	    state: "disabled" 0.0;		\
	    inherit: "default" 0.0;		\
	    image.normal: "bt_dis_base.png";	\
	    image.border: 4 4 4 4;		\
	    }					\
	 }					\
	 part {					\
	 name: NAME"_img";			\
	 mouse_events: 0;			\
	 type: IMAGE;				\
	    description	{			\
	    state: "default" 0.0;		\
	    min: 16 16;				\
	    max: 16 16;				\
	       rel1 {				\
	       offset: 7 7;			\
	       to: NAME"_bg";			\
	       }				\
	       rel2 {				\
	       offset: -8 -8;			\
	       to: NAME"_bg";			\
	       }				\
	    image.normal: ICON".png";		\
	    }					\
	 }					\
	 part {					\
	 name: NAME"_fg1";			\
	 type: IMAGE;				\
	 mouse_events: 1;			\
	 repeat_events: 1;			\
	    description {			\
	    state: "default" 0.0;		\
	    rel1.to: NAME"_bg";			\
	    rel2.to: NAME"_bg";			\
	    rel2.relative: 1.0 0.5;		\
	       image {				\
	       normal: "bt_hilight.png";	\
	       border: 7 7 7 0;			\
	       }				\
	    }					\
	    description {			\
	    state: "disabled" 0.0;		\
	    inherit: "default" 0.0;		\
	    image.normal: "bt_dis_hilight.png";	\
	    image.border: 4 4 4 0;		\
	    }					\
	 }					\
	 part {					\
	 name: NAME"_fg2";			\
	 type: IMAGE;				\
	 mouse_events: 1;			\
	 repeat_events: 1;			\
	    description {			\
	    state: "default" 0.0;		\
	    rel1.to: NAME"_bg";			\
	    rel2.to: NAME"_bg";			\
	       image {				\
	       normal: "bt_shine.png";		\
	       border: 7 7 7 7;			\
	       }				\
	    }					\
	    description {			\
	    state: "disabled" 0.0;		\
	    inherit: "default" 0.0;		\
	    image.normal: "bt_dis_shine.png";	\
	    }					\
	 }					\
	 part {					\
	 name: NAME"_event_eater";		\
	 type: RECT;				\
	 mouse_events: 1;			\
	 repeat_events: 0;			\
	    description {			\
	    state: "default" 0.0;		\
	    visible: 0;				\
	    color: 255 255 255 0;		\
	    rel1.to: NAME"_bg";			\
	    rel2.to: NAME"_bg";			\
	    }					\
	    description	{			\
	    state: "disabled" 0.0;		\
	    inherit: "default" 0.0;		\
	    visible: 1;				\
	    }					\
	 }					\

	 
	 NAV_BUTTON("back",       "icon_left_arrow",  "begin", 5);
	 NAV_BUTTON("forward",    "icon_right_arrow", "back_bg", 1);
	 NAV_BUTTON("up",         "icon_up_arrow",    "forward_bg", 10);
	 NAV_BUTTON("refresh",    "refresh",          "up_bg", 1);
	 NAV_BUTTON("favorites",  "favorites",        "refresh_bg", 1);

	 part {
	 name: "e.swallow.pathbar";
	 type: SWALLOW;
	    description {
	    state: "default" 0.0;
	    align: 0.0 0.5;

	       /* rel1.to_x: "favorites_base"; */
	    rel1.to_x: "favorites_bg";
	    rel1.relative: 1.0 0.0;
	    rel1.offset: 10 0;
	    rel2.offset: -40 -1;
	    color: 200 0 0 200;
	    }
	 }
			
      }

      programs {
#define NAV_BUTTON_PROG(NAME)					\
	 program {						\
	 name: NAME"_click";					\
	 signal: "mouse,down,1";				\
	 source: "bg";						\
	 action: STATE_SET "down" 0.0;				\
	 target: NAME"_bg";					\
	 }							\
	 program {						\
	 name: NAME"_unclick";					\
	 signal: "mouse,up,1";					\
	 source: "bg";						\
	 action: STATE_SET "default" 0.0;			\
	 target: NAME"_bg";					\
	 }							\
	 program	{					\
	 name: NAME"_send";					\
	 signal: "mouse,clicked,1";				\
	 source: NAME"_bg";					\
	 action: SIGNAL_EMIT "e,action,"NAME",click" "";	\
	 }							\
	 program	{					\
	 name: NAME"_disable";					\
	 signal: "e,state,"NAME",disabled";			\
	 source: "e";						\
	 action: STATE_SET "disabled" 0.0;			\
	 target: NAME"_bg";					\
	 target: NAME"_fg1";					\
	 target: NAME"_fg2";					\
	 target: NAME"_event_eater";				\
	 }							\
	 program	{					\
	 name: NAME"_enable";					\
	 signal: "e,state,"NAME",enabled";			\
	 source: "e";						\
	 action: STATE_SET "default" 0.0;			\
	 target: NAME"_bg";					\
	 target: NAME"_fg1";					\
	 target: NAME"_fg2";					\
	 target: NAME"_event_eater";				\
	 }							\

	 NAV_BUTTON_PROG("back");
	 NAV_BUTTON_PROG("forward");
	 NAV_BUTTON_PROG("up");
	 NAV_BUTTON_PROG("refresh");
	 NAV_BUTTON_PROG("favorites");
      }
   }


   group {
   name: "modules/efm_navigation/pathbar_scrollframe";
      images {
      image: "icon_left_arrow.png" COMP;
      image: "icon_right_arrow.png" COMP;
      }

      parts {
	 part {
	 name: "base";
	 type: RECT;
	 mouse_events: 1;
	    description {
	    state: "default" 0.0;
	       rel1 {
	       to_x: "left_arrow";
	       relative: 1.0 0.0;
	       }
	       rel2 {
	       to_x: "right_arrow";
	       relative: 0.0 1.0;
	       }
	    color: 0 0 0 0;
	    }
	 }
	 part {
	 name: "clipper";
	 type: RECT;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    rel1.to: "base";
	    rel2.to: "base";
	    }
	 }
	 part {
	 name: "e.swallow.content";
	 type: SWALLOW;
	 clip_to: "clipper";
	    description {
	    state: "default" 0.0;
	    rel1.to: "clipper";
	    rel2.to: "clipper";
	    }
	 }
	 part {
	 name: "left_arrow";
	 type: IMAGE;
	 mouse_events: 1;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	       /* aspect: 1.0 1.0;
		* aspect_preference: VERTICAL; */
	    align: 0.0 0.5;
	    min: 16 16;
	    max: 16 16;
	    image.normal: "icon_left_arrow.png";
	    }
	 }
	 part {
	 name: "right_arrow";
	 type: IMAGE;
	 mouse_events: 1;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    align: 1.0 0.5;
	    min: 16 16;
	    max: 16 16;
	    image.normal: "icon_right_arrow.png";
	    }
	 }
	 part {
	 name: "e.dragable.hbar";
	 mouse_events: 0;
	    dragable {
	    x: 1 1 0;
	    y: 0 0 0;
	    confine: "base";
	    }
	    description {
	    state: "default" 0.0;
	    visible: 0;
	    rel1.to: "base";
	    rel2.to: "base";
	    }
	 }
	 part {
	 name: "event";
	 mouse_events: 1;
	 repeat_events: 1;
	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
      }
      program {
      name: "sb_left";
      signal: "mouse,down,1";
      source: "left_arrow";
      action: DRAG_VAL_STEP -5.0 0.0;
      target: "e.dragable.hbar";
      }
      program {
      name: "sb_right";
      signal: "mouse,down,1";
      source: "right_arrow";
      action: DRAG_VAL_STEP 5.0 0.0;
      target: "e.dragable.hbar";
      }

   }

   group {
   name: "modules/efm_navigation/pathbar_button";
      images {
      image: "bt_base1.png" COMP;
      image: "bt_base2.png" COMP;
      image: "bt_dis_base.png" COMP;
      image: "bt_hilight.png" COMP;
      image: "bt_shine.png" COMP;
      image: "bt_dis_hilight.png" COMP;
      image: "bt_dis_shine.png" COMP;
      }

      parts {
	 part {
	 name: "bg";
	 type: IMAGE;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    min: 28 28;
	       image {
	       normal: "bt_base2.png";
	       border: 7 7 7 7;
	       }
	    }
	    description {
	    state: "down" 0.0;
	    inherit: "default" 0.0;
	    image.normal: "bt_base1.png";
	    }
	 }
	 part {
	 name: "label2";
	 type: TEXT;
	 mouse_events: 0;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    max: 150 32;
	    rel1.to: "e.text.label";
	    rel2.to: "e.text.label";
	    color: 224 224 224 255;
	       text {
	       font: "Sans";
	       text_source: "e.text.label";
	       size: 10;
	       min: 1 1;
	       align: 0.5 0.5;
	       elipsis: 0.0;
	       }
	    }
	    description {
	    state: "selected" 0.0;
	    inherit: "default" 0.0;
	    visible: 0;
	    }
	 }
	 part {
	 name: "e.text.label";
	 type: TEXT;
	 mouse_events: 0;
	 scale: 1;
	    description {
	    state: "default" 0.0;
	    max: 150 32;
	    rel1.offset: 7 0;
	    rel2.offset: -8 -1;
	    visible: 0;
	    color: 255 255 255 255;
	       text {
	       font: "Sans:style=Bold";
	       size: 10;
	       min: 0 1;
	       max: 1 0;
	       align: 0.5 0.5;
	       elipsis: 0.0;
	       }
	    }
	    description {
	    state: "selected" 0.0;
	    inherit: "default" 0.0;
	    visible: 1;
	    }
	 }
	 part {
	 name: "fg1";
	 type: IMAGE;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    rel1.to: "bg";
	       rel2 {
	       to: "bg";
	       relative: 1.0 0.5;
	       }
	       image {
	       normal: "bt_hilight.png";
	       border: 7 7 7 0;
	       }
	    }
	 }
	 part {
	 name: "fg2";
	 type: IMAGE;
	 mouse_events: 0;
	    description {
	    state: "default" 0.0;
	    rel1.to: "bg";
	    rel2.to: "bg";
	       image {
	       normal: "bt_shine.png";
	       border: 7 7 7 7;
	       }
	    }
	 }
	 part {
	 name: "event";
	 type: RECT;
	 mouse_events: 1;
	 ignore_flags: ON_HOLD;
	    description {
	    state: "default" 0.0;
	    color: 0 0 0 0;
	    }
	 }
      }
      programs {
	 program {
	 name: "click";
	 signal: "mouse,down,1";
	 source: "event";
	 action: STATE_SET "down" 0.0;
	 target: "bg";
	 }
	 program {
	 name: "unclick";
	 signal: "mouse,up,1";
	 source: "event";
	 action: STATE_SET "default" 0.0;
	 target: "bg";
	 }
	 program {
	 name: "send";
	 signal: "mouse,clicked,1";
	 source: "event";
	 action: SIGNAL_EMIT "e,action,click" "";
	 }
	 program {
	 name: "select";
	 signal: "e,state,selected";
	 source: "e";
	 action: STATE_SET "selected" 0.0;
	 target: "e.text.label";
	 target: "label2";
	 }
	 program {
	 name: "normal";
	 signal: "e,state,default";
	 source: "e";
	 action: STATE_SET "default" 0.0;
	 target: "e.text.label";
	 target: "label2";
	 }
      }
   }


/////////////////////////////////////////////////////////////////////////////
/*** MOD: TASKS ***/

   group { name:"modules/tasks/item";
      images {
         image: "e17_button_sm.png" COMP;
         image: "bt_base2.png" COMP;
       /*  image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP; */
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
         image: "exclam.png" COMP;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            description { state: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "e17_button_sm.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "e17_button_sm.png";
                  border: 7 7 7 7;
               }
            }
         }
         part { name: "icon_area"; type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               align: 0.0 0.5;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 3  3;
                  to: "button_image";
               }
               rel2 {
                  relative: 0.0 1.0;
                  offset: 3   -4;
                  to: "button_image";
               }
            }
            description { state: "iconified" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.0 0.25;
               rel2.relative: 0.0 0.75;
            }
         }
         part { name: "icon_area2"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
            }
            description { state: "uw0" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3 -2;
               rel2.offset: -4 -3;
            }
            description { state: "uw1" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 5 -2;
               rel2.offset: 4 -3;
            }
            description { state: "uw2" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 4;
               rel2.offset: -2 3;
            }
            description { state: "uw3" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -2 -1;
               rel2.offset: -3 -2;
            }
            description { state: "uw4" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -4 1;
               rel2.offset: -5 0;
            }
         }
         part { name: "e.swallow.icon";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               aspect: 1.0 1.0;
               rel1.to: "icon_area2";
               rel2.to: "icon_area2";
            }
         }
         part { name: "urgent";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
               image.normal: "exclam.png";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "urgent2";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
               image.normal: "exclam.png";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 -1.0;
               rel2.relative: 2.0 2.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
         part { name: "e.text.label"; type: TEXT;
            effect: SOFT_SHADOW;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  relative: 1.0  0.0;
                  offset: 2    3;
                  to_x: "icon_area";
                  to_y: "button_image";
               }
               rel2 {
                  relative: 1.0  1.0;
                  offset: -4   -4;
                  to: "button_image";
               }
               color_class: "tasks_text";
               text {
                  font: "Sans";
                  size: 10;
                  min: 0 1;
                  align: 0.0 0.5;
                  text_class: "tasks_text";
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               color_class: "tasks_text_focused";
               text.font: "Sans:style=Bold";
               text.text_class: "tasks_text_focused";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color_class: "tasks_text_focused";
               text.font: "Sans:style=Bold";
               text.text_class: "tasks_text_focused";
            }
         }
         part { name: "over1";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
         }
         part { name: "over2";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "over3";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 7 7 9 9;
               }
               fill.smooth : 0;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
            target: "e.text.label";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
            target: "e.text.label";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,click" "";
         }
         program { name: "focused";
            signal: "e,state,focused";
            source: "e";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "over1";
            target: "e.text.label";
         }
         program { name: "unfocused";
            signal: "e,state,unfocused";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over1";
            target: "e.text.label";
         }
         program { name: "urgent";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "urgent";
            target: "urgent2";
            after: "urgent2";
         }
         program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: LINEAR 0.5;
            target: "urgent2";
            after: "urgent3";
         }
         program { name: "urgent3";
            action: STATE_SET "visible" 0.0;
            target: "urgent2";
            after: "urgent2";
         }
         program { name: "urgentw0";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw1";
         }
         program { name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw2";
         }
         program { name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
            target: "icon_area2";
            transition: DECELERATE 0.1;
            after: "urgentw3";
         }
         program { name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw4";
         }
         program { name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw0";
         }
         program { name: "not_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: ACTION_STOP;
            target: "urgentw0";
            target: "urgentw1";
            target: "urgentw2";
            target: "urgentw3";
            target: "urgentw4";
            target: "urgent";
            target: "urgent2";
            target: "urgent3";
            after: "not_urgent2";
         }
         program { name: "not_urgent2";
            action: STATE_SET "default" 0.0;
            target: "urgent";
            target: "urgent2";
            target: "icon_area2";
         }
         program { name: "iconified";
            signal: "e,state,iconified";
            source: "e";
            action: STATE_SET "iconified" 0.0;
            transition: DECELERATE 1.0;
            target: "icon_area";
         }
         program { name: "uniconified";
            signal: "e,state,uniconified";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
            target: "icon_area";
         }
      }
   }
   group { name:"modules/tasks/item_vert";
      images {
         image: "bt_base1.png" COMP;
         image: "bt_base2.png" COMP;
         image: "bt_hilight.png" COMP;
         image: "bt_shine.png" COMP;
         image: "bt_glow.png" COMP;
         image: "bt_dis_base.png" COMP;
         image: "bt_dis_hilight.png" COMP;
         image: "exclam.png" COMP;
      }
      parts {
         part { name: "button_image";
            mouse_events: 1;
            description { state: "default" 0.0;
               image {
                  normal: "bt_dis_base.png";
                  border: 4 4 4 4;
               }
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "bt_base1.png";
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_base2.png";
                  border: 7 7 7 7;
               }
            }
         }
         part { name: "icon_area"; type: RECT;
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               align: 0.5 0.5;
               rel1 {
                  offset: 3  3;
                  to: "button_image";
               }
               rel2 {
                  offset: -4   -4;
                  to: "button_image";
               }
            }
            description { state: "iconified" 0.0;
               inherit: "default" 0.0;
               rel1.relative: 0.25 0.25;
               rel2.relative: 0.75 0.75;
            }
         }
         part { name: "icon_area2"; type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
            }
            description { state: "uw0" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -3 -2;
               rel2.offset: -4 -3;
            }
            description { state: "uw1" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 5 -2;
               rel2.offset: 4 -3;
            }
            description { state: "uw2" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -1 4;
               rel2.offset: -2 3;
            }
            description { state: "uw3" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -2 -1;
               rel2.offset: -3 -2;
            }
            description { state: "uw4" 0.0;
               inherit: "default" 0.0;
               rel1.offset: -4 1;
               rel2.offset: -5 0;
            }
         }
         part { name: "e.swallow.icon";
            type: SWALLOW;
            mouse_events: 0;
            description { state: "default" 0.0;
               aspect: 1.0 1.0;
               rel1.to: "icon_area2";
               rel2.to: "icon_area2";
            }
         }
         part { name: "urgent";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
               image.normal: "exclam.png";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
         part { name: "urgent2";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               rel1.to: "icon_area";
               rel2.to: "icon_area";
               image.normal: "exclam.png";
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
            description { state: "faded" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -1.0 -1.0;
               rel2.relative: 2.0 2.0;
               visible: 1;
               color: 255 255 255 0;
            }
         }
         part { name: "over1";
            mouse_events: 0;
            description { state: "default" 0.0;
               rel2.relative: 1.0 0.5;
               image {
                  normal: "bt_dis_hilight.png";
                  border: 4 4 4 0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "bt_hilight.png";
                  border: 7 7 7 0;
               }
            }
         }
         part { name: "over2";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "button_image";
               rel2.to: "button_image";
               image {
                  normal: "bt_shine.png";
                  border: 7 7 7 7;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "over3";
            mouse_events: 0;
            description { state: "default" 0.0;
               visible: 0;
               color: 255 255 255 0;
               image {
                  normal: "bt_glow.png";
                  border: 7 7 9 9;
               }
               fill.smooth : 0;
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 255 255 255 255;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "button_image";
            action: STATE_SET "clicked" 0.0;
            target: "button_image";
            target: "over3";
         }
         program { name: "button_unclick";
            signal: "mouse,up,1";
            source: "button_image";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over3";
         }
         program { name: "button_unclick2";
            signal: "mouse,clicked,1";
            source: "button_image";
            action: SIGNAL_EMIT "e,action,click" "";
         }
         program { name: "focused";
            signal: "e,state,focused";
            source: "e";
            action: STATE_SET "focused" 0.0;
            target: "button_image";
            target: "over1";
         }
         program { name: "unfocused";
            signal: "e,state,unfocused";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "over1";
         }
         program { name: "urgent";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 0.5;
            target: "urgent";
            target: "urgent2";
            after: "urgent2";
         }
         program { name: "urgent2";
            action: STATE_SET "faded" 0.0;
            transition: LINEAR 0.5;
            target: "urgent2";
            after: "urgent3";
         }
         program { name: "urgent3";
            action: STATE_SET "visible" 0.0;
            target: "urgent2";
            after: "urgent2";
         }
         program { name: "urgentw0";
            signal: "e,state,urgent";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw1";
         }
         program { name: "urgentw1";
            action: STATE_SET "uw1" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw2";
         }
         program { name: "urgentw2";
            action: STATE_SET "uw2" 0.0;
            target: "icon_area2";
            transition: DECELERATE 0.1;
            after: "urgentw3";
         }
         program { name: "urgentw3";
            action: STATE_SET "uw3" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw4";
         }
         program { name: "urgentw4";
            action: STATE_SET "uw4" 0.0;
            transition: DECELERATE 0.1;
            target: "icon_area2";
            after: "urgentw0";
         }
         program { name: "not_urgent";
            signal: "e,state,not_urgent";
            source: "e";
            action: ACTION_STOP;
            target: "urgentw0";
            target: "urgentw1";
            target: "urgentw2";
            target: "urgentw3";
            target: "urgentw4";
            target: "urgent";
            target: "urgent2";
            target: "urgent3";
            after: "not_urgent2";
         }
         program { name: "not_urgent2";
            action: STATE_SET "default" 0.0;
            target: "urgent";
            target: "urgent2";
            target: "icon_area2";
         }
         program { name: "iconified";
            signal: "e,state,iconified";
            source: "e";
            action: STATE_SET "iconified" 0.0;
            transition: DECELERATE 1.0;
            target: "icon_area";
         }
         program { name: "uniconified";
            signal: "e,state,uniconified";
            source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 1.0;
            target: "icon_area";
         }
      }
   }
}

