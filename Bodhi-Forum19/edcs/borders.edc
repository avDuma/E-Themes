#define DEFAULT_PART()						\
	part { name: "shadow_clip"; type: RECT; mouse_events: 0;						\
         description { state: "default";						\
            rel1.to: "shadow";						\
            rel2.to: "shadow";						\
         }						\
         description { state: "hidden";						\
            visible: 0;						\
         }						\
      }						\
    part { name: "shadow"; mouse_events: 0; clip_to: "shadow_clip";						\
         description { state: "default" 0.0;						\
            image.normal: "img/win_shadow.png";						\
            image.border: 26 26 26 26;				\
            image.middle: 0;						\
            rel1.to: "border";						\
            rel1.offset: -15 -15;						\
            rel2.to: "border";						\
            rel2.offset: 14 14;						\
            fill.smooth: 0;						\
         }						\
         description { state: "shaded";						\
            inherit: "default";						\
            rel2.to: "titlebar";						\
            image.middle: 1;						\
            image.normal: "img/titlebar_shadow.png";				\
            image.border: 15 15 15 15;				\
            rel1.to: "titlebar";						\
            rel1.offset: -15 -15;					\
            rel2.to: "titlebar";						\
            rel2.offset: 14 14;						\
         }						\
      }						\
      part { name: "client_clip"; type: RECT; mouse_events: 0;						\
         description { state: "default" 0.0;						\
            rel1.to_y: "e.swallow.client";						\
            rel2.to_y: "e.swallow.client";						\
         }						\
         description { state: "hidden" 0.0;						\
            inherit: "default";						\
            visible: 0;						\
         }						\
      }						\
		part {			name: "border"; 						\
			type: IMAGE;						\
			description	{						\
						state: "default" 0;						\
						image	{						\
								normal: "img/border2.png";						\
								border: 8 8 8 8;						\
								}						\
						}						\
			description { state: "shaded" 0;	\
				inherit: "default" 0;	\
				visible: 0;	\
			}	\
		}						\
		part {			name: "titlebar";						\
			type: IMAGE;						\
			description	{						\
						state: "default" 0;						\
						rel1	{						\
							offset: 7 -5;						\
							to_x: "border";						\
							to_y: "e.text.title";						\
							}						\
						rel2	{						\
							offset: -7 3;						\
							to_x: "border";						\
							to_y: "e.text.title";						\
							}						\
						image	{						\
								normal: "img/titlebar.png";						\
								border: 5 5 5 5;						\
								}						\
						}						\
			}						\
		part { 			name: "e.text.title";						\
			type: TEXT;						\
			effect: OUTLINE_SHADOW;						\
			scale: 1;						\
			description	{						\
						state: "default" 0;						\
						min: 0 10;						\
						color: 255 255 255 255;						\
						color2: 255 255 255 255;						\
						color3: 255 255 255 255;						\
						rel1	{						\
							offset: 12 10;						\
							to_x: "border";						\
							}						\
						rel2	{						\
							relative: 0 0;						\
							offset: 0 20;						\
							to_x: "btIcn";						\
							}						\
			 				color_class: "border_title";						\
						text	{						\
								   font: "Harabara";						\
								size: 15;						\
								text_class: "title_bar";						\
							}						\
						}						\
			description	{						\
						state: "focused" 0;						\
						min: 0 10;						\
						color: 255 255 255 255;						\
						color2: 255 255 255 255;						\
						color3: 255 255 255 255;						\
						rel1	{						\
							offset: 12 10;						\
							to_x: "border";						\
							}						\
						rel2	{						\
							relative: 0 0;						\
							offset: 0 20;						\
							to_x: "btIcn";						\
							}						\
			 				color_class: "border_title_active";						\
						text	{						\
								   font: "Harabara";						\
								size: 15;						\
								text_class: "title_bar";						\
							}						\
						}						\
			}						\
		part { 			name: "e.event.titlebar";						\
			type: RECT;						\
			description {						\
						state: "default" 0.0;						\
						rel1.to: "titlebar";						\
						rel2.to: "titlebar";						\
						color: 0 0 0 0;						\
					}						\
		 }						\
		part { 			name: "e.swallow.client";						\
			type: SWALLOW; clip_to: "client_clip";						\
			description	{						\
						state: "default" 0;						\
						rel1 {						\
							relative: 0 1;						\
							offset: 7 0;						\
							to_x: "border";						\
							to_y: "titlebar";						\
							}						\
						rel2 {						\
							offset: -7 -7;						\
							to: "border";						\
							}						\
						}						\
			}						\
	part	{	name: "btCls";						\
				mouse_events: 0;						\
				description{						\
					state: "default" 0.0;						\
					rel1	{						\
						offset: -19 4;						\
						relative: 1.0 0.0;						\
						to_x: "titlebar";						\
						to_y: "titlebar";						\
					}						\
					rel2	{						\
						offset: -8 -5;						\
						relative: 1.0 1.0;						\
						to_x: "titlebar";						\
						to_y: "titlebar";						\
					}						\
					image	{						\
						normal: "img/btCls.png";						\
					}						\
				}						\
				description{						\
					state: "over" 0.0;						\
					inherit: "default" 0.0;						\
					image	{						\
						normal: "img/btCls_focus.png";						\
					}						\
				}						\
	}						\
	part	{	name: "e.event.close";						\
		type: RECT;						\
		description {						\
			state: "default" 0.0 ;						\
			rel1.to:	"btCls";						\
			rel2.to:	"btCls";						\
			color: 0 0 0 0;						\
		}						\
	}						\
	part	{	name: "btMax";						\
				mouse_events: 0;						\
				description{						\
					state: "default" 0.0;						\
					rel1	{						\
						offset: -16 4;						\
						relative: 0.0 0.0;						\
						to_x: "btCls";						\
						to_y: "titlebar";						\
					}						\
					rel2	{						\
						offset: -5 -5;						\
						relative: 0.0 1.0;						\
						to_x: "btCls";						\
						to_y: "titlebar";						\
					}						\
					image	{						\
						normal: "img/btMax.png";						\
					}						\
				}						\
				description{						\
					state: "over" 0.0;						\
					inherit: "default" 0.0;						\
					image	{						\
						normal: "img/btMax_focus.png";						\
					}						\
				}						\
	}						\
	part	{	name: "e.event.maximize";						\
		type: RECT;						\
		description {						\
			state: "default" 0.0 ;						\
			rel1.to:	"btMax";						\
			rel2.to:	"btMax";						\
			color: 0 0 0 0;						\
		}						\
	}						\
	part	{	name: "btIcn";						\
				mouse_events: 0;						\
				description{						\
					state: "default" 0.0;						\
					rel1	{						\
						offset: -16 4;						\
						relative: 0.0 0.0;						\
						to_x: "btMax";						\
						to_y: "titlebar";						\
					}						\
					rel2	{						\
						offset: -5 -5;						\
						relative: 0.0 1.0;						\
						to_x: "btMax";						\
						to_y: "titlebar";						\
					}						\
					image	{						\
						normal: "img/btIcn.png";						\
					}						\
				}						\
				description{						\
					state: "over" 0.0;						\
					inherit: "default" 0.0;						\
					image	{						\
						normal: "img/btIcn_focus.png";						\
					}						\
				} 						\
	}						\
	part	{	name: "e.event.minimize";						\
		type: RECT;						\
		description {						\
			state: "default" 0.0 ;						\
			rel1.to:	"btIcn";						\
			rel2.to:	"btIcn";						\
			color: 0 0 0 0;						\
		}						\
	}

#define DIALOG_PART()						\
	part { name: "shadow_clip"; type: RECT; mouse_events: 0;						\
         description { state: "default";						\
            rel1.to: "shadow";						\
            rel2.to: "shadow";						\
         }						\
         description { state: "hidden";						\
            visible: 0;						\
         }						\
      }						\
    part { name: "shadow"; mouse_events: 0; clip_to: "shadow_clip";						\
         description { state: "default" 0.0;						\
            image.normal: "img/popup_shadow.png";						\
            image.border: 12 12 12 12;				\
            image.middle: 0;						\
            rel1.to: "border";						\
            rel1.offset: -7 -7;						\
            rel2.to: "border";						\
            rel2.offset: 6 6;						\
            fill.smooth: 0;						\
         }	\
      }						\
      part { name: "client_clip"; type: RECT; mouse_events: 0;						\
         description { state: "default" 0.0;						\
            rel1.to_y: "e.swallow.client";						\
            rel2.to_y: "e.swallow.client";						\
         }						\
         description { state: "hidden" 0.0;						\
            inherit: "default";						\
            visible: 0;						\
         }						\
      }						\
		part {			name: "border";							\
			type: IMAGE;												\
			description	{												\
								state: "default" 0;					\
				rel1 {													\
					to_y: "titlebar";									\
					offset: 0 -4;										\
					}														\
						image	{											\
								normal: "img/popup_base.png";	\
								border: 12 12 12 12;						\
								}											\
						}													\
			}																\
		part {															\
			name: "e.swallow.client";								\
			type: SWALLOW;												\
			description	{												\
				state: "default" 0;									\
				rel1 {													\
							relative: 0.0 1.0;						\
							offset: 4 0;								\
							to_x: "border";							\
							to_y: "titlebar";							\
							}												\
					rel2 {												\
						relative: 1.0 1.0;							\
						offset: -4 -4;									\
						to: "border";									\
						}													\
						}													\
			}																\
		part {name: "titlebar";										\
		type: RECT;														\
		description	{													\
			min: 0 15;													\
						align: 0.5 0.5;								\
						state: "default" 0;							\
						rel1	{											\
							offset: 4 0;													\
							to_x: "border";													\
							to_y: "e.text.title";													\
							}													\
						rel2	{													\
							offset: -4 -4;													\
							to_x: "border";													\
							to_y: "e.text.title";													\
							}													\
							color: 0 0 0 0;													\
						}								\
		}													\
		part { 			name: "e.event.titlebar";							\
			type: RECT;							\
			description {							\
						state: "default" 0.0;							\
						rel1.to: "titlebar";							\
						rel2.to: "titlebar";							\
						color: 0 0 0 0;							\
					}							\
		 }							\
	 	part {	name: "btCls";							\
				mouse_events: 0;							\
				description {						\
					aspect: 1 1;				\
					max: 15 15;					\
					state: "default" 0.0;							\
					rel1	{							\
						offset: -15 2;							\
						relative: 1.0 0.0;							\
						to_x: "titlebar";							\
						to_y: "titlebar";							\
					}							\
					rel2	{							\
						offset: -4 -2;							\
						relative: 1.0 1.0;							\
						to_x: "titlebar";							\
						to_y: "titlebar";							\
					}							\
					image	{							\
						normal: "img/btClsdialog.png";							\
					}							\
				}							\
	}							\
		part {	name: "e.event.close";							\
		type: RECT;							\
		description {							\
			state: "default" 0.0 ;							\
			rel1.to:	"btCls";							\
			rel2.to:	"btCls";							\
			color: 0 0 0 0;							\
		}							\
	}								\
		part { name: "e.text.title";													\
				type: TEXT;													\
			mouse_events: 0;													\
			scale: 1;													\
			description {													\
			   state: "default" 0.0;													\
			   visible: 1;													\
			   align: 0.5 0.5;													\
			   rel1 {													\
			   	to_x: "border";													\
			   	offset: 4 20;													\
			   	}													\
			   rel2 {													\
			   relative: 1.0 0.0;													\
			   to_x: "border";													\
			   offset: -5 0;													\
			}													\
			   color_class: "border_title";													\
			   color: 255 255 255 255;													\
			   color2: 255 255 255 255;													\
					color3: 255 255 255 255;													\
			   text {													\
				  font: "Sans:style=Bold";													\
				  size: 12;													\
				  min: 0 1;													\
				  align: 0.0 0.5;													\
				  text_class: "title_bar";													\
			   }													\
			}													\
			description {													\
			   state: "focused" 0.0;													\
			   inherit: "default" 0.0;													\
			   visible: 1;													\
			   color_class: "border_title_active";													\
			   color: 255 255 255 255;													\
			   color2: 255 255 255 255;													\
					color3: 255 255 255 255;													\
			}													\
			}

//event resize
#define EVENT_RESIZE()				\
		part {			\
			name: "e.event.resize.t";			\
			type: RECT;			\
			description	{			\
						state: "default" 0.0;			\
						rel1 {			\
							relative: 0.0 0.0;			\
							offset: 0 0;			\
							to_x: "border";			\
							to_y: "border";			\
						}			\
			   			rel2 {			\
							relative: 1.0 0.0;			\
							offset: -1 3;			\
							to_x: "border";			\
							to_x: "border";			\
							}			\
			   color: 0 0 0 0;			\
							}			\
			description {			\
			   state: "shaded" 0.0;			\
			   inherit: "default" 0.0;			\
			   visible: 0;			\
		   			 }			\
		 }			\
part {			\
			name: "e.event.resize.b";			\
			type: RECT;			\
			description {			\
			   state: "default" 0.0;			\
			   rel1 {			\
				  relative: 0.0 1.0;			\
				  offset: 0 -3;			\
			   }			\
			   rel2 {			\
				  relative: 1.0 1.0;			\
				  offset: -1 0;			\
			   }			\
			   color: 0 0 0 0;			\
			}			\
			description {			\
			   state: "shaded" 0.0;			\
			   inherit: "default" 0.0;			\
			   visible: 0;			\
			}			\
		 }			\
part {			\
			name: "e.event.resize.tl";			\
			type: RECT;			\
			description {			\
			   state: "default" 0.0;			\
			   rel1 {			\
				  relative: 0.0 0.0;			\
				  offset: 0 0;			\
			   }			\
			   rel2 {			\
				  relative: 0.0 0.0;			\
				  offset: 9 9;			\
			   }			\
			   color: 0 0 0 0;			\
			}			\
			description {			\
			   state: "shaded" 0.0;			\
			   inherit: "default" 0.0;			\
			   visible: 0;			\
			}			\
		 }			\
part {			\
			name: "e.event.resize.tr";			\
			type: RECT;			\
			description {			\
			   state: "default" 0.0;			\
			   rel1 {			\
				  relative: 1.0 0.0;			\
				  offset: -9 0;			\
			   }			\
			   rel2 {			\
				  relative: 1.0 0.0;			\
				  offset: 0 9;			\
			   }			\
			   color: 0 0 0 0;			\
			}			\
			description {			\
			   state: "shaded" 0.0;			\
			   inherit: "default" 0.0;		\
			   visible: 0;		\
			}		\
		 }		\
		 part {		\
			name: "e.event.resize.bl";		\
			type: RECT;		\
			description {		\
			   state: "default" 0.0;		\
			   rel1 {		\
				  relative: 0.0 1.0;		\
				  offset: 0 -16;		\
			   }		\
			   rel2 {		\
				  relative: 0.0 1.0;		\
				  offset: 15 -1;		\
			   }		\
			   color: 0 0 0 0;		\
			}		\
			description {		\
			   state: "shaded" 0.0;		\
			   inherit: "default" 0.0;		\
			   visible: 0;		\
			}		\
		 }		\
		 part {		\
			name: "e.event.resize.br";		\
			type: RECT;		\
			description {		\
			   state: "default" 0.0;		\
			   rel1 {		\
				  relative: 1.0 1.0;		\
				  offset: -16 -16;		\
			   }		\
			   rel2 {		\
				  relative: 1.0 1.0;		\
				  offset: -1 -1;		\
			   }		\
			   color: 0 0 0 0;		\
			}		\
			description {		\
			   state: "shaded" 0.0;		\
			   inherit: "default" 0.0;		\
			   visible: 0;		\
			}		\
		 }		\
		part {		\
			name: "e.event.resize.l";		\
			type: RECT;		\
			description	{		\
						state: "default" 0.0;		\
						rel1 {		\
							relative: 0.0 0.0;		\
							offset: 0 0;		\
							to_x: "border";		\
							to_y: "border";		\
						}		\
			   			rel2 {		\
							relative: 0.0 1.0;		\
							offset: 3 -1;		\
							to_x: "border";		\
							to_x: "border";		\
							}		\
			   color: 0 0 0 0;		\
							}		\
			description {		\
			   state: "shaded" 0.0;		\
			   inherit: "default" 0.0;		\
			   visible: 0;		\
		   			 }		\
		 }		\
		part {		\
			name: "e.event.resize.r";		\
			type: RECT;		\
			description	{		\
						state: "default" 0.0;		\
						rel1 {		\
							relative: 1.0 0.0;		\
							offset: -3 0;		\
							to_x: "border";		\
							to_y: "border";		\
						}		\
			   			rel2 {		\
							relative: 1.0 1.0;		\
							offset: 0 -1;		\
							to_x: "border";		\
							to_x: "border";		\
							}		\
			   color: 0 0 0 0;		\
							}		\
			description {		\
			   state: "shaded" 0.0;		\
			   inherit: "default" 0.0;		\
			   visible: 0;		\
		   			 }		\
		 }
// fine event resize

#define PROGRAMS()				\
		program {				\
         signal: "e,state,shadow,on"; source: "e";				\
         action: STATE_SET "default" 0.0;				\
         target: "shadow_clip";				\
		}				\
		program {				\
         signal: "e,state,shadow,off"; source: "e";				\
         action: STATE_SET "hidden" 0.0;				\
         target: "shadow_clip";				\
		}				\
		program {				\
			name: "focus_in";				\
			signal: "e,state,focused";				\
			source: "e";				\
			action: STATE_SET "focused" 0.0;				\
			transition: LINEAR 0.3;				\
			target: "e.text.title";				\
		}				\
		program {				\
			name: "focus_out";				\
			signal: "e,state,unfocused";				\
			source: "e";				\
			action: STATE_SET "default" 0.0;				\
			transition: LINEAR 0.3;				\
			target: "e.text.title";				\
		}				\
		program {				\
			name: "over_Cls";				\
			signal: "mouse,in";				\
			source: "e.event.close";				\
			action: STATE_SET "over" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btCls";				\
		}				\
		program {				\
			name: "over_Cls_out";				\
			signal: "mouse,out";				\
			source: "e.event.close";				\
			action: STATE_SET "default" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btCls";				\
		}				\
				program {				\
			name: "over_Max";				\
			signal: "mouse,in";				\
			source: "e.event.maximize";				\
			action: STATE_SET "over" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btMax";				\
		}				\
		program {				\
			name: "over_Max_out";				\
			signal: "mouse,out";				\
			source: "e.event.maximize";				\
			action: STATE_SET "default" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btMax";				\
		}				\
				program {				\
			name: "over_Icn";				\
			signal: "mouse,in";				\
			source: "e.event.minimize";				\
			action: STATE_SET "over" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btIcn";				\
		}				\
		program {				\
			name: "over_Icn_out";				\
			signal: "mouse,out";				\
			source: "e.event.minimize";				\
			action: STATE_SET "default" 0.0;				\
			transition: LINEAR 0.2;				\
			target: "btIcn";				\
		}				\
		program {		\
			signal: "e,state,shaded"; source: "e";	\
			action: STATE_SET "shaded" 0.0;	\
			target: "border";	\
			target: "shadow";	\
		}	\
		program {		\
			signal: "e,state,unshaded"; source: "e";	\
			action: STATE_SET "default" 0.0;	\
			target: "border";	\
			target: "shadow";	\
		}	

fonts{
	font: "fonts/Harabara.ttf"   "Harabara";
}

styles {
		style {
			name: "title_bar";
			base: "font=Harabara font_size=15 align=center color=#000 wrap=mixed ellipsis=1.0";
		}
}

//Default window Border
group	{
	name:	"e/widgets/border/default/border";
	alias:	"e/widgets/border/shaped/border";
	alias:	"e/widgets/border/internal_fileman/border";
	images	{
		image: "img/border2.png" COMP;
		image: "img/titlebar.png" COMP;
		image: "img/btCls.png" COMP;
		image: "img/btMax.png" COMP;
		image: "img/btIcn.png" COMP;
		image: "img/btCls_focus.png" COMP;
		image: "img/btIcn_focus.png" COMP;
		image: "img/btMax_focus.png" COMP;
		image: "img/win_shadow.png" COMP;
		image: "img/titlebar_shadow.png" COMP;
			}

	parts {
			DEFAULT_PART();
			EVENT_RESIZE();
	}

	programs {
		PROGRAMS();
	}

}

//Noresize window Border
group {
	name: "e/widgets/border/noresize/border";
	parts {
			DEFAULT_PART();
	}
	programs {
		PROGRAMS();
	}
}

//Dialog window Border
group {
		 name: "e/widgets/border/dialog/border";
	
	 images{
	 	image: "img/popup_base.png" COMP;
	 	image: "img/btClsdialog.png" COMP;
	 	}
	 parts {
	 	DIALOG_PART();
	 	EVENT_RESIZE();
	 }
			programs {
		 program {
			name: "focus_in";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
		 program {
			name: "focus_out";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
	}

} 

//Noresize_dialog window Border
group {	 
 name: "e/widgets/border/noresize_dialog/border";

	 images{
	 	image: "img/dialog_base.png" COMP;
	 	}
	 parts {
	 	DIALOG_PART();
	}
				programs {
		 program {
			name: "focus_in";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
		 program {
			name: "focus_out";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
	}
}

//NoToolbar window Border
group {
	name: "e/widgets/border/notoolbar/border";
	images {
		image: "img/dialog_base.png" COMP;
	 	image: "img/btClsdialog.png" COMP;
	 	image: "img/btMaxdialog.png" COMP;
		image: "img/btIcndialog.png" COMP;
	}
	parts {
		DIALOG_PART();
	part	{	name: "btMax";
				mouse_events: 0;
				description{
					aspect: 1 1;
					state: "default" 0.0;
					rel1	{
						offset: -15 2;
						relative: 0.0 0.0;
						to_x: "btCls";
						to_y: "titlebar";
					}
					rel2	{
						offset: -4 -2;
						relative: 0.0 1.0;
						to_x: "btCls";
						to_y: "titlebar";
					}
					image	{
						normal: "img/btMaxdialog.png";
					}
				} 
	}
	part	{	name: "e.event.maximize";
		type: RECT;
		description {
			state: "default" 0.0 ;
			rel1.to:	"btMax";
			rel2.to:	"btMax";
			color: 0 0 0 0;
		}
	}
	part	{	name: "btIcn";
				mouse_events: 0;
				description{
					aspect: 1 1;
					state: "default" 0.0;
					rel1	{
						offset: -15 2;
						relative: 0.0 0.0;
						to_x: "btMax";
						to_y: "titlebar";
					}
					rel2	{
						offset: -4 -2;
						relative: 0.0 1.0;
						to_x: "btMax";
						to_y: "titlebar";
					}
					image	{
						normal: "img/btIcndialog.png";
					}
				} 
	}
	part	{	name: "e.event.minimize";
		type: RECT;
		description {
			state: "default" 0.0 ;
			rel1.to:	"btIcn";
			rel2.to:	"btIcn";
			color: 0 0 0 0;
		}
	}
	EVENT_RESIZE();	
	}
	programs {
		 program {
			name: "focus_in";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
		 program {
			name: "focus_out";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
	}
}

//noresize_NoToolbar window Border
group {
	name: "e/widgets/border/noresize_notoolbar/border";
		images {
		image: "img/dialog_base.png" COMP;
	 	image: "img/btClsdialog.png" COMP;
		image: "img/btIcndialog.png" COMP;
	}
	parts {
		DIALOG_PART();
	part	{	name: "btIcn";
				mouse_events: 0;
				description{
					aspect: 1 1;
					state: "default" 0.0;
					rel1	{
						offset: -15 2;
						relative: 0.0 0.0;
						to_x: "btCls";
						to_y: "titlebar";
					}
					rel2	{
						offset: -4 -2;
						relative: 0.0 1.0;
						to_x: "btCls";
						to_y: "titlebar";
					}
					image	{
						normal: "img/btIcndialog.png";
					}
				} 
	}
	part	{	name: "e.event.minimize";
		type: RECT;
		description {
			state: "default" 0.0 ;
			rel1.to:	"btIcn";
			rel2.to:	"btIcn";
			color: 0 0 0 0;
		}
	}	
	}
	programs {
		 program {
			name: "focus_in";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
		 program {
			name: "focus_out";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.title";
		 }
	}
}
