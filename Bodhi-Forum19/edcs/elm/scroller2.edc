group { name: "elm/scroller/base/default";
   alias: "elm/list/base/default";
   alias: "elm/genlist/base/default";
   alias: "elm/gengrid/base/default";
   alias: "elm/scroller/base/map_bubble";
   alias: "elm/genscroller/base/default";
   alias: "elm/scroller/base/popup/default";
   alias: "elm/scroller/base/popup/transparent";

images {
	image: "img/scroll_overlay2.png" COMP;
	image: "img/vbrunner.png" COMP;
	image: "img/scroll_up.png" COMP;
	image: "img/scroll_up2.png" COMP;
	image: "img/scroll_down.png" COMP;
	image: "img/scroll_down2.png" COMP;
	image: "img/scroll_left.png" COMP;
	image: "img/scroll_left2.png" COMP;
	image: "img/scroll_right.png" COMP;
	image: "img/scroll_right2.png" COMP;
	image: "img/slider.png" COMP;
	image: "img/slider2.png" COMP;
	image: "img/scroll_bg.png" COMP;
	image: "img/hbrunner.png" COMP;
}


   data.item: "focus_highlight" "on";

   /* THIS IS A COOL SCRIPT: ENABLE THE "INSENSITIVE" MODE FOR THE ARROWS: WHEN THE SLIDER
    * GOES TO THE BORDER, CHANGE THE ARROWS' STATE TO "HIDDEN"
    * 
    * THERE'S COMMENTED ALL THE LINES THAT ENABLE THIS FEATURE, UNCOMMENT TO ENABLE IT.
    * 
    * script {
      public action_on_pos_vbar(val) {
         new x, y , w, h, x1, y1 , w1, h1;

         get_geometry(PART:"y_vbar_up", x,y,w, h);
         get_geometry(PART:"y_vbar_up_mapper", x1,y1,w1, h1);

         if(y == y1)
         {
            set_state(PART:"arrow1_vbar", "hidden", 0.0);
            set_state(PART:"sb_vbar_a1", "hidden", 0.0);
         }
         else
         {
            set_state(PART:"arrow1_vbar", "default", 0.0);
            set_state(PART:"sb_vbar_a1", "default", 0.0);
         }

         get_geometry(PART:"y_vbar_down", x,y,w, h);
         get_geometry(PART:"y_vbar_down_mapper", x1,y1,w1, h1);

         if((y+h) == (y1+h1) )
         {
            set_state(PART:"arrow2_vbar", "hidden", 0.0);
            set_state(PART:"sb_vbar_a2", "hidden", 0.0);
         }
         else
         {
            set_state(PART:"arrow2_vbar", "default", 0.0);
            set_state(PART:"sb_vbar_a2", "default", 0.0);
         }

         if( val < 10)
            timer(0.1,"action_on_pos_vbar", val+1);
      }

      public action_on_pos_hbar(val) {
         new x, y , w, h, x1, y1 , w1, h1;

         get_geometry(PART:"x_hbar_left", x,y,w, h);
         get_geometry(PART:"x_hbar_left_mapper", x1,y1,w1, h1);

         if(x == x1)
         {
            set_state(PART:"arrow1_hbar", "hidden", 0.0);
            set_state(PART:"sb_hbar_a1", "hidden", 0.0);
         }
         else
         {
            set_state(PART:"arrow1_hbar", "default", 0.0);
            set_state(PART:"sb_hbar_a1", "default", 0.0);
         }

         get_geometry(PART:"x_hbar_right", x,y,w, h);
         get_geometry(PART:"x_hbar_right_mapper", x1,y1,w1, h1);

         if((x+w) == (x1+w1))
         {
            set_state(PART:"arrow2_hbar", "hidden", 0.0);
            set_state(PART:"sb_hbar_a2", "hidden", 0.0);
         }
         else
         {
            set_state(PART:"arrow2_hbar", "default", 0.0);
            set_state(PART:"sb_hbar_a2", "default", 0.0);
         }

         if( val < 10)
            timer(0.1,"action_on_pos_hbar", val+1);
      }
   }*/

   parts {
     /* program {
         signal: "load"; source: "";
         script {
            emit("reload", "elm");
            action_on_pos_vbar(0);
            action_on_pos_hbar(0);
         }
      }*/
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 20 0;
            max: 20 9999;
            align: 1.0 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "sb_hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 99999;
         }
      }
      part { name: "sb_vbar_base"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
            fixed: 1 1;
         }
      }
      part { name: "sb_vbar_p1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "elm.dragable.vbar";
            fixed: 1 1;
         }
      }
      part { name: "sb_vbar_p2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
            fixed: 1 1;
         }
      }
      part { name: "elm.dragable.vbar"; type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar_base";
         description { state: "default" 0.0;
            FIXED_SIZE(19,19)
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar_base";
            color: 0 0 0 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      /*part { name: "y_vbar_up_mapper"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 4 2;
            max: 4 2;
            fixed: 1 1;
            align: 0.0 0.0;
            rel1.to: "sb_vbar_base";
            rel2.to: "sb_vbar_base";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "y_vbar_up"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 4 2;
            max: 4 2;
            fixed: 1 1;
            align: 0.0 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "y_vbar_down_mapper"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 4 2;
            max: 4 2;
            fixed: 1 1;
            align: 0.0 1.0;
            rel1.to: "sb_vbar_base";
            rel2.to: "sb_vbar_base";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "y_vbar_down"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 4 2;
            max: 4 2;
            fixed: 1 1;
            align: 0.0 1.0;
            rel1.to: "elm.dragable.vbar";
            rel2.to: "elm.dragable.vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }*/
      part { name: "sb_vbar_a1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 0.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel2.to: "sb_vbar";
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "sb_vbar_a2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            align: 0.5 1.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel1.offset: 0 -1;
            rel1.relative: 0.0 1.0;
            rel2.to: "sb_vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      program {
         signal: "elm,action,show,vbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
         target: "elm.dragable.vbar";
         target: "arrow1_vbar";
         target: "arrow2_vbar";
         target: "sb_vbar_a1";
         target: "sb_vbar_a2";
         /*target: "y_vbar_up_mapper";
         target: "y_vbar_up";
         target: "y_vbar_down_mapper";
         target: "y_vbar_down";
         after: "check_pos_vbar";*/
      }
      program {
         signal: "elm,action,hide,vbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
         target: "elm.dragable.vbar";
         target: "sb_vbar_a1";
         target: "sb_vbar_a2";
         target: "arrow1_vbar";
         target: "arrow2_vbar";
         /*target: "y_vbar_up_mapper";
         target: "y_vbar_up";
         target: "y_vbar_down_mapper";
         target: "y_vbar_down";*/
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";//ok
         action: STATE_SET "clicked" 0.0;
         target: "arrow1_vbar";
         after: "anim1_up";
      }
      program { name: "anim1_up";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.1;
         target: "arrow1_vbar";
         after: "drag_up";
      }
      program { name: "drag_up";
         action: DRAG_VAL_STEP 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";//ok
         action: STATE_SET "clicked" 0.0;
         target: "arrow2_vbar";
         after: "anim1_down";
      }
      program { name: "anim1_down";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.1;
         target: "arrow2_vbar";
         after: "drag_down";
      }
      program { name: "drag_down";
         action: DRAG_VAL_STEP 0.0 1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }
      /*program {
         signal: "elm,action,scroll"; source: "elm";
         script {
            action_on_pos_vbar(10);
         }
      }
      program { name: "check_pos_vbar";
         script {
            action_on_pos_vbar(10);
         }
      }*/

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show"; type: RECT;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 1 20;
            max: 9999 20;
            align: 0.0 1.0;
            rel1.relative: 0.0 1.0;
            rel2.offset: 0 -10;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "sb_vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 99999 0;
         }
      }
      part { name: "sb_hbar_base"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
            fixed: 1 1;
         }
      }
      part { name: "sb_hbar_p1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "elm.dragable.hbar";
            fixed: 1 1;
         }
      }
      part { name: "sb_hbar_p2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
            fixed: 1 1;
         }
      }
      part { name: "elm.dragable.hbar"; type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar_base";
         description { state: "default" 0.0;
            FIXED_SIZE(19,19)
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar_base";
            color: 0 0 0 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
         }
      }
      /*part { name: "x_hbar_left_mapper"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 2 4;
            max: 2 4;
            fixed: 1 1;
            align: 0.0 1.0;
            rel1.to: "sb_hbar_base";
            rel2.to: "sb_hbar_base";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "x_hbar_left"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 2 4;
            max: 2 4;
            fixed: 1 1;
            align: 0.0 1.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "x_hbar_right_mapper"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 2 4;
            max: 2 4;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1.to: "sb_hbar_base";
            rel2.to: "sb_hbar_base";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }
      part { name: "x_hbar_right"; type: SPACER;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: 2 4;
            max: 2 4;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1.to: "elm.dragable.hbar";
            rel2.to: "elm.dragable.hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 0;
         }
      }*/
      part { name: "sb_hbar_a1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            FIXED_SIZE(18,20)
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel1.relative: 0.0 0.5;
            rel2.to: "sb_hbar";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -1;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      part { name: "sb_hbar_a2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            FIXED_SIZE(18,20)
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel1.offset: -1 0;
            rel1.relative: 1.0 0.5;
            rel2.to: "sb_hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            visible: 0;
         }
      }
      program {
         signal: "elm,action,show,hbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
         target: "elm.dragable.hbar";
         target: "sb_hbar_a1";
         target: "sb_hbar_a2";
         target: "arrow1_hbar";
         target: "arrow2_hbar";
         /*target: "x_hbar_left_mapper";
         target: "x_hbar_left";
         target: "x_hbar_right_mapper";
         target: "x_hbar_right";
         after: "check_pos_hbar";*/
      }
      program {
         signal: "elm,action,hide,hbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
         target: "elm.dragable.hbar";
         target: "sb_hbar_a1";
         target: "sb_hbar_a2";
         target: "arrow1_hbar";
         target: "arrow2_hbar";
         /*target: "x_hbar_left_mapper";
         target: "x_hbar_left";
         target: "x_hbar_right_mapper";
         target: "x_hbar_right";*/
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: STATE_SET "clicked" 0.0;
         target: "arrow1_hbar";
         after: "anim1_left";
      }
      program { name: "anim1_left";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.1;
         target: "arrow1_hbar";
         after: "drag_left";
      }
      program { name: "drag_left";
         action: DRAG_VAL_STEP -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: STATE_SET "clicked" 0.0;
         target: "arrow2_hbar";
         after: "anim2_left";
      }
      program { name: "anim2_left";
         action: STATE_SET "default" 0.0;
         transition: LINEAR 0.1;
         target: "arrow2_hbar";
         after: "drag_right";
      }
      program { name: "drag_right";
         action: DRAG_VAL_STEP 1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
         //after: "check_pos_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
        // after: "check_pos_hbar";
      }
      /*program {
         signal: "elm,action,scroll"; source: "elm";
         script {
            action_on_pos_hbar(10);
         }
      }
      program { name: "check_pos_hbar";
         script {
            action_on_pos_hbar(10);
         }
      }*/
      part { name: "bg"; type: RECT;
         type: IMAGE;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                rel1 {
                    to: "inset";
					offset: 0 1;
                }
                rel2 {
                    to: "inset";
					offset: -1 -1;
                }
                image {
                    normal: "img/scroll_bg.png";
                    border: 7 7 7 7;
                }
				color_class: "scrollframe_base";
            }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background";
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.background"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 4 2;
            rel2.relative: 0.0 0.0;
            rel2.offset: -4 -2;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 4 2;
            rel2.relative: 0.0 0.0;
            rel2.offset: -4 -2;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "inset"; mouse_events: 0;
         description { state: "default" 0.0;
				rel1.offset: 3 2;
                rel2 {
                    offset: -4 -2;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
					relative: 0.0 0.0;
                }
                image {
                    normal: "img/scroll_overlay2.png";
                    border: 10 10 10 10;
					middle: 0;
                }
         }
      }
      
      part { name: "elm.swallow.overlay"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
      part { name: "runner_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            image {
                    normal: "img/vbrunner.png";
                    border: 4 4 4 4;
                }
            rel1.to: "sb_vbar_base";
            rel1.offset: 0 -6;
            rel2.to: "sb_vbar_base";
            rel2.offset: 0 6;
            max: 6 99999;
                min: 6 1;
				fixed: 1 0;
         }
      }
      part { name: "runner_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            image {
                    normal: "img/hbrunner.png";
                    border: 4 4 4 4;
                }
            rel1.to: "sb_hbar_base";
            rel1.offset: -6 0 ;
            rel2.to: "sb_hbar_base";
            rel2.offset: 3 0 ;
            fill.smooth: 0;
			min: 1 6;
            max: 99999 6;
			fixed: 0 1;
         }
      }
      part { name: "arrow1_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a1";
            rel2.to: "sb_vbar_a1";
               image.normal: "img/scroll_up.png";
            FIXED_SIZE(20, 18)
         }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_up2.png";
            }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      
      part { name: "arrow2_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a2";
            rel2.to: "sb_vbar_a2";
               image.normal: "img/scroll_down.png";
            FIXED_SIZE(20, 18)
         }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
				image.normal: "img/scroll_down2.png";
            }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }

      part { name: "base_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 2 0;
            rel1.to: "elm.dragable.vbar";
            rel2.offset: -3 -1;
            rel2.to: "elm.dragable.vbar";
            image {
                    normal: "img/slider.png";
                    border: 6 6 6 6;
                }
                fill.smooth: 0;
            FIXED_SIZE(19,19)
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "img/slider2.png";
            }
      }
      
      
      part { name: "arrow1_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.to: "sb_hbar_a1";
               image.normal: "img/scroll_left.png";
            FIXED_SIZE(18, 20)
         }
         description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_left2.png";
            }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      
      part { name: "arrow2_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a2";
            rel2.to: "sb_hbar_a2";
               image.normal: "img/scroll_right.png";
            FIXED_SIZE(18, 20)
         }
         description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_right2.png";
            }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      
      part { name: "base_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: 0 2;
            rel1.to: "elm.dragable.hbar";
            rel2.offset: -1 -3;
            rel2.to: "elm.dragable.hbar";
            image {
                    normal: "img/slider.png";
                    border: 6 6 6 6;
                }
                fill.smooth: 0;
            FIXED_SIZE(19,19)
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "img/slider2.png";
            }
         }
      }
      
   programs {
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.vbar";
         target: "base_vbar";
      }
      program {
         signal: "mouse,down,*"; source: "elm.dragable.vbar";
         action: SIGNAL_EMIT "elm,vbar,press" "elm";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.vbar";
         target: "base_vbar";
      }
      program {
         signal: "mouse,up,*"; source: "elm.dragable.vbar";
         action: SIGNAL_EMIT "elm,vbar,unpress" "elm";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         target: "elm.dragable.hbar";
         target: "base_hbar";
      }
      program {
         signal: "mouse,down,*"; source: "elm.dragable.hbar";
         action: SIGNAL_EMIT "elm,hbar,press" "elm";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "elm.dragable.hbar";
         target: "base_hbar";
      }
      program {
         signal: "mouse,up,*"; source: "elm.dragable.hbar";
         action: SIGNAL_EMIT "elm,hbar,unpress" "elm";
      }
      
      program {
			 name: "a1_over";
			 signal: "mouse,in";
			 source: "sb_vbar_a1";
			 action: STATE_SET "clicked" 0.0;
			 target: "arrow1_vbar";
		 }
		 program {
			 name: "a1_over_out";
			 signal: "mouse,out";
			 source: "sb_vbar_a1";
			 action: STATE_SET "default" 0.0;
			 target: "arrow1_vbar";
		 }
		 program {
			 name: "a2_over";
			 signal: "mouse,in";
			 source: "sb_vbar_a2";
			 action: STATE_SET "clicked" 0.0;
			 target: "arrow2_vbar";
		 }
		 program {
			 name: "a2_over_out";
			 signal: "mouse,out";
			 source: "sb_vbar_a2";
			 action: STATE_SET "default" 0.0;
			 target: "arrow2_vbar";
		 }
		 
		  program {
			 name: "a1_over_h";
			 signal: "mouse,in";
			 source: "sb_hbar_a1";
			 action: STATE_SET "clicked" 0.0;
			 target: "arrow1_hbar";
		 }
		 program {
			 name: "a1_over_h_out";
			 signal: "mouse,out";
			 source: "sb_hbar_a1";
			 action: STATE_SET "default" 0.0;
			 target: "arrow1_hbar";
		 }
		 program {
			 name: "a2_over_h";
			 signal: "mouse,in";
			 source: "sb_hbar_a2";
			 action: STATE_SET "clicked" 0.0;
			 target: "arrow2_hbar";
		 }
		 program {
			 name: "a2_over_h_out";
			 signal: "mouse,out";
			 source: "sb_hbar_a2";
			 action: STATE_SET "default" 0.0;
			 target: "arrow2_hbar";
		 }
      
   }
}

group { name: "elm/scroller/base/noclip";
   inherit: "elm/scroller/base/default";
   parts {
      part { name: "clipper";
         description { state: "default" 0.0;
            rel1.offset: -999999 -999999;
            rel2.offset: 999999 999999;
         }
      }
      part { name: "elm.swallow.background";
         description { state: "default" 0.0;
            rel1.offset: 0 0;
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.content";
         description { state: "default" 0.0;
            rel1.offset: 0 1;
            rel2.offset: -1 -1;
         }
      }
      part { name: "inset";
         description { state: "default" 0.0;
            visible: 0;
         }
      }
   }
}
