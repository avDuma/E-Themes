styles {
	style {
		name: "fileman_icon_name";
		base: "font=Sans font_size=11 text_class=fileman_icon align=center color=#fff wrap=mixed ellipsis=1.0";
	}
	style {
		name: "fileman_icon_name_full";
		base: "font=Sans font_size=11 text_class=fileman_icon align=center color=#fff wrap=mixed";
	}
	style {
		name: "fileman_desktop_icon_name";
		base: "font=Sans font_size=11 text_class=desktop_icon align=center color=#fff wrap=mixed ellipsis=1.0 style=soft_shadow shadow_color=#0002";
	}
	style {
		name: "fileman_desktop_icon_name_full";
		base: "font=Sans font_size=11 text_class=desktop_icon align=center color=#fff wrap=mixed style=soft_shadow shadow_color=#0002";
	}
}


#define EVENT_RECT								\
	part {										\
		name: "event";							\
		type: RECT;								\
		description {							\
			state: "default" 0.0;				\
			color: 0 0 0 0;						\
		}										\
	}


#define FILEMAN_ICON(ALIGN, REL1, OFF1, REL2, OFF2, MIN)			\
	part {													\
		name: "icon_box_shadow";							\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			color: 255 255 255 221;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
			image {											\
				normal: "img/fileman_im1.png";			\
				border: 8 8 8 8;							\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box";									\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			align: 0.5 0.5;									\
			color: 7 7 7 192;								\
			rel1 {											\
				to: "e.swallow.icon";						\
				relative: 0.0 0.0;							\
				offset: -1 -1;								\
			}												\
			rel2 {											\
				to: "e.swallow.icon";						\
				relative: 1.0 1.0;							\
				offset: 0 0;								\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box_bg";								\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: 1 1;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: -2 -2;								\
			}												\
			image {											\
				normal: "img/fileman_im2.png";			\
			}												\
			fill {											\
				smooth: 0;									\
				size {										\
					relative: 0 0;							\
					offset: 16 16;							\
				}											\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon0";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			min: MIN;										\
			state: "default" 0.0;							\
			align: ALIGN;									\
			aspect: 1.0 1.0;								\
			aspect_preference: VERTICAL;					\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				relative: REL1;								\
				offset: OFF1;								\
			}												\
			rel2 {											\
				relative: REL2;								\
				offset: OFF2;								\
			}												\
		}													\
	}														\
	part {													\
		name: "icon";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			align: 0.5 0.5;									\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				to: "icon0";								\
			}												\
			rel2 {											\
				to: "icon0";								\
			}												\
		}													\
		description {										\
			state: "min" 0.0;								\
			inherit: "default" 0.0;							\
			max: 0 0;										\
		}													\
		description {										\
			state: "max" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
		}													\
		description {										\
			state: "max2" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -2 -2;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 1 1;								\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon";								\
		type: SWALLOW;										\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			align: 0.5 0.5;									\
			color: 255 255 255 128;							\
			rel1 {											\
				to: "icon";									\
			}												\
			rel2 {											\
				to: "icon";									\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon_clip";						\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			color: 235 235 235 255;							\
		}													\
		description {										\
			state: "hover" 0.0;								\
			color: 255 255 255 255;							\
		}													\
		description {										\
			state: "selected" 0.0;							\
			color: 229 229 229 255;							\
		}													\
	}														\


#define LIST_DND_ACTION										\
	part {													\
		name: "dnd_action";									\
		type: IMAGE;										\
		mouse_events: 0;									\
		repeat_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
		}													\
		description {										\
			state: "visible" 0.0;							\
			min: 24 24;										\
			max: 24 24;										\
			fixed: 1 1;										\
			visible: 1;										\
			rel1 {											\
				to_x: "icon";								\
				to_y: "icon";								\
				relative: 0.95 0.85;						\
				offset: 0 0;								\
			}												\
			rel2 {											\
				to: "icon";									\
				relative: 1.0 0.85;							\
				offset: -1 -1;								\
			}												\
		}													\
		description {										\
			state: "copy" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "img/icon_efm_dnd_copy.png";	\
		}													\
		description {										\
			state: "ask" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "img/icon_efm_dnd_ask.png";		\
		}													\
		description {										\
			state: "move" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "img/icon_efm_dnd_move.png";	\
		}													\
	}														\

#define FILEMAN_DND_PROGS									\
	program {												\
		name: "ask";										\
		signal: "e,state,ask";								\
		source: "e";										\
		action: STATE_SET "ask" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "move";										\
		signal: "e,state,move";								\
		source: "e";										\
		action: STATE_SET "move" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "copy";										\
		signal: "e,state,copy";								\
		source: "e";										\
		action: STATE_SET "copy" 0.0;						\
		target: "dnd_action";								\
	}														\

#define FILEMAN_LIST_PROGS									\
	program {												\
		name: "active_list";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "unactive_list";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "active_text";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		target: "e.text.label";								\
	}														\
	program {												\
		name: "unactive_text";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "e.text.label";								\
	}														\

#define FILEMAN_THUMB_PROGS									\
	program {												\
		name: "thumb_gen";									\
		signal: "e,action,thumb,gen";						\
		source: "e";										\
		action: STATE_SET "visible" 0.0;					\
		target: "icon_box";									\
		/* target: "icon_box_bg"; */						\
		target: "icon_box_shadow";							\
		/* after: "thumb_gen2"; */							\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen-";									\
		signal: "e,action,thumb,gen,alpha";					\
		source: "e";										\
		action: STATE_SET "visible" 0.0;					\
		target: "icon_box";									\
		target: "icon_box_bg";								\
		target: "icon_box_shadow";							\
		target: "icon";										\
		/*after: "thumb_gen2";*/							\
	}														\
	program {												\
		name: "thumb_gen2";									\
		action: STATE_SET "min" 0.0;						\
		target: "icon";										\
		after: "thumb_gen3";								\
	}														\
	program {												\
		name: "thumb_gen3";									\
		action: STATE_SET "max" 0.0;						\
		target: "icon";										\
		transition: DECELERATE 0.25;						\
		after: "thumb_gen4";								\
	}														\
	program {												\
		name: "thumb_gen4";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
		after: "thumb_gen5";								\
	}														\
	program {												\
		name: "thumb_gen5";									\
		action: STATE_SET "max2" 0.0;						\
		target: "icon";										\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen6";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
	}														\


#define FILEMAN_VOL_PROGS									\
	program {												\
		name: "vol_off";									\
		signal: "e,state,volume,off";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_unmounted";								\
		signal: "e,state,volume,unmounted";					\
		source: "e";										\
		action: STATE_SET "unmounted" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_mounted";								\
		signal: "e,state,volume,mounted";					\
		source: "e";										\
		action: STATE_SET "mounted" 0.0;					\
		target: "vol_state";								\
	}

#define LIST_LABEL										\
	part {												\
		name: "e.text.label";							\
		type: TEXT;										\
		effect: NONE;							\
		scale: 1;										\
		mouse_events: 0;								\
		description {									\
			state: "default" 0.0;						\
			min: 16 16;									\
			rel1 {										\
				to_x: "icon0";							\
				relative: 1.0 0.0;						\
				offset: 6 6;							\
			}											\
			rel2 {										\
				relative: 1.0 1.0;						\
				offset: -5 -3;							\
			}											\
			color_class: "label_text";					\
			color3: 255 255 255 255;					\
			text {										\
			font: "Sans";								\
			size: 11;						\
			min: 1 1;								\
			align: 0.0 0.5;							\
			text_class: "ilist_item";				\
				}				\
		}												\
		description {									\
			state: "selected" 0.0;						\
			inherit: "default" 0.0;						\
				color_class: "ilist_item_selected";			\
		}												\
	}

#define FILEMAN_VOL_STATE(MIN, REL1, REL2)						\
	part {														\
		name: "vol_state";										\
		type: IMAGE;											\
		mouse_events: 0;										\
		repeat_events: 0;										\
		description {											\
			state: "default" 0.0;								\
			color: 0 0 0 0;										\
		}														\
		description {											\
			state: "visible" 0.0;								\
			aspect: 1.0 1.0;									\
			aspect_preference: BOTH;							\
			align: 1.0 1.0;										\
			min: MIN;											\
			rel1 {												\
				relative: REL1;									\
				to: "icon";										\
			}													\
			rel2 {												\
				relative: REL2;									\
				to: "icon";										\
			}													\
		}														\
		description {											\
			state: "unmounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "img/icon_efm_vol_unmounted.png";	\
		}														\
		description {											\
			state: "mounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "img/icon_efm_vol_mounted.png";		\
		}														\
	}

#define FILEMAN_GRID_PROGS						\
	program {									\
		name: "event_in";						\
		signal: "mouse,in";						\
		source: "event";						\
		action: STATE_SET "hover" 0.0;			\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_out";						\
		signal: "mouse,out";					\
		source: "event";						\
		action: STATE_SET "default" 0.0;		\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_selected";					\
		signal: "e,state,selected";				\
		source: "e";							\
		action: STATE_SET "selected" 0.0;		\
		transition: ACCELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}											\
	program {									\
		name: "event_unselected";				\
		signal: "e,state,unselected";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}

#define LIST_ICON \
	FILEMAN_ICON(0.0 0.5, 0.0 0.0, 10 10, 0.0 1.0, 8 -8, 24 24)

#define GRID_ICON \
	FILEMAN_ICON(0.5 0.5, 0.0 0.0, 5 5, 1.0 1.0, -9 -40, 0 0)

#define LIST_VOL_STATE \
	FILEMAN_VOL_STATE(0 0, 0.5 0.0, 1.0 1.0)

#define GRID_VOL_STATE \
	FILEMAN_VOL_STATE(16 16, 0.75 0.0, 1.0 1.0)

#define IMG									\
	images {										\
		image: "img/fileman_im0.png" COMP;					\
		image: "img/fileman_im1.png" COMP;					\
		image: "img/fileman_im2.png" COMP;					\
		image: "img/icon_efm_dnd_ask.png" COMP;					\
		image: "img/icon_efm_dnd_copy.png" COMP;			\
		image: "img/icon_efm_dnd_move.png" COMP;			\
		image: "img/icon_efm_vol_mounted.png" COMP;				\
		image: "img/icon_efm_vol_unmounted.png" COMP;		\
		image: "img/menu_sel_bg.png" COMP;		\
		image: "img/wallpaper_pat1.png" COMP;		\
		image: "img/rubber_bg.png" COMP;		\
		image: "img/rubber.png" COMP;		\
}

group { 
	name: "e/fileman/default/list/fixed";
	alias: "e/fileman/desktop/list/fixed";
	alias: "e/fileman/default/list/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	
	IMG;

	parts {
		part {
			name: "base";
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "ilist_item_base"; 
				min: 100 30;
			}
			description {
				state: "selected" 0.0;
				color: 242 133 12 255;
			}
		}
		LIST_ICON;
		LIST_LABEL;
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
	}
	programs {
		FILEMAN_THUMB_PROGS;
		FILEMAN_LIST_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}

group {

IMG

	name: "e/fileman/default/list_odd/fixed";
	alias: "e/fileman/desktop/list_odd/fixed";
	alias: "e/fileman/default/list_odd/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	parts {

		part {
			name: "base";
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
				color_class: "ilist_item_odd_base"; 
				color: 255 255 255 255;
			}
			description {
				state: "selected" 0.0;
				color: 242 133 12 255;
			}
		}
		LIST_ICON;
		LIST_LABEL;		
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
	}
	programs {
		FILEMAN_LIST_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/default/icon/variable";
	alias: "e/fileman/default/icon/fixed";

IMG

	
	parts {
		GRID_ICON;

		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;
				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "img/menu_sel_bg.png";  //fileman_im4
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 30 30 30 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					font: "Sans";
					size: 11;
					style: "fileman_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "fileman_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}
		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
	}
	programs {
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/desktop/icon/variable";
	alias: "e/fileman/desktop/icon/fixed";

IMG

	parts {
		GRID_ICON;

		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;
				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "img/menu_sel_bg.png";
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 225 225 225 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					style: "fileman_desktop_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				text {
					style: "fileman_desktop_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}
		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
	}
	programs {
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/default/window/main";
	parts {	
		part {
			name: "background";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				color_class: "fileman_base";
			}
		}
		/*part {
            name: "e.swallow.bg";
            type: SWALLOW;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				rel1.to: "background";
				rel2.to: "background";
				rel1.offset: 0 0;
				rel2.offset: 0 0;
            }
         }*/
         part { name: "e.swallow.favorites"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            rel1.offset: 4 4;
            rel1.to: "region"; 
            rel2.offset: 4 -5;
            rel2.relative: 0.0 1.0;
            rel2.to: "region"; 
            fixed: 1 0;
         }
      }
         part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 4;
            rel1.to: "region"; 
            rel2.offset: -5 -5;
            rel2.to: "region"; 
            align: 1.0 1.0;
         }
         description { state: "fav" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.favorites";
         }
      }
           part { name: "e.swallow.toolbar"; type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            align: 0.5 0.0;
            rel1.offset: 0 0;
            // XXX: this is a bug workaround. should be -4 4;
            rel2.offset: 0 4;
            rel2.relative: 1.0 0.0;
            fixed: 0 1;
         }
         description { state: "tb_bottom" 0.0;
            align: 0.5 1.0;
            rel1.offset: 4 -5;
            rel1.relative: 0.0 1.0;
            // XXX: this is a bug workaround. should be -4 -5;
            rel2.offset: -9 -5;
            fixed: 0 1;
         }
      }
      part { name: "region"; type: SPACER;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.swallow.toolbar"; 
         }
         description { state: "tb_bottom" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "e.swallow.toolbar"; 
         }
         description { state: "tb_left" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.toolbar"; 
         }
         description { state: "tb_right" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.swallow.toolbar"; 
         }
      }		
/*
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 205 204 188 2;
				visible: 0;
				image {
					normal: "img/wallpaper_pat1.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 280 280;
					}
				}
			}
		}*/
	}
	
	programs {
      program {
         signal: "e,favorites,enabled"; source: "e";
         action: STATE_SET "fav" 0.0;
         target: "e.swallow.content";
      }
      program {
         signal: "e,favorites,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.content";
      }
      program {
         signal: "e,toolbar,left"; source: "e";
         action: STATE_SET "tb_left" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,right"; source: "e";
         action: STATE_SET "tb_right" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,top"; source: "e";
         action: STATE_SET "tb_top" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,bottom"; source: "e";
         action: STATE_SET "tb_bottom" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
   }
}
/* controls aspect of efm window overlay */
group {
	name: "e/fileman/default/overlay";
	alias: "e/fileman/desktop/overlay";
	parts {
		//The entry when you type something on EFM
		
		part {
            name: "shadow_type";
            mouse_events: 0;
            description {
				rel1 {
					offset: -6 -6;
					to: "popup_type";
				}
				rel2 {
					offset: 8 8;
					to: "popup_type";
					}
               state: "default" 0.0;
               align: 0.5 0.5;
               color:  255 255 255 0;
               image {
                  normal: "img/popup_shadow.png";
                  border: 15 15 15 15;
               }
            }
            description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255  255 255 255;
			}
         }
        part {
            name: "popup_type";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
					to: "entry";
					relative: 0.0 0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "entry";
					relative: 1.0 1.0;
					offset: 3 4;
				}
               image {
                  normal: "img/popup_base.png";
                  border: 6 6 6 6;
               }
               color:  255 255 255 0;
               fill.smooth: 0;
            }
            description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255  255 255 255;
			}
         } 
		part {
            name: "entry";
            type: IMAGE;
            description {
               state: "default" 0.0;
               rel1.offset: 1 1;
               rel1.to: "overlay";
               rel2.to: "overlay";
               rel2.offset: -1  -1;
               color: 255 255 255 0;
               image.normal: "img/shelf_inset_bg.png";
               image.border: 7 7 7 7;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
	/*	
		part {
			name: "overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				color: 255 255 255 0;
				rel1 {
					to: "e.text.typebuf_label";
					relative: 0.0 0.0;
					offset: -6 -4;
				}
				rel2 {
					to: "e.text.typebuf_label";
					relative: 1.0 1.0;
					offset: 4 3;
				}
				image {
					normal: "img/ibar_im3.png";
					border: 7 7 10 8;
				}
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}
*/
		part {
			name: "e.text.typebuf_label";
			type: TEXT;
			effect: SHADOW;
			scale: 1;
			mouse_events: 0;
			clip_to: "typebuf_clip";
			description {
				state: "default" 0.0;
				align: 0.8 1.0;
				max: 120 26;
				rel1 {
					relative: 0.0 0.0;
					offset: 6 4;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 0 -15;
				}
				color: 255 255 255 255;
				color3: 17 16 16 100;
				text {										
				font: "Sans";								
				size: 11;						
				min: 1 1;								
				align: 0.0 0.5;					
				text_class: "ilist_item_header";				
				}
				color_class: "ilist_item_header";
				/* elipsis: 0.5; */
			}
		}
		part {
            name: "overlay";
            mouse_events: 0;
            description {
				rel1 {
					to: "e.text.typebuf_label";
					relative: 0.0 0.0;
					offset: -5 -2;
				}
				rel2 {
					to: "e.text.typebuf_label";
					relative: 1.0 1.0;
					offset: 1 -3;
				}
               state: "default" 0.0;
               image {
                  normal: "img/shelf_inset_over.png";
                  border: 7 7 7 7;
                  middle: 0;
               }
               fill.smooth : 0;
               color: 255 255 255 0;
            }
            description {
               state: "active" 0.0;
               inherit: "default" 0.0;
               color: 255 255 255 255;
            }
         }
		//A popup that shows how much file EFM is loading
		part {
            name: "shadow";
            mouse_events: 0;
            description {
				min: 80 75;
				max: 80 75;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: -10 -20;
				}
				rel2 {
					to: "e.text.busy_label";
					relative: 1.0 1.0;
					offset: 7 15;
				}
               state: "default" 0.0;
               align: 0.5 0.5;
               color:  255 255 255 0;
               image {
                  normal: "img/popup_shadow.png";
                  border: 15 15 15 15;
               }
            }
            description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255  255 255 255;
			}
         }
         part {
            name: "popup";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
					offset: 6 6;
					to: "shadow";
				}
				rel2 {
					offset: -8 -8;
					to: "shadow";
					}
               image {
                  normal: "img/popup_base.png";
                  border: 6 6 6 6;
               }
               color:  255 255 255 0;
               fill.smooth: 0;
            }
            description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255  255 255 255;
			}
         } 
		
		part {
            name: "base";
            clip_to: "busy_clip";
            description {
				max: 32 32;
               state: "default" 0.0;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "img/bodhi_circle.png";
            }
         }
         part {
            name: "busy";
            clip_to: "busy_clip";
            description {
               state: "default" 0.0;
               visible: 1;
               rel1.to: "base";
               rel2.to: "base";
               rel1.relative: 0.0 0.0;
               rel2.relative: 1.0 1.0;
               color: 255 255 255 255;
               aspect: 1.0 1.0;
               aspect_preference: BOTH;
               image.normal: "img/bodhi_leaf.png";
            }
            description {
               state: "bounce" 0.0;
               inherit: "default" 0.0;
               rel1.relative: -0.5 -0.5;
               rel2.relative: 1.5 1.5;
               visible: 1;
               color: 255 255 255 30;
            }
         }      
		part {
			name: "e.text.busy_label";
			type: TEXT;
			scale: 1;
			mouse_events: 0;
			clip_to: "busy_clip";
			description {
				state: "default" 0.0;
				align: 0.5 0.5;

				rel1 {
					to: "base";
					relative: 0.0 1.0;
					offset: 8 20;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
					offset: -9 -1;
				}
				color: 255 255 255 255;
				text {										
				font: "Sans";								
				size: 10;						
				min: 1 1;								
				align: 0.5 0.5;					
				text_class: "ilist_item_header";				
				}
				color_class: "ilist_item_header";
			}
		}

		part {
			name: "busy_clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
			}
			description {
				state: "active" 0.0;
				color: 255 255 255 255;
				visible: 1;
			}
		}

		part {
			name: "typebuf_clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
				
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				visible: 1;
				rel1.to: "overlay";
				rel2.to: "overlay";
			}
		}
	}
	programs {
		 program {
		  		name: "go1";
		  		signal: "e,state,busy,start";
		  		source: "e";
		  		action: STATE_SET "active" 0.0;
		  		transition: LINEAR 0.15;
		  		target: "busy_clip";
		  		target: "shadow";
		  		target: "popup";
		  	}

		  	program {
		  		name: "go2";
		  		signal: "e,state,busy,start";
		  		source: "e";
		  		action: STATE_SET "bounce" 0.0;
		  		transition: ACCELERATE 0.5;
		  		target: "busy";
		  		after: "go2b";
		  	}
			program {
		  		name: "go2b";
		  		action: STATE_SET "default" 0.0;
		  		transition: LINEAR 0.0;
		  		target: "busy";
		  		after: "go2";
		  	}
		  	program {
		  		name: "stop1";
		  		signal: "e,state,busy,stop";
		  		source: "e";
		  		action: STATE_SET "default" 0.0;
		  		transition: ACCELERATE 0.25;
		  		target: "busy_clip";
		  		target: "shadow";
		  		target: "popup";
		  		after: "stop2"; in: 2.0 0.0;
		  	}

		  	program {
		  		name: "stop2";
		  		action: ACTION_STOP;
		  		target: "go2";
		  	}
		program {
			name: "gob1";
			signal: "e,state,typebuf,start";
			source: "e";
			action: STATE_SET "active" 0.0;
			transition: LINEAR 0.25;
			target: "popup_type";
			target: "entry";
			target: "overlay";
			target: "shadow_type";
			target: "typebuf_clip";
		}
		program {
			name: "stopb1";
			signal: "e,state,typebuf,stop";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "popup_type";
			target: "entry";
			target: "overlay";
			target: "shadow_type";
			target: "typebuf_clip";
			/* after: "stop2"; */
		}
		/*
		 * FIXME: implement this to show drop in the blank areas
		 */
		/*
		  program {
		  name: "goc1";
		  signal: "e,state,drop,start";
		  source: "e";
		  action: STATE_SET "active" 0.0;
		  transition: SINUSOIDAL 0.25;
		  target:  "typebuf_clip";
		  }
		  program {
		  name: "stopc1";
		  signal: "e,state,drop,stop";
		  source: "e";
		  action: STATE_SET "default" 0.0;
		  transition: SINUSOIDAL 1.0;
		  target: "typebuf_clip";
		  after: "stop2";
		  }
		*/
	}
}
group {
	name: "e/fileman/default/list/drop_between";
	alias: "e/fileman/default/list/drop_in";
	alias: "e/fileman/desktop/list/drop_in";
	alias: "e/fileman/desktop/list/drop_between";
	parts {

		part {
			name: "bg";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				rel1 {
					relative: 0.0 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "img/fileman_im0.png";
					border: 26 26 26 26;
				}
			}
			description {
				state: "grow+fade" 0.0;
				color: 255 255 255 0;
				rel1 {
					relative: -0.25 -0.25;
				}
				rel2 {
					relative: 1.25 1.25;
				}
				image {
					normal: "img/fileman_im0.png";
					border: 26 26 26 26;
				}
			}
		}
	}
	programs {
		program {
			name: "go";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "grow+fade" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}
		program {
	 		name: "stop";
	 		signal: "e,state,selected";
	 		source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}
	}
}
group {
	name: "e/fileman/desktop/scrollframe";
	parts{

		part {
			name: "e.swallow.content";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 {
					relative: 0.0 0.0;
					offset: 50 50;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 50 50;
				}
			}
		}
	}
}


group {
    name: "e/fileman/default/scrollframe";

images {
	image: "img/scroll_overlay2.png" COMP;
	image: "img/vbrunner.png" COMP;
	image: "img/scroll_up.png" COMP;
	image: "img/scroll_up2.png" COMP;
	image: "img/scroll_down.png" COMP;
	image: "img/scroll_down2.png" COMP;
	image: "img/scroll_left.png" COMP;
	image: "img/scroll_left2.png" COMP;
	image: "img/scroll_right.png" COMP;
	image: "img/scroll_right2.png" COMP;
	image: "img/slider.png" COMP;
	image: "img/slider2.png" COMP;
	image: "img/scroll_bg.png" COMP;
	image: "img/hbrunner.png" COMP;
}

    parts {

        part {
            name: "background";
            type: IMAGE;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                rel1 {
                    to: "overlay";
					offset: 0 1;
                }
                rel2 {
                    to: "overlay";
					offset: -1 -1;
                }
                image {
                    normal: "img/scroll_bg.png";
                    border: 7 7 7 7;
                }
				color_class: "scrollframe_base";
            }
        }
        part { name: "e.swallow.bg"; type: SWALLOW;
         //clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "background";
            rel2.to: "background";
         }
			} 
        part {
            name: "item_clip";
            type: RECT;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                rel1 {
                    to: "e.swallow.content";
                    offset: 1 1;
                }
                rel2 {
                    to: "e.swallow.content";
                    offset: -2 -2;
                }
            }
        }
        part {
            name: "e.swallow.content";
            type: SWALLOW;
            clip_to: "item_clip";
            description {
                state: "default" 0.0;
                rel1 {
                    to: "overlay";
                    offset: 0 0;
                }
                rel2 {
                    to: "overlay";
                    offset: 0 0;
                }
            }
        }
        part {
            name: "overlay";
            type: IMAGE;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                rel1 {
                    offset: 5 5;
                }
                rel2 {
                    offset: -4 -5;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
					relative: 0.0 0.0;
                }
                image {
                    normal: "img/scroll_overlay2.png";
                    border: 10 10 10 10;
					middle: 0;
                }
				//color_class: "dialog_base";
            }
        }

		//vertical scrollbar
        part {
            /* rectangle for the runner */
            name: "sb_vbar";
            type: RECT;
            mouse_events: 0;
            description {
                state: "default" 0.0;
                min: 20 15;
                max: 20 9999;
                align: 1.0 0.0;
                color: 255 255 255 255;
                rel1 {
                    relative: 1.0 0.0;
                    offset: 0 5;
                }
                rel2 {
                    relative: 1.0 0.0;
                    offset: -6 -5;
                    to_y: "sb_hbar";
                }
            }
            description {
                state: "hidden" 0.0;
                max: 0 99999;
                visible: 0;
                rel1 {
                    relative: 1.0 0.0;
                    offset: -7 1;
                }
                rel2 {
                    relative: 1.0 0.0;
                    offset: -1 -1;
                    to_y: "sb_hbar";
                }
            }
        }
        part {
            name: "scrollbar_vbar_base";
            type: RECT;
            mouse_events: 0;

            description {
                state: "default" 0.0;
                color: 255 255 255 255;
				visible: 0;
                rel1 {
					to: "sb_vbar";
                    relative: 0.0 0.0;
                    offset: 0 3;
                }
                rel2 {
					to: "sb_vbar";
                    relative: 1.0 1.0;
                    offset: 0 -3;
                }
            }
        }
        part {
            name: "scrollbar_vbar_runner";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
                state: "default" 0.0;
                max: 6 99999;
                min: 6 44;
				fixed: 1 0;
                rel1 {
                    to: "scrollbar_vbar_base";
					offset: 1 0;
                }
                rel2 {
                    to: "scrollbar_vbar_base";
                }
                image {
                    normal: "img/vbrunner.png";
                    border: 4 4 4 4;
                }
				//color_class: "dialog_base";
            }
        }
        part {
            name: "e.dragable.vbar.clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
                state: "default" 0.0;
                min: 19 19;
                max: 19 9999;
                color: 255 255 255 255;
                rel1 {
                    to: "scrollbar_vbar_base";
                    relative: 0.0 0.0;
                    offset: 1 13;
                }
                rel2 {
                    to: "scrollbar_vbar_base";
                    relative: 1.0 1.0;
                    offset: 0 -13;
                }
            }
        }
        part {
            name: "e.dragable.vbar";
            type: IMAGE;
            mouse_events: 1;
            clip_to: "e.dragable.vbar.clip";
            dragable {
                x: 0 0 0;
                y: 1 1 0;
                confine: "e.dragable.vbar.clip";
            }
            description {
                state: "default" 0.0;
                min: 19 19;
                max: 19 19;
				fixed: 1 1;
                rel1 {
                    to: "scrollbar_vbar_base";
                    relative: 0.5 0.5;
                    offset: 0 0;
                }
                rel2 {
                    to: "scrollbar_vbar_base";
                    relative: 0.5 0.5;
                    offset: 0 0;
                }
                image {
                    normal: "img/slider.png";
                    border: 6 6 6 6;
                }
                fill.smooth: 0;
				/* color_class: "dialog_base"; */
            }
            description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "img/slider2.png";
            }
        }
        part {
            name: "sb_vbar_a1";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 20 18;
               align: 0.5 0.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  0.0;
                  offset: 4   0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  0.0;
                  offset: -1   0;
               }
            }
         }
        part {
            name: "sb_vbar_a1_arrow";
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 20 18;
               rel1.to: "sb_vbar_a1";
               rel2.to: "sb_vbar_a1";
               image.normal: "img/scroll_up.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_up2.png";
            }
         }
        part {
            name: "sb_vbar_a2";
            type: RECT;
            clip_to: "sb_vbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 20 18;
               align: 0.5 1.0;
               aspect: 1.0 1.0;
               aspect_preference: HORIZONTAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_vbar";
                  relative: 0.0  1.0;
                  offset: 4    0;
               }
               rel2 {
                  to: "sb_vbar";
                  relative: 1.0  1.0;
                  offset: -1   0;
               }
            }
         }
        part {
            name: "sb_vbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_vbar";
            description {
               state: "default" 0.0;
               max: 20 18;
               rel1.to: "sb_vbar_a2";
               rel2.to: "sb_vbar_a2";
               image.normal: "img/scroll_down.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
				image.normal: "img/scroll_down2.png";
            }
         }

        // horizontal scrollbar 
        part {
            name: "sb_hbar";
            type: RECT;
            mouse_events: 0;
			description {
                state: "default" 0.0;
                visible: 0;
                rel1 {
                    relative: 0.0 1.0;
                    offset: 0 -4;
                }
                rel2 {
                    to_x: "sb_vbar";
                    relative: 0.0 1.0;
                    offset: -1 -1;
                }
            }
            description {
                state: "show" 0.0;
                min: 15 17;
                max: 9999 17;
				fixed: 0 1;
                align: 0.0 1.0;
                color: 255 255 255 255;
                rel1 {
                    relative: 0.0 1.0;
                    offset: 5 -16;
                }
                rel2 {
                    to_x: "sb_vbar";
                    relative: 0.0 1.0;
                    offset: -5 -5;
                }
            }
        }
        part {
            name: "sb_hbar_base";
            type: RECT;
            mouse_events: 1;
            clip_to: "sb_hbar";
            description {
                state: "default" 0.0;
                color: 0 0 0 0;
                rel1 {
                    to: "sb_hbar";
                    relative: 0.0 0.0;
                    offset: 3 0;
                }
                rel2 {
                    to: "sb_hbar";
                    relative: 1.0 1.0;
                    offset: -3 0;
                }
            }
        }
        part {
            name: "sb_hbar_runner";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
                state: "default" 0.0;
                min: 55 6;
                max: 99999 6;
				fixed: 0 1;
                rel1 {
                    to: "sb_hbar_base";
					offset: 0 1;
                }
                rel2 {
                    to: "sb_hbar_base";
                }
                image {
                    normal: "img/hbrunner.png";
                    border: 4 4 4 4;
                }
				//color_class: "dialog_base";
            }
        }
        part {
            name: "e.dragable.hbar.clip";
            type: RECT;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
                state: "default" 0.0;
                min: 19 19;
                max: 9999 19;
                fixed: 1 1;
                color: 255 255 255 250;
                rel1 {
                    to: "sb_hbar_base";
                    relative: 0.0 0.0;
                    offset: 13 0;
                }
                rel2 {
                    to: "sb_hbar_base";
                    relative: 1.0 1.0;
                    offset: -13 0;
                }
            }
        }
        part {
            name: "e.dragable.hbar";
            type: IMAGE;
            mouse_events: 1;
            clip_to: "e.dragable.hbar.clip";
            dragable {
                x: 1 1 0;
                y: 0 0 0;
                confine: "e.dragable.hbar.clip";
            }
            description {
                state: "default" 0.0;
                min: 19 19;
                max: 19 19;
                fixed: 1 1;
                rel1 {
                    to: "sb_hbar_base";
                    relative: 0.5 0.5;
                }
                rel2 {
                    to: "sb_hbar_base";
                    relative: 0.5 0.5;
                }
                image {
                    normal: "img/slider.png";
                    border: 6 6 6 6;
                }
                fill.smooth: 0;
				/* color_class: "dialog_base"; */
            }
            description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                image.normal: "img/slider2.png";
            }
        }
        part {
            name: "sb_hbar_a1";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 18 20;
               align: 0.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 0.0  0.0;
                  offset: 1    3;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 0.0  1.0;
                  offset: 0   -1;
               }
            }
         }
        part {
            name: "sb_hbar_a1_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 18 20;
               rel1.to: "sb_hbar_a1";
               rel2.to: "sb_hbar_a1";
               image.normal: "img/scroll_left.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_left2.png";
            }
         }
        part {
            name: "sb_hbar_a2";
            type: RECT;
            clip_to: "sb_hbar";
            mouse_events: 1;
            description {
               state: "default" 0.0;
               min: 18 20;
               align: 1.0 0.5;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
               color: 0 0 0 0;
               rel1 {
                  to: "sb_hbar";
                  relative: 1.0  0.0;
                  offset: -1    3;
               }
               rel2 {
                  to: "sb_hbar";
                  relative: 1.0  1.0;
                  offset: 1   -1;
               }
            }
         }
        part {
            name: "sb_hbar_a2_arrow";
            type: IMAGE;
            mouse_events: 0;
            clip_to: "sb_hbar";
            description {
               state: "default" 0.0;
               max: 18 20;
               rel1.to: "sb_hbar_a2";
               rel2.to: "sb_hbar_a2";
               image.normal: "img/scroll_right.png";
            }
            description {
               state: "clicked" 0.0;
               inherit: "default" 0.0;
               image.normal: "img/scroll_right2.png";
            }
         }

    }
    // vertical programs 
    programs {
        program {
            name: "scrollframe_vbar_rect_show";
            signal: "e,action,show,vbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar";
        }
        program {
            name: "scrollframe_vbar_rect_hide";
            signal: "e,action,hide,vbar";
            source: "e";
            action: STATE_SET "hidden" 0.0;
            target: "sb_vbar";
        }
        program {
            name: "sb_vbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a1_arrow";
         }
        program {
            name: "sb_vbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a1_arrow";
         }
        program {
            name: "sb_vbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a1";
            action: DRAG_VAL_STEP 0.0 -1.0;
            target: "e.dragable.vbar";
        }
        program {
            name: "sb_vbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_vbar_a2_arrow";
         }

        program {
            name: "sb_vbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_vbar_a2";
            action: DRAG_VAL_STEP 0.0 1.0;
            target: "e.dragable.vbar";
        }
        
        program {
            name: "sb_vbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_vbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_vbar_a2_arrow";
         }
        program {
            name: "sb_vbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p1";
            action: DRAG_VAL_PAGE 0.0 -1.0;
            target: "e.dragable.vbar";
        }
        program {
            name: "sb_vbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_vbar_p2";
            action: DRAG_VAL_PAGE 0.0 1.0;
            target: "e.dragable.vbar";
        }
        program {
            name: "sb_vbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.vbar";
            action: STATE_SET "clicked" 0.0;
            transition: LINEAR 0.0;
            target: "e.dragable.vbar";
        }
        program {
            name: "sb_vbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.vbar";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "e.dragable.vbar";
        }
        // horizontal programs 
        program {
            name: "sb_hbar_show";
            signal: "e,action,show,hbar";
            source: "e";
            action: STATE_SET "show" 0.0;
            target: "sb_hbar";
        }
        program {
            name: "sb_hbar_hide";
            signal: "e,action,hide,hbar";
            source: "e";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar";
        }
        program {
            name: "sb_hbar_a1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a1_arrow";
         }
        program {
            name: "sb_hbar_a1_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a1";
            action: DRAG_VAL_STEP -1.0 0.0;
            target: "e.dragable.hbar";
         }
        program {
            name: "sb_hbar_a1_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a1";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a1_arrow";
         }
        program {
            name: "sb_hbar_a2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: STATE_SET "clicked" 0.0;
            target: "sb_hbar_a2_arrow";
         }
        program {
            name: "sb_hbar_a2_down2";
            signal: "mouse,down,1";
            source: "sb_hbar_a2";
            action: DRAG_VAL_STEP 1.0 0.0;
            target: "e.dragable.hbar";
         }
        program {
            name: "sb_hbar_a2_up";
            signal: "mouse,up,1";
            source: "sb_hbar_a2";
            action: STATE_SET "default" 0.0;
            target: "sb_hbar_a2_arrow";
         }
        program {
            name: "sb_hbar_p1_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p1";
            action: DRAG_VAL_PAGE -1.0 0.0;
            target: "e.dragable.hbar";
        }
        program {
            name: "sb_hbar_p2_down";
            signal: "mouse,down,1";
            source: "sb_hbar_p2";
            action: DRAG_VAL_PAGE 1.0 0.0;
            target: "e.dragable.hbar";
        }
        program {
            name: "sb_hbar_down";
            signal: "mouse,down,1";
            source: "e.dragable.hbar";
            action: STATE_SET "clicked" 0.0;
            transition: LINEAR 0.0;
            target: "e.dragable.hbar";
        }
        program {
            name: "sb_hbar_up";
            signal: "mouse,up,1";
            source: "e.dragable.hbar";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.0;
            target: "e.dragable.hbar";
        }
        
          program {
          name: "sb_hbar_in";
          signal: "mouse,in";
          source: "e.dragable.hbar";
          action:  STATE_SET "hilited" 0.0;
          target: "e.dragable.hbar";
      //    target: "hbar_stipple";
          }
          program {
          name: "sb_hbar_out";
          signal: "mouse,out";
          source: "e.dragable.hbar";
          action:  STATE_SET "default" 0.0;
          target: "e.dragable.hbar";
       //   target: "hbar_stipple";
          }
        /*  program {
          name: "sb_hbar_a1_down";
          signal: "mouse,down,1";
          source: "sb_hbar_a1";
          action: STATE_SET "clicked" 0.0;
          transition: DECELERATE 0.15;
          target: "arrow_a1";
          }
          program {
          name: "sb_hbar_a1_up";
          signal: "mouse,up,1";
          source: "sb_hbar_a1";
          action: STATE_SET "default" 0.0;
          transition: DECELERATE 0.5;
          target: "arrow_a1";
          }
          program {
          name: "sb_hbar_a2_down";
          signal: "mouse,down,1";
          source: "sb_hbar_a2";
          action: STATE_SET "clicked" 0.0;
          transition: DECELERATE 0.15;
          target: "arrow_a2";
          }
          program {
          name: "sb_hbar_a2_up";
          signal: "mouse,up,1";
          source: "sb_hbar_a2";
          action: STATE_SET "default" 0.0;
          transition: DECELERATE 0.5;
          target: "arrow_a2";
          } */
	}
}

group {
	name: "e/fileman/default/rubberband";
	parts {

		part {
			name: "middle";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 60;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: 6 6;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
					offset: -6 -6;
				}
				image {
					normal: "img/rubber_bg.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 240 240;
					}
				}
			}
		}

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 16 16;
				//aspect: 1.0 1.0;
				image {
					normal: "img/rubber.png";
					border: 10 10 10 10;
					middle: 0;
				}
			}
		}
	}
}

group { name: "e/fileman/popup/default";
data.item: "shaped" "1";
	images {
		image: "img/popup_base.png" COMP;
		image: "img/popup_shadow.png" COMP;
	}
	parts {
         part {
            name: "shadow";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               align: 0.5 0.0;
               color_class: "menu_base";
               image {
                  normal: "img/popup_shadow.png";
                  border: 15 15 15 15;
               }
            }
         }
         part {
            name: "base";
            mouse_events: 0;
            description {
               state: "default" 0.0;
               rel1 {
					offset: 6 6;
					to: "shadow";
				}
				rel2 {
					offset: -8 -8;
					to: "shadow";
					}
               image {
                  normal: "img/popup_base.png";
                  border: 6 6 6 6;
               }
               fill.smooth: 0;
            }
         }
       part {
			name: "e.text.title"; type: TEXT; effect: OUTLINE_SHADOW;
			mouse_events: 0;
			scale: 1;
			description { state: "default" 0.0;
				color_class: "fileman_popup_title";
				rel1.relative: 0.0 0.0;
				rel1.offset: 8 6;
				rel2.relative: 1.0 0.0;
				rel2.offset: -8 3;
				align: 0.5 0.0;
				color: 255 255 255 255;
				color2: 255 255 255 255;
				color3: 255 255 255 255;
				text { font: "Sans:style=Bold"; size: 12;
					text_class: "fileman_popup_title";
					align: 0.5 0.0;
					min: 0 1;
					}
				fixed: 0 1;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 12 1;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.text.title";
            rel2.offset: -13 -12;
         }
      }  
   }
}
